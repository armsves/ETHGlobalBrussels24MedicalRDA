{"id":"1c696e200f886a116876e2ed04e658fd","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overriden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Base64.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Base64.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides a set of functions to operate with Base64 strings.\n *\n * _Available since v4.5._\n */\nlibrary Base64 {\n    /**\n     * @dev Base64 Encoding/Decoding Table\n     */\n    string internal constant _TABLE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n    /**\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\n     */\n    function encode(bytes memory data) internal pure returns (string memory) {\n        /**\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\n         */\n        if (data.length == 0) return \"\";\n\n        // Loads the table into memory\n        string memory table = _TABLE;\n\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\n        // and split into 4 numbers of 6 bits.\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\n        // - `data.length + 2`  -> Round up\n        // - `/ 3`              -> Number of 3-bytes chunks\n        // - `4 *`              -> 4 characters for each chunk\n        string memory result = new string(4 * ((data.length + 2) / 3));\n\n        assembly {\n            // Prepare the lookup table (skip the first \"length\" byte)\n            let tablePtr := add(table, 1)\n\n            // Prepare result pointer, jump over length\n            let resultPtr := add(result, 32)\n\n            // Run over the input, 3 bytes at a time\n            for {\n                let dataPtr := data\n                let endPtr := add(data, mload(data))\n            } lt(dataPtr, endPtr) {\n\n            } {\n                // Advance 3 bytes\n                dataPtr := add(dataPtr, 3)\n                let input := mload(dataPtr)\n\n                // To write each character, shift the 3 bytes (18 bits) chunk\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\n                // and apply logical AND with 0x3F which is the number of\n                // the previous character in the ASCII table prior to the Base64 Table\n                // The result is then added to the table to get the character to write,\n                // and finally write it in the result pointer but with a left shift\n                // of 256 (1 byte) - 8 (1 ASCII char) = 248 bits\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n            }\n\n            // When data `bytes` is not exactly 3 bytes long\n            // it is padded with `=` characters at the end\n            switch mod(mload(data), 3)\n            case 1 {\n                mstore8(sub(resultPtr, 1), 0x3d)\n                mstore8(sub(resultPtr, 2), 0x3d)\n            }\n            case 2 {\n                mstore8(sub(resultPtr, 1), 0x3d)\n            }\n        }\n\n        return result;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"},"src/MedicalRecords.sol":{"content":"pragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Base64.sol\";\n\ncontract MedicalRecords is ERC721, Ownable {\n    event ReportCreated(uint256 reportId);\n\n    uint256 public nextReportId;\n\n    struct AvailMetadata {\n        bytes32 blockHash;\n        bytes32 txHash;\n        string reportName;\n    }\n\n    mapping(uint256 => AvailMetadata) public reportMetadata;  \n\n    constructor(address initialOwner)\n        ERC721(\"Medical Records\", \"MEDREC\")\n    {\n        transferOwnership(initialOwner);\n    }\n\n    \n\n    function storePatientData(AvailMetadata memory _reportMetadata) public onlyOwner {\n        uint256 tokenId = nextReportId++;\n\n        reportMetadata[tokenId].blockHash = _reportMetadata.blockHash;\n        reportMetadata[tokenId].txHash = _reportMetadata.txHash;\n        reportMetadata[tokenId].reportName = _reportMetadata.reportName;\n\n        _mint(msg.sender, tokenId);\n\n        emit ReportCreated(tokenId);\n    }\n\n    function tokenURI(uint256 tokenId)\n    public\n    view\n    override(ERC721)\n    returns (string memory)\n    {\n        string memory url = \"https://storage.googleapis.com/opensea-prod.appspot.com/puffs/1.png\";\n\n        string memory name = reportMetadata[tokenId].reportName;\n\n        bytes memory dataURI = abi.encodePacked(\n            \"{\",\n            '\"image\": \"',\n            url,\n            '\",',\n             '\"name\": \"',\n            name,\n            '\"'\n            \"}\"\n        );\n\n        return\n            string(\n                abi.encodePacked(\n                    \"data:application/json;base64,\",\n                    Base64.encode(dataURI)\n                )\n            );\n    }\n\n\n    // The following functions are overrides required by Solidity.\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        override(ERC721)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":100},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> src/MedicalRecords.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"src/MedicalRecords.sol","start":-1},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1495],"Ownable":[104]},"id":105,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":105,"sourceUnit":1496,"src":"112:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1495,"src":"668:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"668:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"144:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":104,"linearizedBaseContracts":[104,1495],"name":"Ownable","nameLocation":"657:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"698:6:0","nodeType":"VariableDeclaration","scope":104,"src":"682:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"682:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nameLocation":"717:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"754:13:0","nodeType":"VariableDeclaration","scope":13,"src":"738:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"738:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"785:8:0","nodeType":"VariableDeclaration","scope":13,"src":"769:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"769:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"737:57:0"},"src":"711:84:0"},{"body":{"id":22,"nodeType":"Block","src":"911:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"940:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"940:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"921:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"921:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"921:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"801:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"908:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"911:0:0"},"scope":104,"src":"897:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":31,"nodeType":"Block","src":"1091:30:0","statements":[{"expression":{"id":29,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1108:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":28,"id":30,"nodeType":"Return","src":"1101:13:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"966:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":32,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1045:5:0","nodeType":"FunctionDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1050:2:0"},"returnParameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":32,"src":"1082:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1082:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1081:9:0"},"scope":104,"src":"1036:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":45,"nodeType":"Block","src":"1230:96:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":40,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":36,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"1248:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1248:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":38,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"1259:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1259:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1248:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":41,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1273:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":35,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1240:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":42,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1240:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43,"nodeType":"ExpressionStatement","src":"1240:68:0"},{"id":44,"nodeType":"PlaceholderStatement","src":"1318:1:0"}]},"documentation":{"id":33,"nodeType":"StructuredDocumentation","src":"1127:77:0","text":" @dev Throws if called by any account other than the owner."},"id":46,"name":"onlyOwner","nameLocation":"1218:9:0","nodeType":"ModifierDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[],"src":"1227:2:0"},"src":"1209:117:0","virtual":false,"visibility":"internal"},{"body":{"id":59,"nodeType":"Block","src":"1722:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":55,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":54,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1751:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":53,"name":"address","nodeType":"ElementaryTypeName","src":"1751:7:0","typeDescriptions":{}}},"id":56,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1751:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":52,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"1732:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1732:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":58,"nodeType":"ExpressionStatement","src":"1732:30:0"}]},"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"1332:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":60,"implemented":true,"kind":"function","modifiers":[{"id":50,"kind":"modifierInvocation","modifierName":{"id":49,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":46,"src":"1712:9:0"},"nodeType":"ModifierInvocation","src":"1712:9:0"}],"name":"renounceOwnership","nameLocation":"1677:17:0","nodeType":"FunctionDefinition","parameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1694:2:0"},"returnParameters":{"id":51,"nodeType":"ParameterList","parameters":[],"src":"1722:0:0"},"scope":104,"src":"1668:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":82,"nodeType":"Block","src":"1988:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":69,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"2006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":72,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2026:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":71,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2018:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2018:7:0","typeDescriptions":{}}},"id":73,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2018:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2006:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":75,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2030:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":68,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1998:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":76,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1998:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":77,"nodeType":"ExpressionStatement","src":"1998:73:0"},{"expression":{"arguments":[{"id":79,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"2100:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":78,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"2081:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2081:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":81,"nodeType":"ExpressionStatement","src":"2081:28:0"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"1775:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":83,"implemented":true,"kind":"function","modifiers":[{"id":66,"kind":"modifierInvocation","modifierName":{"id":65,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":46,"src":"1978:9:0"},"nodeType":"ModifierInvocation","src":"1978:9:0"}],"name":"transferOwnership","nameLocation":"1927:17:0","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"newOwner","nameLocation":"1953:8:0","nodeType":"VariableDeclaration","scope":83,"src":"1945:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"1945:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1944:18:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[],"src":"1988:0:0"},"scope":104,"src":"1918:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":102,"nodeType":"Block","src":"2333:124:0","statements":[{"assignments":[90],"declarations":[{"constant":false,"id":90,"mutability":"mutable","name":"oldOwner","nameLocation":"2351:8:0","nodeType":"VariableDeclaration","scope":102,"src":"2343:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89,"name":"address","nodeType":"ElementaryTypeName","src":"2343:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":92,"initialValue":{"id":91,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2362:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2343:25:0"},{"expression":{"id":95,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":93,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2378:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":94,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"2387:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2378:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":96,"nodeType":"ExpressionStatement","src":"2378:17:0"},{"eventCall":{"arguments":[{"id":98,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"2431:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":99,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"2441:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":97,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2410:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2410:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":101,"nodeType":"EmitStatement","src":"2405:45:0"}]},"documentation":{"id":84,"nodeType":"StructuredDocumentation","src":"2122:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":103,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2279:18:0","nodeType":"FunctionDefinition","parameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"newOwner","nameLocation":"2306:8:0","nodeType":"VariableDeclaration","scope":103,"src":"2298:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"2298:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2297:18:0"},"returnParameters":{"id":88,"nodeType":"ParameterList","parameters":[],"src":"2333:0:0"},"scope":104,"src":"2270:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":105,"src":"639:1820:0","usedErrors":[]}],"src":"87:2373:0"},"id":0},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[1426],"Context":[1495],"ERC165":[1722],"ERC721":[970],"IERC165":[1734],"IERC721":[1086],"IERC721Metadata":[1131],"IERC721Receiver":[1104],"Strings":[1698]},"id":971,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":106,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":107,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":971,"sourceUnit":1087,"src":"132:23:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":108,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":971,"sourceUnit":1105,"src":"156:31:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":109,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":971,"sourceUnit":1132,"src":"188:42:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":110,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":971,"sourceUnit":1427,"src":"231:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":111,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":971,"sourceUnit":1496,"src":"265:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":112,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":971,"sourceUnit":1699,"src":"299:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":113,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":971,"sourceUnit":1723,"src":"333:46:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":115,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1495,"src":"647:7:1"},"id":116,"nodeType":"InheritanceSpecifier","src":"647:7:1"},{"baseName":{"id":117,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":1722,"src":"656:6:1"},"id":118,"nodeType":"InheritanceSpecifier","src":"656:6:1"},{"baseName":{"id":119,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1086,"src":"664:7:1"},"id":120,"nodeType":"InheritanceSpecifier","src":"664:7:1"},{"baseName":{"id":121,"name":"IERC721Metadata","nodeType":"IdentifierPath","referencedDeclaration":1131,"src":"673:15:1"},"id":122,"nodeType":"InheritanceSpecifier","src":"673:15:1"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":114,"nodeType":"StructuredDocumentation","src":"381:246:1","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":970,"linearizedBaseContracts":[970,1131,1086,1722,1734,1495],"name":"ERC721","nameLocation":"637:6:1","nodeType":"ContractDefinition","nodes":[{"id":125,"libraryName":{"id":123,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":1426,"src":"701:7:1"},"nodeType":"UsingForDirective","src":"695:26:1","typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"id":128,"libraryName":{"id":126,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":1698,"src":"732:7:1"},"nodeType":"UsingForDirective","src":"726:26:1","typeName":{"id":127,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":130,"mutability":"mutable","name":"_name","nameLocation":"791:5:1","nodeType":"VariableDeclaration","scope":970,"src":"776:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":129,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":132,"mutability":"mutable","name":"_symbol","nameLocation":"838:7:1","nodeType":"VariableDeclaration","scope":970,"src":"823:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":131,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":136,"mutability":"mutable","name":"_owners","nameLocation":"934:7:1","nodeType":"VariableDeclaration","scope":970,"src":"898:43:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":135,"keyType":{"id":133,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":134,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":140,"mutability":"mutable","name":"_balances","nameLocation":"1028:9:1","nodeType":"VariableDeclaration","scope":970,"src":"992:45:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":139,"keyType":{"id":137,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":138,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":144,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1129:15:1","nodeType":"VariableDeclaration","scope":970,"src":"1093:51:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":143,"keyType":{"id":141,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":142,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":150,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1252:18:1","nodeType":"VariableDeclaration","scope":970,"src":"1199:71:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":149,"keyType":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":148,"keyType":{"id":146,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":147,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":166,"nodeType":"Block","src":"1446:57:1","statements":[{"expression":{"id":160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":158,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"1456:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":159,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"1464:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":161,"nodeType":"ExpressionStatement","src":"1456:13:1"},{"expression":{"id":164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":162,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"1479:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":163,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"1489:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":165,"nodeType":"ExpressionStatement","src":"1479:17:1"}]},"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"1277:108:1","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":167,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"name_","nameLocation":"1416:5:1","nodeType":"VariableDeclaration","scope":167,"src":"1402:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":152,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"symbol_","nameLocation":"1437:7:1","nodeType":"VariableDeclaration","scope":167,"src":"1423:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":154,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:1"},"returnParameters":{"id":157,"nodeType":"ParameterList","parameters":[],"src":"1446:0:1"},"scope":970,"src":"1390:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1721,1733],"body":{"id":197,"nodeType":"Block","src":"1678:192:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":178,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"1707:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":180,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"1727:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1086_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1086_$","typeString":"type(contract IERC721)"}],"id":179,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1722:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1086","typeString":"type(contract IERC721)"}},"id":182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":184,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"1763:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":186,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"1783:15:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1131_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1131_$","typeString":"type(contract IERC721Metadata)"}],"id":185,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1778:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1131","typeString":"type(contract IERC721Metadata)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":193,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"1851:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":191,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$970_$","typeString":"type(contract super ERC721)"}},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1721,"src":"1827:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1827:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":177,"id":196,"nodeType":"Return","src":"1688:175:1"}]},"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"1509:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":198,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1579:17:1","nodeType":"FunctionDefinition","overrides":{"id":174,"nodeType":"OverrideSpecifier","overrides":[{"id":172,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":1722,"src":"1646:6:1"},{"id":173,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":1734,"src":"1654:7:1"}],"src":"1637:25:1"},"parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"interfaceId","nameLocation":"1604:11:1","nodeType":"VariableDeclaration","scope":198,"src":"1597:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":169,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:1"},"returnParameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":198,"src":"1672:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":175,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:1"},"scope":970,"src":"1570:300:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1011],"body":{"id":221,"nodeType":"Block","src":"2010:124:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":208,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"2028:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:1","typeDescriptions":{}}},"id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2037:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373","id":214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:44:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","typeString":"literal_string \"ERC721: balance query for the zero address\""},"value":"ERC721: balance query for the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","typeString":"literal_string \"ERC721: balance query for the zero address\""}],"id":207,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2020:74:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":216,"nodeType":"ExpressionStatement","src":"2020:74:1"},{"expression":{"baseExpression":{"id":217,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2111:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":219,"indexExpression":{"id":218,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"2121:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2111:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":206,"id":220,"nodeType":"Return","src":"2104:23:1"}]},"documentation":{"id":199,"nodeType":"StructuredDocumentation","src":"1876:48:1","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":222,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1938:9:1","nodeType":"FunctionDefinition","overrides":{"id":203,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:1"},"parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"owner","nameLocation":"1956:5:1","nodeType":"VariableDeclaration","scope":222,"src":"1948:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":200,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:1"},"returnParameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":222,"src":"2001:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:1"},"scope":970,"src":"1929:205:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1019],"body":{"id":249,"nodeType":"Block","src":"2272:154:1","statements":[{"assignments":[232],"declarations":[{"constant":false,"id":232,"mutability":"mutable","name":"owner","nameLocation":"2290:5:1","nodeType":"VariableDeclaration","scope":249,"src":"2282:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":231,"name":"address","nodeType":"ElementaryTypeName","src":"2282:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":236,"initialValue":{"baseExpression":{"id":233,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"2298:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":235,"indexExpression":{"id":234,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"2306:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2298:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2282:32:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":238,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"2332:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2341:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:1","typeDescriptions":{}}},"id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2341:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2332:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2353:43:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397","typeString":"literal_string \"ERC721: owner query for nonexistent token\""},"value":"ERC721: owner query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397","typeString":"literal_string \"ERC721: owner query for nonexistent token\""}],"id":237,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2324:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2324:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":246,"nodeType":"ExpressionStatement","src":"2324:73:1"},{"expression":{"id":247,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"2414:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":230,"id":248,"nodeType":"Return","src":"2407:12:1"}]},"documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"2140:46:1","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":250,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2200:7:1","nodeType":"FunctionDefinition","overrides":{"id":227,"nodeType":"OverrideSpecifier","overrides":[],"src":"2245:8:1"},"parameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"tokenId","nameLocation":"2216:7:1","nodeType":"VariableDeclaration","scope":250,"src":"2208:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"2208:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2207:17:1"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":250,"src":"2263:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"2263:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2262:9:1"},"scope":970,"src":"2191:235:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1116],"body":{"id":259,"nodeType":"Block","src":"2557:29:1","statements":[{"expression":{"id":257,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"2574:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":256,"id":258,"nodeType":"Return","src":"2567:12:1"}]},"documentation":{"id":251,"nodeType":"StructuredDocumentation","src":"2432:51:1","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":260,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2497:4:1","nodeType":"FunctionDefinition","overrides":{"id":253,"nodeType":"OverrideSpecifier","overrides":[],"src":"2524:8:1"},"parameters":{"id":252,"nodeType":"ParameterList","parameters":[],"src":"2501:2:1"},"returnParameters":{"id":256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":260,"src":"2542:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":254,"name":"string","nodeType":"ElementaryTypeName","src":"2542:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2541:15:1"},"scope":970,"src":"2488:98:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1122],"body":{"id":269,"nodeType":"Block","src":"2721:31:1","statements":[{"expression":{"id":267,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"2738:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":266,"id":268,"nodeType":"Return","src":"2731:14:1"}]},"documentation":{"id":261,"nodeType":"StructuredDocumentation","src":"2592:53:1","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":270,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2659:6:1","nodeType":"FunctionDefinition","overrides":{"id":263,"nodeType":"OverrideSpecifier","overrides":[],"src":"2688:8:1"},"parameters":{"id":262,"nodeType":"ParameterList","parameters":[],"src":"2665:2:1"},"returnParameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":270,"src":"2706:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":264,"name":"string","nodeType":"ElementaryTypeName","src":"2706:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2705:15:1"},"scope":970,"src":"2650:102:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1130],"body":{"id":311,"nodeType":"Block","src":"2906:241:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":281,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"2932:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":280,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"2924:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2924:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2942:49:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","typeString":"literal_string \"ERC721Metadata: URI query for nonexistent token\""},"value":"ERC721Metadata: URI query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","typeString":"literal_string \"ERC721Metadata: URI query for nonexistent token\""}],"id":279,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2916:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2916:76:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"ExpressionStatement","src":"2916:76:1"},{"assignments":[287],"declarations":[{"constant":false,"id":287,"mutability":"mutable","name":"baseURI","nameLocation":"3017:7:1","nodeType":"VariableDeclaration","scope":311,"src":"3003:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":286,"name":"string","nodeType":"ElementaryTypeName","src":"3003:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":290,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":288,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"3027:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3027:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"3003:34:1"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":293,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"3060:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3054:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":291,"name":"bytes","nodeType":"ElementaryTypeName","src":"3054:5:1","typeDescriptions":{}}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3054:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3054:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3078:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3054:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3138:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3054:86:1","trueExpression":{"arguments":[{"arguments":[{"id":302,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"3106:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":303,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"3115:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1580,"src":"3115:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3115:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":300,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3089:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3089:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3089:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3082:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":298,"name":"string","nodeType":"ElementaryTypeName","src":"3082:6:1","typeDescriptions":{}}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3082:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":278,"id":310,"nodeType":"Return","src":"3047:93:1"}]},"documentation":{"id":271,"nodeType":"StructuredDocumentation","src":"2758:55:1","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":312,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2827:8:1","nodeType":"FunctionDefinition","overrides":{"id":275,"nodeType":"OverrideSpecifier","overrides":[],"src":"2873:8:1"},"parameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"tokenId","nameLocation":"2844:7:1","nodeType":"VariableDeclaration","scope":312,"src":"2836:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":272,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:17:1"},"returnParameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":312,"src":"2891:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":276,"name":"string","nodeType":"ElementaryTypeName","src":"2891:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2890:15:1"},"scope":970,"src":"2818:329:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":320,"nodeType":"Block","src":"3454:26:1","statements":[{"expression":{"hexValue":"","id":318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3471:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":317,"id":319,"nodeType":"Return","src":"3464:9:1"}]},"documentation":{"id":313,"nodeType":"StructuredDocumentation","src":"3153:230:1","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."},"id":321,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3397:8:1","nodeType":"FunctionDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[],"src":"3405:2:1"},"returnParameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":321,"src":"3439:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":315,"name":"string","nodeType":"ElementaryTypeName","src":"3439:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3438:15:1"},"scope":970,"src":"3388:92:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1047],"body":{"id":363,"nodeType":"Block","src":"3607:331:1","statements":[{"assignments":[331],"declarations":[{"constant":false,"id":331,"mutability":"mutable","name":"owner","nameLocation":"3625:5:1","nodeType":"VariableDeclaration","scope":363,"src":"3617:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"3617:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":336,"initialValue":{"arguments":[{"id":334,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"3648:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":332,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"3633:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$970_$","typeString":"type(contract ERC721)"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":250,"src":"3633:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3633:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3617:39:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":338,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"3674:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":339,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"3680:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3674:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3687:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":337,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3666:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3666:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":343,"nodeType":"ExpressionStatement","src":"3666:57:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":345,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"3755:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3755:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":347,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"3771:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3755:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":350,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"3797:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":351,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"3804:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3804:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":349,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"3780:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3780:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3755:62:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c","id":355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3831:58:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d","typeString":"literal_string \"ERC721: approve caller is not owner nor approved for all\""},"value":"ERC721: approve caller is not owner nor approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d","typeString":"literal_string \"ERC721: approve caller is not owner nor approved for all\""}],"id":344,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3734:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3734:165:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":357,"nodeType":"ExpressionStatement","src":"3734:165:1"},{"expression":{"arguments":[{"id":359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"3919:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":360,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"3923:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":358,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"3910:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3910:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":362,"nodeType":"ExpressionStatement","src":"3910:21:1"}]},"documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"3486:46:1","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":364,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3546:7:1","nodeType":"FunctionDefinition","overrides":{"id":328,"nodeType":"OverrideSpecifier","overrides":[],"src":"3598:8:1"},"parameters":{"id":327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":324,"mutability":"mutable","name":"to","nameLocation":"3562:2:1","nodeType":"VariableDeclaration","scope":364,"src":"3554:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":326,"mutability":"mutable","name":"tokenId","nameLocation":"3574:7:1","nodeType":"VariableDeclaration","scope":364,"src":"3566:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"3566:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3553:29:1"},"returnParameters":{"id":329,"nodeType":"ParameterList","parameters":[],"src":"3607:0:1"},"scope":970,"src":"3537:401:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1055],"body":{"id":384,"nodeType":"Block","src":"4084:132:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":375,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"4110:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":374,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"4102:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4102:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4120:46:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","typeString":"literal_string \"ERC721: approved query for nonexistent token\""},"value":"ERC721: approved query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","typeString":"literal_string \"ERC721: approved query for nonexistent token\""}],"id":373,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4094:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4094:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":379,"nodeType":"ExpressionStatement","src":"4094:73:1"},{"expression":{"baseExpression":{"id":380,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"4185:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":382,"indexExpression":{"id":381,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"4201:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4185:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":372,"id":383,"nodeType":"Return","src":"4178:31:1"}]},"documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"3944:50:1","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":385,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4008:11:1","nodeType":"FunctionDefinition","overrides":{"id":369,"nodeType":"OverrideSpecifier","overrides":[],"src":"4057:8:1"},"parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":367,"mutability":"mutable","name":"tokenId","nameLocation":"4028:7:1","nodeType":"VariableDeclaration","scope":385,"src":"4020:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"4020:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4019:17:1"},"returnParameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":385,"src":"4075:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":370,"name":"address","nodeType":"ElementaryTypeName","src":"4075:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4074:9:1"},"scope":970,"src":"3999:217:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1063],"body":{"id":401,"nodeType":"Block","src":"4367:69:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":395,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"4396:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4396:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":397,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"4410:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":398,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"4420:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":394,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"4377:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4377:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":400,"nodeType":"ExpressionStatement","src":"4377:52:1"}]},"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"4222:56:1","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":402,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4292:17:1","nodeType":"FunctionDefinition","overrides":{"id":392,"nodeType":"OverrideSpecifier","overrides":[],"src":"4358:8:1"},"parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"operator","nameLocation":"4318:8:1","nodeType":"VariableDeclaration","scope":402,"src":"4310:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"approved","nameLocation":"4333:8:1","nodeType":"VariableDeclaration","scope":402,"src":"4328:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":389,"name":"bool","nodeType":"ElementaryTypeName","src":"4328:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4309:33:1"},"returnParameters":{"id":393,"nodeType":"ParameterList","parameters":[],"src":"4367:0:1"},"scope":970,"src":"4283:153:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1073],"body":{"id":419,"nodeType":"Block","src":"4605:59:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":413,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4622:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":415,"indexExpression":{"id":414,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"4641:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4622:25:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":417,"indexExpression":{"id":416,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"4648:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4622:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":412,"id":418,"nodeType":"Return","src":"4615:42:1"}]},"documentation":{"id":403,"nodeType":"StructuredDocumentation","src":"4442:55:1","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":420,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4511:16:1","nodeType":"FunctionDefinition","overrides":{"id":409,"nodeType":"OverrideSpecifier","overrides":[],"src":"4581:8:1"},"parameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":405,"mutability":"mutable","name":"owner","nameLocation":"4536:5:1","nodeType":"VariableDeclaration","scope":420,"src":"4528:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":404,"name":"address","nodeType":"ElementaryTypeName","src":"4528:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":407,"mutability":"mutable","name":"operator","nameLocation":"4551:8:1","nodeType":"VariableDeclaration","scope":420,"src":"4543:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4527:33:1"},"returnParameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":420,"src":"4599:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":410,"name":"bool","nodeType":"ElementaryTypeName","src":"4599:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4598:6:1"},"scope":970,"src":"4502:162:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1039],"body":{"id":446,"nodeType":"Block","src":"4845:211:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"4934:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4934:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":435,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"4948:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":432,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4915:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4915:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564","id":437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4958:51:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","typeString":"literal_string \"ERC721: transfer caller is not owner nor approved\""},"value":"ERC721: transfer caller is not owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","typeString":"literal_string \"ERC721: transfer caller is not owner nor approved\""}],"id":431,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4907:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4907:103:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":439,"nodeType":"ExpressionStatement","src":"4907:103:1"},{"expression":{"arguments":[{"id":441,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"5031:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":442,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"5037:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":443,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"5041:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":440,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"5021:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5021:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":445,"nodeType":"ExpressionStatement","src":"5021:28:1"}]},"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"4670:51:1","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":447,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4735:12:1","nodeType":"FunctionDefinition","overrides":{"id":429,"nodeType":"OverrideSpecifier","overrides":[],"src":"4836:8:1"},"parameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"from","nameLocation":"4765:4:1","nodeType":"VariableDeclaration","scope":447,"src":"4757:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"4757:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":425,"mutability":"mutable","name":"to","nameLocation":"4787:2:1","nodeType":"VariableDeclaration","scope":447,"src":"4779:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"4779:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":427,"mutability":"mutable","name":"tokenId","nameLocation":"4807:7:1","nodeType":"VariableDeclaration","scope":447,"src":"4799:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":426,"name":"uint256","nodeType":"ElementaryTypeName","src":"4799:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4747:73:1"},"returnParameters":{"id":430,"nodeType":"ParameterList","parameters":[],"src":"4845:0:1"},"scope":970,"src":"4726:330:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1029],"body":{"id":465,"nodeType":"Block","src":"5245:56:1","statements":[{"expression":{"arguments":[{"id":459,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"5272:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":460,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"5278:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":461,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"5282:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5291:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":458,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[466,496],"referencedDeclaration":496,"src":"5255:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5255:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":464,"nodeType":"ExpressionStatement","src":"5255:39:1"}]},"documentation":{"id":448,"nodeType":"StructuredDocumentation","src":"5062:55:1","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":466,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5131:16:1","nodeType":"FunctionDefinition","overrides":{"id":456,"nodeType":"OverrideSpecifier","overrides":[],"src":"5236:8:1"},"parameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"mutability":"mutable","name":"from","nameLocation":"5165:4:1","nodeType":"VariableDeclaration","scope":466,"src":"5157:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":449,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":452,"mutability":"mutable","name":"to","nameLocation":"5187:2:1","nodeType":"VariableDeclaration","scope":466,"src":"5179:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":451,"name":"address","nodeType":"ElementaryTypeName","src":"5179:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":454,"mutability":"mutable","name":"tokenId","nameLocation":"5207:7:1","nodeType":"VariableDeclaration","scope":466,"src":"5199:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"5199:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5147:73:1"},"returnParameters":{"id":457,"nodeType":"ParameterList","parameters":[],"src":"5245:0:1"},"scope":970,"src":"5122:179:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1085],"body":{"id":495,"nodeType":"Block","src":"5518:169:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":481,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"5555:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5555:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":483,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"5569:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":480,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"5536:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5536:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564","id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5579:51:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","typeString":"literal_string \"ERC721: transfer caller is not owner nor approved\""},"value":"ERC721: transfer caller is not owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","typeString":"literal_string \"ERC721: transfer caller is not owner nor approved\""}],"id":479,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5528:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5528:103:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":487,"nodeType":"ExpressionStatement","src":"5528:103:1"},{"expression":{"arguments":[{"id":489,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"5655:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":490,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"5661:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":491,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"5665:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":492,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"5674:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":488,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"5641:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5641:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":494,"nodeType":"ExpressionStatement","src":"5641:39:1"}]},"documentation":{"id":467,"nodeType":"StructuredDocumentation","src":"5307:55:1","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":496,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5376:16:1","nodeType":"FunctionDefinition","overrides":{"id":477,"nodeType":"OverrideSpecifier","overrides":[],"src":"5509:8:1"},"parameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"mutability":"mutable","name":"from","nameLocation":"5410:4:1","nodeType":"VariableDeclaration","scope":496,"src":"5402:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":468,"name":"address","nodeType":"ElementaryTypeName","src":"5402:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":471,"mutability":"mutable","name":"to","nameLocation":"5432:2:1","nodeType":"VariableDeclaration","scope":496,"src":"5424:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"5424:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":473,"mutability":"mutable","name":"tokenId","nameLocation":"5452:7:1","nodeType":"VariableDeclaration","scope":496,"src":"5444:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":472,"name":"uint256","nodeType":"ElementaryTypeName","src":"5444:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":475,"mutability":"mutable","name":"_data","nameLocation":"5482:5:1","nodeType":"VariableDeclaration","scope":496,"src":"5469:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":474,"name":"bytes","nodeType":"ElementaryTypeName","src":"5469:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5392:101:1"},"returnParameters":{"id":478,"nodeType":"ParameterList","parameters":[],"src":"5518:0:1"},"scope":970,"src":"5367:320:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":524,"nodeType":"Block","src":"6690:166:1","statements":[{"expression":{"arguments":[{"id":509,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"6710:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":510,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"6716:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":511,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6720:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":508,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"6700:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6700:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":513,"nodeType":"ExpressionStatement","src":"6700:28:1"},{"expression":{"arguments":[{"arguments":[{"id":516,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"6769:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":517,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"6775:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":518,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6779:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":519,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"6788:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":515,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"6746:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6746:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6796:52:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":514,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6738:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6738:111:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":523,"nodeType":"ExpressionStatement","src":"6738:111:1"}]},"documentation":{"id":497,"nodeType":"StructuredDocumentation","src":"5693:851:1","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":525,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6558:13:1","nodeType":"FunctionDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"mutability":"mutable","name":"from","nameLocation":"6589:4:1","nodeType":"VariableDeclaration","scope":525,"src":"6581:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":498,"name":"address","nodeType":"ElementaryTypeName","src":"6581:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":501,"mutability":"mutable","name":"to","nameLocation":"6611:2:1","nodeType":"VariableDeclaration","scope":525,"src":"6603:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"6603:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":503,"mutability":"mutable","name":"tokenId","nameLocation":"6631:7:1","nodeType":"VariableDeclaration","scope":525,"src":"6623:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":502,"name":"uint256","nodeType":"ElementaryTypeName","src":"6623:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"_data","nameLocation":"6661:5:1","nodeType":"VariableDeclaration","scope":525,"src":"6648:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":504,"name":"bytes","nodeType":"ElementaryTypeName","src":"6648:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6571:101:1"},"returnParameters":{"id":507,"nodeType":"ParameterList","parameters":[],"src":"6690:0:1"},"scope":970,"src":"6549:307:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":542,"nodeType":"Block","src":"7230:54:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":533,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"7247:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":535,"indexExpression":{"id":534,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"7255:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7247:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7275:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7267:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":536,"name":"address","nodeType":"ElementaryTypeName","src":"7267:7:1","typeDescriptions":{}}},"id":539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7267:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7247:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":532,"id":541,"nodeType":"Return","src":"7240:37:1"}]},"documentation":{"id":526,"nodeType":"StructuredDocumentation","src":"6862:292:1","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":543,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7168:7:1","nodeType":"FunctionDefinition","parameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":528,"mutability":"mutable","name":"tokenId","nameLocation":"7184:7:1","nodeType":"VariableDeclaration","scope":543,"src":"7176:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":527,"name":"uint256","nodeType":"ElementaryTypeName","src":"7176:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7175:17:1"},"returnParameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":543,"src":"7224:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":530,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7223:6:1"},"scope":970,"src":"7159:125:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":583,"nodeType":"Block","src":"7541:245:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":555,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"7567:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":554,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"7559:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7559:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7577:46:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c","typeString":"literal_string \"ERC721: operator query for nonexistent token\""},"value":"ERC721: operator query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c","typeString":"literal_string \"ERC721: operator query for nonexistent token\""}],"id":553,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7551:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7551:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":559,"nodeType":"ExpressionStatement","src":"7551:73:1"},{"assignments":[561],"declarations":[{"constant":false,"id":561,"mutability":"mutable","name":"owner","nameLocation":"7642:5:1","nodeType":"VariableDeclaration","scope":583,"src":"7634:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":560,"name":"address","nodeType":"ElementaryTypeName","src":"7634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":566,"initialValue":{"arguments":[{"id":564,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"7665:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":562,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"7650:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$970_$","typeString":"type(contract ERC721)"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":250,"src":"7650:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7650:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7634:39:1"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":567,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"7691:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":568,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"7702:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7691:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":571,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"7723:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":570,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"7711:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7711:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":573,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"7735:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7711:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7691:51:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":577,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"7763:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":578,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"7770:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":576,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"7746:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7746:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7691:87:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":581,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7690:89:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":552,"id":582,"nodeType":"Return","src":"7683:96:1"}]},"documentation":{"id":544,"nodeType":"StructuredDocumentation","src":"7290:147:1","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":584,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7451:18:1","nodeType":"FunctionDefinition","parameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"spender","nameLocation":"7478:7:1","nodeType":"VariableDeclaration","scope":584,"src":"7470:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":545,"name":"address","nodeType":"ElementaryTypeName","src":"7470:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":548,"mutability":"mutable","name":"tokenId","nameLocation":"7495:7:1","nodeType":"VariableDeclaration","scope":584,"src":"7487:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":547,"name":"uint256","nodeType":"ElementaryTypeName","src":"7487:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7469:34:1"},"returnParameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":584,"src":"7535:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":550,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7534:6:1"},"scope":970,"src":"7442:344:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":598,"nodeType":"Block","src":"8181:43:1","statements":[{"expression":{"arguments":[{"id":593,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"8201:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":594,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"8205:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8214:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":592,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[599,628],"referencedDeclaration":628,"src":"8191:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":597,"nodeType":"ExpressionStatement","src":"8191:26:1"}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"7792:319:1","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":599,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8125:9:1","nodeType":"FunctionDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"to","nameLocation":"8143:2:1","nodeType":"VariableDeclaration","scope":599,"src":"8135:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"8135:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"tokenId","nameLocation":"8155:7:1","nodeType":"VariableDeclaration","scope":599,"src":"8147:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":588,"name":"uint256","nodeType":"ElementaryTypeName","src":"8147:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8134:29:1"},"returnParameters":{"id":591,"nodeType":"ParameterList","parameters":[],"src":"8181:0:1"},"scope":970,"src":"8116:108:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":627,"nodeType":"Block","src":"8560:196:1","statements":[{"expression":{"arguments":[{"id":610,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"8576:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":611,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"8580:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":609,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"8570:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8570:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":613,"nodeType":"ExpressionStatement","src":"8570:18:1"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8650:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8642:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":616,"name":"address","nodeType":"ElementaryTypeName","src":"8642:7:1","typeDescriptions":{}}},"id":619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8642:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":620,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"8654:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":621,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"8658:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":622,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"8667:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":615,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"8619:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8619:54:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8687:52:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":614,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8598:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8598:151:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":626,"nodeType":"ExpressionStatement","src":"8598:151:1"}]},"documentation":{"id":600,"nodeType":"StructuredDocumentation","src":"8230:210:1","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":628,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8454:9:1","nodeType":"FunctionDefinition","parameters":{"id":607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"mutability":"mutable","name":"to","nameLocation":"8481:2:1","nodeType":"VariableDeclaration","scope":628,"src":"8473:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"8473:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":604,"mutability":"mutable","name":"tokenId","nameLocation":"8501:7:1","nodeType":"VariableDeclaration","scope":628,"src":"8493:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"8493:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":606,"mutability":"mutable","name":"_data","nameLocation":"8531:5:1","nodeType":"VariableDeclaration","scope":628,"src":"8518:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":605,"name":"bytes","nodeType":"ElementaryTypeName","src":"8518:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8463:79:1"},"returnParameters":{"id":608,"nodeType":"ParameterList","parameters":[],"src":"8560:0:1"},"scope":970,"src":"8445:311:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":693,"nodeType":"Block","src":"9139:366:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":637,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"9157:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9171:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9163:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":638,"name":"address","nodeType":"ElementaryTypeName","src":"9163:7:1","typeDescriptions":{}}},"id":641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9163:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9157:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9175:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":636,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9149:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9149:61:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":645,"nodeType":"ExpressionStatement","src":"9149:61:1"},{"expression":{"arguments":[{"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9228:17:1","subExpression":{"arguments":[{"id":648,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"9237:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":647,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"9229:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9229:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9247:30:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":646,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9220:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9220:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":653,"nodeType":"ExpressionStatement","src":"9220:58:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9310:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"9310:7:1","typeDescriptions":{}}},"id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9310:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"9322:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":660,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"9326:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":654,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"9289:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9289:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"ExpressionStatement","src":"9289:45:1"},{"expression":{"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":663,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"9345:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":665,"indexExpression":{"id":664,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"9355:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9345:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9362:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9345:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":668,"nodeType":"ExpressionStatement","src":"9345:18:1"},{"expression":{"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":669,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"9373:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":671,"indexExpression":{"id":670,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"9381:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9373:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":672,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"9392:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9373:21:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":674,"nodeType":"ExpressionStatement","src":"9373:21:1"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9427:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9419:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"9419:7:1","typeDescriptions":{}}},"id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9419:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":680,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"9431:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":681,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"9435:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":675,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"9410:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9410:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":683,"nodeType":"EmitStatement","src":"9405:38:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9482:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9474:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":685,"name":"address","nodeType":"ElementaryTypeName","src":"9474:7:1","typeDescriptions":{}}},"id":688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9474:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":689,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"9486:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":690,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"9490:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":684,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"9454:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9454:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":692,"nodeType":"ExpressionStatement","src":"9454:44:1"}]},"documentation":{"id":629,"nodeType":"StructuredDocumentation","src":"8762:311:1","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":694,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9087:5:1","nodeType":"FunctionDefinition","parameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":631,"mutability":"mutable","name":"to","nameLocation":"9101:2:1","nodeType":"VariableDeclaration","scope":694,"src":"9093:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"9093:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":633,"mutability":"mutable","name":"tokenId","nameLocation":"9113:7:1","nodeType":"VariableDeclaration","scope":694,"src":"9105:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":632,"name":"uint256","nodeType":"ElementaryTypeName","src":"9105:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9092:29:1"},"returnParameters":{"id":635,"nodeType":"ParameterList","parameters":[],"src":"9139:0:1"},"scope":970,"src":"9078:427:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":753,"nodeType":"Block","src":"9771:357:1","statements":[{"assignments":[701],"declarations":[{"constant":false,"id":701,"mutability":"mutable","name":"owner","nameLocation":"9789:5:1","nodeType":"VariableDeclaration","scope":753,"src":"9781:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"9781:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":706,"initialValue":{"arguments":[{"id":704,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"9812:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":702,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"9797:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$970_$","typeString":"type(contract ERC721)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":250,"src":"9797:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9797:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9781:39:1"},{"expression":{"arguments":[{"id":708,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"9852:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9867:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9859:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"9859:7:1","typeDescriptions":{}}},"id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9859:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":713,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"9871:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":707,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"9831:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9831:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":715,"nodeType":"ExpressionStatement","src":"9831:48:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9934:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9926:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":717,"name":"address","nodeType":"ElementaryTypeName","src":"9926:7:1","typeDescriptions":{}}},"id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9926:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":721,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"9938:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":716,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"9917:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9917:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":723,"nodeType":"ExpressionStatement","src":"9917:29:1"},{"expression":{"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":724,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"9957:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":726,"indexExpression":{"id":725,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"9967:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9957:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9977:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9957:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":729,"nodeType":"ExpressionStatement","src":"9957:21:1"},{"expression":{"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"9988:23:1","subExpression":{"baseExpression":{"id":730,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"9995:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":732,"indexExpression":{"id":731,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10003:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9995:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":734,"nodeType":"ExpressionStatement","src":"9988:23:1"},{"eventCall":{"arguments":[{"id":736,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"10036:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10051:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10043:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":737,"name":"address","nodeType":"ElementaryTypeName","src":"10043:7:1","typeDescriptions":{}}},"id":740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10043:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":741,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10055:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":735,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"10027:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10027:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":743,"nodeType":"EmitStatement","src":"10022:41:1"},{"expression":{"arguments":[{"id":745,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"10094:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10109:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10101:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"10101:7:1","typeDescriptions":{}}},"id":749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10101:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":750,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10113:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":744,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"10074:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10074:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":752,"nodeType":"ExpressionStatement","src":"10074:47:1"}]},"documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"9511:206:1","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":754,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9731:5:1","nodeType":"FunctionDefinition","parameters":{"id":698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":697,"mutability":"mutable","name":"tokenId","nameLocation":"9745:7:1","nodeType":"VariableDeclaration","scope":754,"src":"9737:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":696,"name":"uint256","nodeType":"ElementaryTypeName","src":"9737:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9736:17:1"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[],"src":"9771:0:1"},"scope":970,"src":"9722:406:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":828,"nodeType":"Block","src":"10561:496:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":767,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10594:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":765,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"10579:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$970_$","typeString":"type(contract ERC721)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":250,"src":"10579:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10579:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":769,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10606:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10579:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10612:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":764,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10571:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10571:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":773,"nodeType":"ExpressionStatement","src":"10571:81:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":775,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"10670:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10684:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10676:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":776,"name":"address","nodeType":"ElementaryTypeName","src":"10676:7:1","typeDescriptions":{}}},"id":779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10676:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10670:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10688:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":774,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10662:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10662:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":783,"nodeType":"ExpressionStatement","src":"10662:65:1"},{"expression":{"arguments":[{"id":785,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10759:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":786,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"10765:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":787,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10769:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":784,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"10738:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10738:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":789,"nodeType":"ExpressionStatement","src":"10738:39:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10848:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"10848:7:1","typeDescriptions":{}}},"id":794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10848:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":795,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10860:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":790,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"10839:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10839:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":797,"nodeType":"ExpressionStatement","src":"10839:29:1"},{"expression":{"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":798,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"10879:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":800,"indexExpression":{"id":799,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10889:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10879:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10898:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10879:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":803,"nodeType":"ExpressionStatement","src":"10879:20:1"},{"expression":{"id":808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":804,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"10909:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":806,"indexExpression":{"id":805,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"10919:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10909:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10926:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10909:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":809,"nodeType":"ExpressionStatement","src":"10909:18:1"},{"expression":{"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":810,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"10937:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":812,"indexExpression":{"id":811,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10945:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10937:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":813,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"10956:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10937:21:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":815,"nodeType":"ExpressionStatement","src":"10937:21:1"},{"eventCall":{"arguments":[{"id":817,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10983:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":818,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"10989:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":819,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10993:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":816,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"10974:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10974:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":821,"nodeType":"EmitStatement","src":"10969:32:1"},{"expression":{"arguments":[{"id":823,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"11032:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":824,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"11038:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":825,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"11042:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":822,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"11012:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11012:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":827,"nodeType":"ExpressionStatement","src":"11012:38:1"}]},"documentation":{"id":755,"nodeType":"StructuredDocumentation","src":"10134:313:1","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":829,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"10461:9:1","nodeType":"FunctionDefinition","parameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"from","nameLocation":"10488:4:1","nodeType":"VariableDeclaration","scope":829,"src":"10480:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"10480:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":759,"mutability":"mutable","name":"to","nameLocation":"10510:2:1","nodeType":"VariableDeclaration","scope":829,"src":"10502:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":758,"name":"address","nodeType":"ElementaryTypeName","src":"10502:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":761,"mutability":"mutable","name":"tokenId","nameLocation":"10530:7:1","nodeType":"VariableDeclaration","scope":829,"src":"10522:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":760,"name":"uint256","nodeType":"ElementaryTypeName","src":"10522:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10470:73:1"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[],"src":"10561:0:1"},"scope":970,"src":"10452:605:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":852,"nodeType":"Block","src":"11232:107:1","statements":[{"expression":{"id":841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":837,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"11242:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":839,"indexExpression":{"id":838,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"11258:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11242:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":840,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"11269:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11242:29:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":842,"nodeType":"ExpressionStatement","src":"11242:29:1"},{"eventCall":{"arguments":[{"arguments":[{"id":846,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"11310:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":844,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"11295:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$970_$","typeString":"type(contract ERC721)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":250,"src":"11295:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11295:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":848,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"11320:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":849,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"11324:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":843,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"11286:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11286:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":851,"nodeType":"EmitStatement","src":"11281:51:1"}]},"documentation":{"id":830,"nodeType":"StructuredDocumentation","src":"11063:100:1","text":" @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."},"id":853,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"11177:8:1","nodeType":"FunctionDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"to","nameLocation":"11194:2:1","nodeType":"VariableDeclaration","scope":853,"src":"11186:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"11186:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":834,"mutability":"mutable","name":"tokenId","nameLocation":"11206:7:1","nodeType":"VariableDeclaration","scope":853,"src":"11198:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"11198:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11185:29:1"},"returnParameters":{"id":836,"nodeType":"ParameterList","parameters":[],"src":"11232:0:1"},"scope":970,"src":"11168:171:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":884,"nodeType":"Block","src":"11597:184:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":864,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"11615:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":865,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"11624:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11615:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11634:27:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":863,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11607:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11607:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":869,"nodeType":"ExpressionStatement","src":"11607:55:1"},{"expression":{"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":870,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"11672:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":873,"indexExpression":{"id":871,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"11691:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11672:25:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":874,"indexExpression":{"id":872,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"11698:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11672:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":875,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"11710:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11672:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":877,"nodeType":"ExpressionStatement","src":"11672:46:1"},{"eventCall":{"arguments":[{"id":879,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"11748:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":880,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"11755:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":881,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"11765:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":878,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"11733:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11733:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":883,"nodeType":"EmitStatement","src":"11728:46:1"}]},"documentation":{"id":854,"nodeType":"StructuredDocumentation","src":"11345:124:1","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."},"id":885,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"11483:18:1","nodeType":"FunctionDefinition","parameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"owner","nameLocation":"11519:5:1","nodeType":"VariableDeclaration","scope":885,"src":"11511:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"11511:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":858,"mutability":"mutable","name":"operator","nameLocation":"11542:8:1","nodeType":"VariableDeclaration","scope":885,"src":"11534:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":857,"name":"address","nodeType":"ElementaryTypeName","src":"11534:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":860,"mutability":"mutable","name":"approved","nameLocation":"11565:8:1","nodeType":"VariableDeclaration","scope":885,"src":"11560:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":859,"name":"bool","nodeType":"ElementaryTypeName","src":"11560:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11501:78:1"},"returnParameters":{"id":862,"nodeType":"ParameterList","parameters":[],"src":"11597:0:1"},"scope":970,"src":"11474:307:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":946,"nodeType":"Block","src":"12490:622:1","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":899,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"12504:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1149,"src":"12504:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12504:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":944,"nodeType":"Block","src":"13070:36:1","statements":[{"expression":{"hexValue":"74727565","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13091:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":898,"id":943,"nodeType":"Return","src":"13084:11:1"}]},"id":945,"nodeType":"IfStatement","src":"12500:606:1","trueBody":{"id":941,"nodeType":"Block","src":"12521:543:1","statements":[{"clauses":[{"block":{"id":921,"nodeType":"Block","src":"12636:91:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":915,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"12661:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":916,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"12671:15:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1104_$","typeString":"type(contract IERC721Receiver)"}},"id":917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1103,"src":"12671:32:1","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"12671:41:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"12661:51:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":898,"id":920,"nodeType":"Return","src":"12654:58:1"}]},"errorName":"","id":922,"nodeType":"TryCatchClause","parameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":913,"mutability":"mutable","name":"retval","nameLocation":"12628:6:1","nodeType":"VariableDeclaration","scope":922,"src":"12621:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":912,"name":"bytes4","nodeType":"ElementaryTypeName","src":"12621:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"12620:15:1"},"src":"12612:115:1"},{"block":{"id":938,"nodeType":"Block","src":"12756:298:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":926,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"12778:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12778:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12795:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12778:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":936,"nodeType":"Block","src":"12905:135:1","statements":[{"AST":{"nodeType":"YulBlock","src":"12936:86:1","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12973:2:1","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"12977:6:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12969:3:1"},"nodeType":"YulFunctionCall","src":"12969:15:1"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"12992:6:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12986:5:1"},"nodeType":"YulFunctionCall","src":"12986:13:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12962:6:1"},"nodeType":"YulFunctionCall","src":"12962:38:1"},"nodeType":"YulExpressionStatement","src":"12962:38:1"}]},"evmVersion":"london","externalReferences":[{"declaration":924,"isOffset":false,"isSlot":false,"src":"12977:6:1","valueSize":1},{"declaration":924,"isOffset":false,"isSlot":false,"src":"12992:6:1","valueSize":1}],"id":935,"nodeType":"InlineAssembly","src":"12927:95:1"}]},"id":937,"nodeType":"IfStatement","src":"12774:266:1","trueBody":{"id":934,"nodeType":"Block","src":"12798:101:1","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12827:52:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":930,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"12820:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12820:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":933,"nodeType":"ExpressionStatement","src":"12820:60:1"}]}}]},"errorName":"","id":939,"nodeType":"TryCatchClause","parameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"mutability":"mutable","name":"reason","nameLocation":"12748:6:1","nodeType":"VariableDeclaration","scope":939,"src":"12735:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":923,"name":"bytes","nodeType":"ElementaryTypeName","src":"12735:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12734:21:1"},"src":"12728:326:1"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":906,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"12576:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12576:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":908,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"12590:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":909,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"12596:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":910,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"12605:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":903,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"12555:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":902,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"12539:15:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1104_$","typeString":"type(contract IERC721Receiver)"}},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12539:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1104","typeString":"contract IERC721Receiver"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1103,"src":"12539:36:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12539:72:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":940,"nodeType":"TryStatement","src":"12535:519:1"}]}}]},"documentation":{"id":886,"nodeType":"StructuredDocumentation","src":"11787:542:1","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":947,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"12343:22:1","nodeType":"FunctionDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"from","nameLocation":"12383:4:1","nodeType":"VariableDeclaration","scope":947,"src":"12375:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"12375:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":890,"mutability":"mutable","name":"to","nameLocation":"12405:2:1","nodeType":"VariableDeclaration","scope":947,"src":"12397:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"12397:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":892,"mutability":"mutable","name":"tokenId","nameLocation":"12425:7:1","nodeType":"VariableDeclaration","scope":947,"src":"12417:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":891,"name":"uint256","nodeType":"ElementaryTypeName","src":"12417:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"_data","nameLocation":"12455:5:1","nodeType":"VariableDeclaration","scope":947,"src":"12442:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":893,"name":"bytes","nodeType":"ElementaryTypeName","src":"12442:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12365:101:1"},"returnParameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":947,"src":"12484:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":896,"name":"bool","nodeType":"ElementaryTypeName","src":"12484:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12483:6:1"},"scope":970,"src":"12334:778:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":957,"nodeType":"Block","src":"13788:2:1","statements":[]},"documentation":{"id":948,"nodeType":"StructuredDocumentation","src":"13118:545:1","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":958,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"13677:20:1","nodeType":"FunctionDefinition","parameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"from","nameLocation":"13715:4:1","nodeType":"VariableDeclaration","scope":958,"src":"13707:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":949,"name":"address","nodeType":"ElementaryTypeName","src":"13707:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":952,"mutability":"mutable","name":"to","nameLocation":"13737:2:1","nodeType":"VariableDeclaration","scope":958,"src":"13729:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":951,"name":"address","nodeType":"ElementaryTypeName","src":"13729:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":954,"mutability":"mutable","name":"tokenId","nameLocation":"13757:7:1","nodeType":"VariableDeclaration","scope":958,"src":"13749:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":953,"name":"uint256","nodeType":"ElementaryTypeName","src":"13749:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13697:73:1"},"returnParameters":{"id":956,"nodeType":"ParameterList","parameters":[],"src":"13788:0:1"},"scope":970,"src":"13668:122:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":968,"nodeType":"Block","src":"14281:2:1","statements":[]},"documentation":{"id":959,"nodeType":"StructuredDocumentation","src":"13796:361:1","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":969,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"14171:19:1","nodeType":"FunctionDefinition","parameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":961,"mutability":"mutable","name":"from","nameLocation":"14208:4:1","nodeType":"VariableDeclaration","scope":969,"src":"14200:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":960,"name":"address","nodeType":"ElementaryTypeName","src":"14200:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":963,"mutability":"mutable","name":"to","nameLocation":"14230:2:1","nodeType":"VariableDeclaration","scope":969,"src":"14222:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":962,"name":"address","nodeType":"ElementaryTypeName","src":"14222:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":965,"mutability":"mutable","name":"tokenId","nameLocation":"14250:7:1","nodeType":"VariableDeclaration","scope":969,"src":"14242:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"14242:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14190:73:1"},"returnParameters":{"id":967,"nodeType":"ParameterList","parameters":[],"src":"14281:0:1"},"scope":970,"src":"14162:121:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":971,"src":"628:13657:1","usedErrors":[]}],"src":"107:14179:1"},"id":1},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[1734],"IERC721":[1086]},"id":1087,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":972,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"93:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":973,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1087,"sourceUnit":1735,"src":"118:47:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":975,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":1734,"src":"256:7:2"},"id":976,"nodeType":"InheritanceSpecifier","src":"256:7:2"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":974,"nodeType":"StructuredDocumentation","src":"167:67:2","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1086,"linearizedBaseContracts":[1086,1734],"name":"IERC721","nameLocation":"245:7:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":977,"nodeType":"StructuredDocumentation","src":"270:88:2","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":985,"name":"Transfer","nameLocation":"369:8:2","nodeType":"EventDefinition","parameters":{"id":984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":979,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"394:4:2","nodeType":"VariableDeclaration","scope":985,"src":"378:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"378:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":981,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"416:2:2","nodeType":"VariableDeclaration","scope":985,"src":"400:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":980,"name":"address","nodeType":"ElementaryTypeName","src":"400:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":983,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"436:7:2","nodeType":"VariableDeclaration","scope":985,"src":"420:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":982,"name":"uint256","nodeType":"ElementaryTypeName","src":"420:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"377:67:2"},"src":"363:82:2"},{"anonymous":false,"documentation":{"id":986,"nodeType":"StructuredDocumentation","src":"451:94:2","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":994,"name":"Approval","nameLocation":"556:8:2","nodeType":"EventDefinition","parameters":{"id":993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":988,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"581:5:2","nodeType":"VariableDeclaration","scope":994,"src":"565:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"565:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":990,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"604:8:2","nodeType":"VariableDeclaration","scope":994,"src":"588:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":989,"name":"address","nodeType":"ElementaryTypeName","src":"588:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":992,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"630:7:2","nodeType":"VariableDeclaration","scope":994,"src":"614:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"614:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"564:74:2"},"src":"550:89:2"},{"anonymous":false,"documentation":{"id":995,"nodeType":"StructuredDocumentation","src":"645:117:2","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":1003,"name":"ApprovalForAll","nameLocation":"773:14:2","nodeType":"EventDefinition","parameters":{"id":1002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":997,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"804:5:2","nodeType":"VariableDeclaration","scope":1003,"src":"788:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":996,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":999,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"827:8:2","nodeType":"VariableDeclaration","scope":1003,"src":"811:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":998,"name":"address","nodeType":"ElementaryTypeName","src":"811:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1001,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"842:8:2","nodeType":"VariableDeclaration","scope":1003,"src":"837:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1000,"name":"bool","nodeType":"ElementaryTypeName","src":"837:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"787:64:2"},"src":"767:85:2"},{"documentation":{"id":1004,"nodeType":"StructuredDocumentation","src":"858:76:2","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1011,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"948:9:2","nodeType":"FunctionDefinition","parameters":{"id":1007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1006,"mutability":"mutable","name":"owner","nameLocation":"966:5:2","nodeType":"VariableDeclaration","scope":1011,"src":"958:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1005,"name":"address","nodeType":"ElementaryTypeName","src":"958:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"957:15:2"},"returnParameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"mutability":"mutable","name":"balance","nameLocation":"1004:7:2","nodeType":"VariableDeclaration","scope":1011,"src":"996:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"996:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"995:17:2"},"scope":1086,"src":"939:74:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1012,"nodeType":"StructuredDocumentation","src":"1019:131:2","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1019,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1164:7:2","nodeType":"FunctionDefinition","parameters":{"id":1015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1014,"mutability":"mutable","name":"tokenId","nameLocation":"1180:7:2","nodeType":"VariableDeclaration","scope":1019,"src":"1172:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1013,"name":"uint256","nodeType":"ElementaryTypeName","src":"1172:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1171:17:2"},"returnParameters":{"id":1018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"owner","nameLocation":"1220:5:2","nodeType":"VariableDeclaration","scope":1019,"src":"1212:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"1212:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1211:15:2"},"scope":1086,"src":"1155:72:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1020,"nodeType":"StructuredDocumentation","src":"1233:690:2","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1029,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1937:16:2","nodeType":"FunctionDefinition","parameters":{"id":1027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1022,"mutability":"mutable","name":"from","nameLocation":"1971:4:2","nodeType":"VariableDeclaration","scope":1029,"src":"1963:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1021,"name":"address","nodeType":"ElementaryTypeName","src":"1963:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1024,"mutability":"mutable","name":"to","nameLocation":"1993:2:2","nodeType":"VariableDeclaration","scope":1029,"src":"1985:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1023,"name":"address","nodeType":"ElementaryTypeName","src":"1985:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1026,"mutability":"mutable","name":"tokenId","nameLocation":"2013:7:2","nodeType":"VariableDeclaration","scope":1029,"src":"2005:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1025,"name":"uint256","nodeType":"ElementaryTypeName","src":"2005:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1953:73:2"},"returnParameters":{"id":1028,"nodeType":"ParameterList","parameters":[],"src":"2035:0:2"},"scope":1086,"src":"1928:108:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1030,"nodeType":"StructuredDocumentation","src":"2042:504:2","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1039,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2560:12:2","nodeType":"FunctionDefinition","parameters":{"id":1037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"from","nameLocation":"2590:4:2","nodeType":"VariableDeclaration","scope":1039,"src":"2582:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1031,"name":"address","nodeType":"ElementaryTypeName","src":"2582:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1034,"mutability":"mutable","name":"to","nameLocation":"2612:2:2","nodeType":"VariableDeclaration","scope":1039,"src":"2604:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1033,"name":"address","nodeType":"ElementaryTypeName","src":"2604:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1036,"mutability":"mutable","name":"tokenId","nameLocation":"2632:7:2","nodeType":"VariableDeclaration","scope":1039,"src":"2624:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1035,"name":"uint256","nodeType":"ElementaryTypeName","src":"2624:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2572:73:2"},"returnParameters":{"id":1038,"nodeType":"ParameterList","parameters":[],"src":"2654:0:2"},"scope":1086,"src":"2551:104:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"2661:452:2","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1047,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3127:7:2","nodeType":"FunctionDefinition","parameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"to","nameLocation":"3143:2:2","nodeType":"VariableDeclaration","scope":1047,"src":"3135:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1041,"name":"address","nodeType":"ElementaryTypeName","src":"3135:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"tokenId","nameLocation":"3155:7:2","nodeType":"VariableDeclaration","scope":1047,"src":"3147:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1043,"name":"uint256","nodeType":"ElementaryTypeName","src":"3147:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:29:2"},"returnParameters":{"id":1046,"nodeType":"ParameterList","parameters":[],"src":"3172:0:2"},"scope":1086,"src":"3118:55:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1048,"nodeType":"StructuredDocumentation","src":"3179:139:2","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1055,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3332:11:2","nodeType":"FunctionDefinition","parameters":{"id":1051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1050,"mutability":"mutable","name":"tokenId","nameLocation":"3352:7:2","nodeType":"VariableDeclaration","scope":1055,"src":"3344:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1049,"name":"uint256","nodeType":"ElementaryTypeName","src":"3344:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3343:17:2"},"returnParameters":{"id":1054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"mutability":"mutable","name":"operator","nameLocation":"3392:8:2","nodeType":"VariableDeclaration","scope":1055,"src":"3384:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1052,"name":"address","nodeType":"ElementaryTypeName","src":"3384:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3383:18:2"},"scope":1086,"src":"3323:79:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1056,"nodeType":"StructuredDocumentation","src":"3408:309:2","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1063,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3731:17:2","nodeType":"FunctionDefinition","parameters":{"id":1061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1058,"mutability":"mutable","name":"operator","nameLocation":"3757:8:2","nodeType":"VariableDeclaration","scope":1063,"src":"3749:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1057,"name":"address","nodeType":"ElementaryTypeName","src":"3749:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"_approved","nameLocation":"3772:9:2","nodeType":"VariableDeclaration","scope":1063,"src":"3767:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1059,"name":"bool","nodeType":"ElementaryTypeName","src":"3767:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3748:34:2"},"returnParameters":{"id":1062,"nodeType":"ParameterList","parameters":[],"src":"3791:0:2"},"scope":1086,"src":"3722:70:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1064,"nodeType":"StructuredDocumentation","src":"3798:138:2","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1073,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3950:16:2","nodeType":"FunctionDefinition","parameters":{"id":1069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"mutability":"mutable","name":"owner","nameLocation":"3975:5:2","nodeType":"VariableDeclaration","scope":1073,"src":"3967:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1065,"name":"address","nodeType":"ElementaryTypeName","src":"3967:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1068,"mutability":"mutable","name":"operator","nameLocation":"3990:8:2","nodeType":"VariableDeclaration","scope":1073,"src":"3982:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1067,"name":"address","nodeType":"ElementaryTypeName","src":"3982:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3966:33:2"},"returnParameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1073,"src":"4023:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1070,"name":"bool","nodeType":"ElementaryTypeName","src":"4023:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4022:6:2"},"scope":1086,"src":"3941:88:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1074,"nodeType":"StructuredDocumentation","src":"4035:556:2","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1085,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4605:16:2","nodeType":"FunctionDefinition","parameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"mutability":"mutable","name":"from","nameLocation":"4639:4:2","nodeType":"VariableDeclaration","scope":1085,"src":"4631:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"4631:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"to","nameLocation":"4661:2:2","nodeType":"VariableDeclaration","scope":1085,"src":"4653:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1077,"name":"address","nodeType":"ElementaryTypeName","src":"4653:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1080,"mutability":"mutable","name":"tokenId","nameLocation":"4681:7:2","nodeType":"VariableDeclaration","scope":1085,"src":"4673:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1079,"name":"uint256","nodeType":"ElementaryTypeName","src":"4673:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"data","nameLocation":"4713:4:2","nodeType":"VariableDeclaration","scope":1085,"src":"4698:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1081,"name":"bytes","nodeType":"ElementaryTypeName","src":"4698:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4621:102:2"},"returnParameters":{"id":1084,"nodeType":"ParameterList","parameters":[],"src":"4732:0:2"},"scope":1086,"src":"4596:137:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1087,"src":"235:4500:2","usedErrors":[]}],"src":"93:4643:2"},"id":2},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1104]},"id":1105,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1088,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1089,"nodeType":"StructuredDocumentation","src":"126:152:3","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":1104,"linearizedBaseContracts":[1104],"name":"IERC721Receiver","nameLocation":"289:15:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1090,"nodeType":"StructuredDocumentation","src":"311:485:3","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1103,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"810:16:3","nodeType":"FunctionDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1092,"mutability":"mutable","name":"operator","nameLocation":"844:8:3","nodeType":"VariableDeclaration","scope":1103,"src":"836:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1091,"name":"address","nodeType":"ElementaryTypeName","src":"836:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1094,"mutability":"mutable","name":"from","nameLocation":"870:4:3","nodeType":"VariableDeclaration","scope":1103,"src":"862:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1093,"name":"address","nodeType":"ElementaryTypeName","src":"862:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"tokenId","nameLocation":"892:7:3","nodeType":"VariableDeclaration","scope":1103,"src":"884:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1095,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"data","nameLocation":"924:4:3","nodeType":"VariableDeclaration","scope":1103,"src":"909:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1097,"name":"bytes","nodeType":"ElementaryTypeName","src":"909:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"826:108:3"},"returnParameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1103,"src":"953:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1100,"name":"bytes4","nodeType":"ElementaryTypeName","src":"953:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"952:8:3"},"scope":1104,"src":"801:160:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1105,"src":"279:684:3","usedErrors":[]}],"src":"101:863:3"},"id":3},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[1734],"IERC721":[1086],"IERC721Metadata":[1131]},"id":1132,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1106,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1107,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1132,"sourceUnit":1087,"src":"137:24:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1109,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1086,"src":"326:7:4"},"id":1110,"nodeType":"InheritanceSpecifier","src":"326:7:4"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1108,"nodeType":"StructuredDocumentation","src":"163:133:4","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1131,"linearizedBaseContracts":[1131,1086,1734],"name":"IERC721Metadata","nameLocation":"307:15:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1111,"nodeType":"StructuredDocumentation","src":"340:58:4","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1116,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:4","nodeType":"FunctionDefinition","parameters":{"id":1112,"nodeType":"ParameterList","parameters":[],"src":"416:2:4"},"returnParameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1116,"src":"442:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1113,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:4"},"scope":1131,"src":"403:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1117,"nodeType":"StructuredDocumentation","src":"463:60:4","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1122,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:4","nodeType":"FunctionDefinition","parameters":{"id":1118,"nodeType":"ParameterList","parameters":[],"src":"543:2:4"},"returnParameters":{"id":1121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1122,"src":"569:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1119,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:4"},"scope":1131,"src":"528:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1123,"nodeType":"StructuredDocumentation","src":"590:90:4","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1130,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:4","nodeType":"FunctionDefinition","parameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:4","nodeType":"VariableDeclaration","scope":1130,"src":"703:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1124,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:4"},"returnParameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1130,"src":"743:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1127,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:4"},"scope":1131,"src":"685:73:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1132,"src":"297:463:4","usedErrors":[]}],"src":"112:649:4"},"id":4},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1426]},"id":1427,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1133,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1134,"nodeType":"StructuredDocumentation","src":"126:67:5","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1426,"linearizedBaseContracts":[1426],"name":"Address","nameLocation":"202:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1148,"nodeType":"Block","src":"1241:254:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1142,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"1465:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1141,"id":1147,"nodeType":"Return","src":"1458:30:5"}]},"documentation":{"id":1135,"nodeType":"StructuredDocumentation","src":"216:954:5","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1149,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:5","nodeType":"FunctionDefinition","parameters":{"id":1138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1137,"mutability":"mutable","name":"account","nameLocation":"1203:7:5","nodeType":"VariableDeclaration","scope":1149,"src":"1195:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1136,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:5"},"returnParameters":{"id":1141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1149,"src":"1235:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1139,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:5"},"scope":1426,"src":"1175:320:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1182,"nodeType":"Block","src":"2483:241:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1160,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1426","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1426","typeString":"library Address"}],"id":1159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1158,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:5","typeDescriptions":{}}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1163,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"2526:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1157,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1167,"nodeType":"ExpressionStatement","src":"2493:73:5"},{"assignments":[1169,null],"declarations":[{"constant":false,"id":1169,"mutability":"mutable","name":"success","nameLocation":"2583:7:5","nodeType":"VariableDeclaration","scope":1182,"src":"2578:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1168,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1176,"initialValue":{"arguments":[{"hexValue":"","id":1174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1170,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"2596:9:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1172,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"2618:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:5"},{"expression":{"arguments":[{"id":1178,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"2647:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1177,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1181,"nodeType":"ExpressionStatement","src":"2639:78:5"}]},"documentation":{"id":1150,"nodeType":"StructuredDocumentation","src":"1501:906:5","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1183,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:5","nodeType":"FunctionDefinition","parameters":{"id":1155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:5","nodeType":"VariableDeclaration","scope":1183,"src":"2431:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1151,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1154,"mutability":"mutable","name":"amount","nameLocation":"2466:6:5","nodeType":"VariableDeclaration","scope":1183,"src":"2458:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1153,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:5"},"returnParameters":{"id":1156,"nodeType":"ParameterList","parameters":[],"src":"2483:0:5"},"scope":1426,"src":"2412:312:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1199,"nodeType":"Block","src":"3555:84:5","statements":[{"expression":{"arguments":[{"id":1194,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"3585:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1195,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"3593:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3599:32:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1193,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[1200,1220],"referencedDeclaration":1220,"src":"3572:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1192,"id":1198,"nodeType":"Return","src":"3565:67:5"}]},"documentation":{"id":1184,"nodeType":"StructuredDocumentation","src":"2730:731:5","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1200,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:5","nodeType":"FunctionDefinition","parameters":{"id":1189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1186,"mutability":"mutable","name":"target","nameLocation":"3496:6:5","nodeType":"VariableDeclaration","scope":1200,"src":"3488:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1188,"mutability":"mutable","name":"data","nameLocation":"3517:4:5","nodeType":"VariableDeclaration","scope":1200,"src":"3504:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1187,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:5"},"returnParameters":{"id":1192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1200,"src":"3541:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1190,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:5"},"scope":1426,"src":"3466:173:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1219,"nodeType":"Block","src":"4008:76:5","statements":[{"expression":{"arguments":[{"id":1213,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"4047:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1214,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"4055:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4061:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1216,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"4064:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1212,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1240,1290],"referencedDeclaration":1290,"src":"4025:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4025:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1211,"id":1218,"nodeType":"Return","src":"4018:59:5"}]},"documentation":{"id":1201,"nodeType":"StructuredDocumentation","src":"3645:211:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1220,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3870:12:5","nodeType":"FunctionDefinition","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1203,"mutability":"mutable","name":"target","nameLocation":"3900:6:5","nodeType":"VariableDeclaration","scope":1220,"src":"3892:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1202,"name":"address","nodeType":"ElementaryTypeName","src":"3892:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1205,"mutability":"mutable","name":"data","nameLocation":"3929:4:5","nodeType":"VariableDeclaration","scope":1220,"src":"3916:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1204,"name":"bytes","nodeType":"ElementaryTypeName","src":"3916:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1207,"mutability":"mutable","name":"errorMessage","nameLocation":"3957:12:5","nodeType":"VariableDeclaration","scope":1220,"src":"3943:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1206,"name":"string","nodeType":"ElementaryTypeName","src":"3943:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3882:93:5"},"returnParameters":{"id":1211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1220,"src":"3994:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1209,"name":"bytes","nodeType":"ElementaryTypeName","src":"3994:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3993:14:5"},"scope":1426,"src":"3861:223:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1239,"nodeType":"Block","src":"4589:111:5","statements":[{"expression":{"arguments":[{"id":1233,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"4628:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1234,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"4636:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"4642:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4649:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1232,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1240,1290],"referencedDeclaration":1290,"src":"4606:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4606:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1231,"id":1238,"nodeType":"Return","src":"4599:94:5"}]},"documentation":{"id":1221,"nodeType":"StructuredDocumentation","src":"4090:351:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1240,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4455:21:5","nodeType":"FunctionDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"target","nameLocation":"4494:6:5","nodeType":"VariableDeclaration","scope":1240,"src":"4486:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1222,"name":"address","nodeType":"ElementaryTypeName","src":"4486:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1225,"mutability":"mutable","name":"data","nameLocation":"4523:4:5","nodeType":"VariableDeclaration","scope":1240,"src":"4510:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1224,"name":"bytes","nodeType":"ElementaryTypeName","src":"4510:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"value","nameLocation":"4545:5:5","nodeType":"VariableDeclaration","scope":1240,"src":"4537:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1226,"name":"uint256","nodeType":"ElementaryTypeName","src":"4537:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4476:80:5"},"returnParameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1240,"src":"4575:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1229,"name":"bytes","nodeType":"ElementaryTypeName","src":"4575:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4574:14:5"},"scope":1426,"src":"4446:254:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1289,"nodeType":"Block","src":"5127:320:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1257,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5153:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1426","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1426","typeString":"library Address"}],"id":1256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5145:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1255,"name":"address","nodeType":"ElementaryTypeName","src":"5145:7:5","typeDescriptions":{}}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5145:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5145:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"5170:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5145:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5177:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1254,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5137:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1264,"nodeType":"ExpressionStatement","src":"5137:81:5"},{"expression":{"arguments":[{"arguments":[{"id":1267,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"5247:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1266,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"5236:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5236:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5256:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1265,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5228:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5228:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1271,"nodeType":"ExpressionStatement","src":"5228:60:5"},{"assignments":[1273,1275],"declarations":[{"constant":false,"id":1273,"mutability":"mutable","name":"success","nameLocation":"5305:7:5","nodeType":"VariableDeclaration","scope":1289,"src":"5300:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1272,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1275,"mutability":"mutable","name":"returndata","nameLocation":"5327:10:5","nodeType":"VariableDeclaration","scope":1289,"src":"5314:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1274,"name":"bytes","nodeType":"ElementaryTypeName","src":"5314:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1282,"initialValue":{"arguments":[{"id":1280,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"5367:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1276,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"5341:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5341:11:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"5360:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5341:25:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5341:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5299:73:5"},{"expression":{"arguments":[{"id":1284,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"5406:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1285,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"5415:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1286,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"5427:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1283,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"5389:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5389:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1253,"id":1288,"nodeType":"Return","src":"5382:58:5"}]},"documentation":{"id":1241,"nodeType":"StructuredDocumentation","src":"4706:237:5","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1290,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4957:21:5","nodeType":"FunctionDefinition","parameters":{"id":1250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"mutability":"mutable","name":"target","nameLocation":"4996:6:5","nodeType":"VariableDeclaration","scope":1290,"src":"4988:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1242,"name":"address","nodeType":"ElementaryTypeName","src":"4988:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1245,"mutability":"mutable","name":"data","nameLocation":"5025:4:5","nodeType":"VariableDeclaration","scope":1290,"src":"5012:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1244,"name":"bytes","nodeType":"ElementaryTypeName","src":"5012:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"value","nameLocation":"5047:5:5","nodeType":"VariableDeclaration","scope":1290,"src":"5039:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1246,"name":"uint256","nodeType":"ElementaryTypeName","src":"5039:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"errorMessage","nameLocation":"5076:12:5","nodeType":"VariableDeclaration","scope":1290,"src":"5062:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1248,"name":"string","nodeType":"ElementaryTypeName","src":"5062:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4978:116:5"},"returnParameters":{"id":1253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1290,"src":"5113:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1251,"name":"bytes","nodeType":"ElementaryTypeName","src":"5113:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5112:14:5"},"scope":1426,"src":"4948:499:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1306,"nodeType":"Block","src":"5724:97:5","statements":[{"expression":{"arguments":[{"id":1301,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"5760:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1302,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"5768:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5774:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1300,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1307,1342],"referencedDeclaration":1342,"src":"5741:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5741:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1299,"id":1305,"nodeType":"Return","src":"5734:80:5"}]},"documentation":{"id":1291,"nodeType":"StructuredDocumentation","src":"5453:166:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1307,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5633:18:5","nodeType":"FunctionDefinition","parameters":{"id":1296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1293,"mutability":"mutable","name":"target","nameLocation":"5660:6:5","nodeType":"VariableDeclaration","scope":1307,"src":"5652:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1292,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1295,"mutability":"mutable","name":"data","nameLocation":"5681:4:5","nodeType":"VariableDeclaration","scope":1307,"src":"5668:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1294,"name":"bytes","nodeType":"ElementaryTypeName","src":"5668:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5651:35:5"},"returnParameters":{"id":1299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1307,"src":"5710:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1297,"name":"bytes","nodeType":"ElementaryTypeName","src":"5710:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5709:14:5"},"scope":1426,"src":"5624:197:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1341,"nodeType":"Block","src":"6163:228:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1321,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"6192:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1320,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"6181:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6181:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":1323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6201:38:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":1319,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6173:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6173:67:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1325,"nodeType":"ExpressionStatement","src":"6173:67:5"},{"assignments":[1327,1329],"declarations":[{"constant":false,"id":1327,"mutability":"mutable","name":"success","nameLocation":"6257:7:5","nodeType":"VariableDeclaration","scope":1341,"src":"6252:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1326,"name":"bool","nodeType":"ElementaryTypeName","src":"6252:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1329,"mutability":"mutable","name":"returndata","nameLocation":"6279:10:5","nodeType":"VariableDeclaration","scope":1341,"src":"6266:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1328,"name":"bytes","nodeType":"ElementaryTypeName","src":"6266:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1334,"initialValue":{"arguments":[{"id":1332,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"6311:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1330,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"6293:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6293:17:5","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6293:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6251:65:5"},{"expression":{"arguments":[{"id":1336,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"6350:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1337,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"6359:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1338,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"6371:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1335,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"6333:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6333:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1318,"id":1340,"nodeType":"Return","src":"6326:58:5"}]},"documentation":{"id":1308,"nodeType":"StructuredDocumentation","src":"5827:173:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1342,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6014:18:5","nodeType":"FunctionDefinition","parameters":{"id":1315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"target","nameLocation":"6050:6:5","nodeType":"VariableDeclaration","scope":1342,"src":"6042:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"6042:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"data","nameLocation":"6079:4:5","nodeType":"VariableDeclaration","scope":1342,"src":"6066:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1311,"name":"bytes","nodeType":"ElementaryTypeName","src":"6066:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1314,"mutability":"mutable","name":"errorMessage","nameLocation":"6107:12:5","nodeType":"VariableDeclaration","scope":1342,"src":"6093:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1313,"name":"string","nodeType":"ElementaryTypeName","src":"6093:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6032:93:5"},"returnParameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1342,"src":"6149:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1316,"name":"bytes","nodeType":"ElementaryTypeName","src":"6149:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6148:14:5"},"scope":1426,"src":"6005:386:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1358,"nodeType":"Block","src":"6667:101:5","statements":[{"expression":{"arguments":[{"id":1353,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"6705:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1354,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"6713:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6719:41:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1352,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1359,1394],"referencedDeclaration":1394,"src":"6684:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6684:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1351,"id":1357,"nodeType":"Return","src":"6677:84:5"}]},"documentation":{"id":1343,"nodeType":"StructuredDocumentation","src":"6397:168:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1359,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6579:20:5","nodeType":"FunctionDefinition","parameters":{"id":1348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"target","nameLocation":"6608:6:5","nodeType":"VariableDeclaration","scope":1359,"src":"6600:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1344,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1347,"mutability":"mutable","name":"data","nameLocation":"6629:4:5","nodeType":"VariableDeclaration","scope":1359,"src":"6616:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1346,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6599:35:5"},"returnParameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1359,"src":"6653:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1349,"name":"bytes","nodeType":"ElementaryTypeName","src":"6653:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6652:14:5"},"scope":1426,"src":"6570:198:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1393,"nodeType":"Block","src":"7109:232:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1373,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"7138:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1372,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"7127:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7127:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":1375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7147:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":1371,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7119:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7119:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1377,"nodeType":"ExpressionStatement","src":"7119:69:5"},{"assignments":[1379,1381],"declarations":[{"constant":false,"id":1379,"mutability":"mutable","name":"success","nameLocation":"7205:7:5","nodeType":"VariableDeclaration","scope":1393,"src":"7200:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1378,"name":"bool","nodeType":"ElementaryTypeName","src":"7200:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1381,"mutability":"mutable","name":"returndata","nameLocation":"7227:10:5","nodeType":"VariableDeclaration","scope":1393,"src":"7214:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1380,"name":"bytes","nodeType":"ElementaryTypeName","src":"7214:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1386,"initialValue":{"arguments":[{"id":1384,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"7261:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1382,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"7241:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7241:19:5","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7241:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7199:67:5"},{"expression":{"arguments":[{"id":1388,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"7300:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1389,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"7309:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1390,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"7321:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1387,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"7283:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7283:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1370,"id":1392,"nodeType":"Return","src":"7276:58:5"}]},"documentation":{"id":1360,"nodeType":"StructuredDocumentation","src":"6774:175:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1394,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6963:20:5","nodeType":"FunctionDefinition","parameters":{"id":1367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1362,"mutability":"mutable","name":"target","nameLocation":"7001:6:5","nodeType":"VariableDeclaration","scope":1394,"src":"6993:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1361,"name":"address","nodeType":"ElementaryTypeName","src":"6993:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1364,"mutability":"mutable","name":"data","nameLocation":"7030:4:5","nodeType":"VariableDeclaration","scope":1394,"src":"7017:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1363,"name":"bytes","nodeType":"ElementaryTypeName","src":"7017:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1366,"mutability":"mutable","name":"errorMessage","nameLocation":"7058:12:5","nodeType":"VariableDeclaration","scope":1394,"src":"7044:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1365,"name":"string","nodeType":"ElementaryTypeName","src":"7044:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6983:93:5"},"returnParameters":{"id":1370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1394,"src":"7095:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1368,"name":"bytes","nodeType":"ElementaryTypeName","src":"7095:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7094:14:5"},"scope":1426,"src":"6954:387:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1424,"nodeType":"Block","src":"7721:532:5","statements":[{"condition":{"id":1406,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"7735:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1422,"nodeType":"Block","src":"7792:455:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1410,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"7876:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7876:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7876:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1420,"nodeType":"Block","src":"8184:53:5","statements":[{"expression":{"arguments":[{"id":1417,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"8209:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1416,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8202:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8202:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1419,"nodeType":"ExpressionStatement","src":"8202:20:5"}]},"id":1421,"nodeType":"IfStatement","src":"7872:365:5","trueBody":{"id":1415,"nodeType":"Block","src":"7899:279:5","statements":[{"AST":{"nodeType":"YulBlock","src":"8019:145:5","statements":[{"nodeType":"YulVariableDeclaration","src":"8041:40:5","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8070:10:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8064:5:5"},"nodeType":"YulFunctionCall","src":"8064:17:5"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8045:15:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8113:2:5","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8117:10:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8109:3:5"},"nodeType":"YulFunctionCall","src":"8109:19:5"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8130:15:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8102:6:5"},"nodeType":"YulFunctionCall","src":"8102:44:5"},"nodeType":"YulExpressionStatement","src":"8102:44:5"}]},"evmVersion":"london","externalReferences":[{"declaration":1399,"isOffset":false,"isSlot":false,"src":"8070:10:5","valueSize":1},{"declaration":1399,"isOffset":false,"isSlot":false,"src":"8117:10:5","valueSize":1}],"id":1414,"nodeType":"InlineAssembly","src":"8010:154:5"}]}}]},"id":1423,"nodeType":"IfStatement","src":"7731:516:5","trueBody":{"id":1409,"nodeType":"Block","src":"7744:42:5","statements":[{"expression":{"id":1407,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"7765:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1405,"id":1408,"nodeType":"Return","src":"7758:17:5"}]}}]},"documentation":{"id":1395,"nodeType":"StructuredDocumentation","src":"7347:209:5","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":1425,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7570:16:5","nodeType":"FunctionDefinition","parameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"success","nameLocation":"7601:7:5","nodeType":"VariableDeclaration","scope":1425,"src":"7596:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1396,"name":"bool","nodeType":"ElementaryTypeName","src":"7596:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1399,"mutability":"mutable","name":"returndata","nameLocation":"7631:10:5","nodeType":"VariableDeclaration","scope":1425,"src":"7618:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1398,"name":"bytes","nodeType":"ElementaryTypeName","src":"7618:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1401,"mutability":"mutable","name":"errorMessage","nameLocation":"7665:12:5","nodeType":"VariableDeclaration","scope":1425,"src":"7651:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1400,"name":"string","nodeType":"ElementaryTypeName","src":"7651:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7586:97:5"},"returnParameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1425,"src":"7707:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1403,"name":"bytes","nodeType":"ElementaryTypeName","src":"7707:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7706:14:5"},"scope":1426,"src":"7561:692:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1427,"src":"194:8061:5","usedErrors":[]}],"src":"101:8155:5"},"id":5},"@openzeppelin/contracts/utils/Base64.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Base64.sol","exportedSymbols":{"Base64":[1473]},"id":1474,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1428,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"Base64","contractDependencies":[],"contractKind":"library","documentation":{"id":1429,"nodeType":"StructuredDocumentation","src":"125:105:6","text":" @dev Provides a set of functions to operate with Base64 strings.\n _Available since v4.5._"},"fullyImplemented":true,"id":1473,"linearizedBaseContracts":[1473],"name":"Base64","nameLocation":"239:6:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1430,"nodeType":"StructuredDocumentation","src":"252:54:6","text":" @dev Base64 Encoding/Decoding Table"},"id":1433,"mutability":"constant","name":"_TABLE","nameLocation":"336:6:6","nodeType":"VariableDeclaration","scope":1473,"src":"311:100:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1431,"name":"string","nodeType":"ElementaryTypeName","src":"311:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f","id":1432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"345:66:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce","typeString":"literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\""},"value":"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"},"visibility":"internal"},{"body":{"id":1471,"nodeType":"Block","src":"578:2910:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1441,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"795:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"795:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"810:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"795:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":" Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol","id":1447,"nodeType":"IfStatement","src":"791:31:6","trueBody":{"expression":{"hexValue":"","id":1445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"820:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1440,"id":1446,"nodeType":"Return","src":"813:9:6"}},{"assignments":[1449],"declarations":[{"constant":false,"id":1449,"mutability":"mutable","name":"table","nameLocation":"886:5:6","nodeType":"VariableDeclaration","scope":1471,"src":"872:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1448,"name":"string","nodeType":"ElementaryTypeName","src":"872:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1451,"initialValue":{"id":1450,"name":"_TABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"894:6:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"872:28:6"},{"assignments":[1453],"declarations":[{"constant":false,"id":1453,"mutability":"mutable","name":"result","nameLocation":"1317:6:6","nodeType":"VariableDeclaration","scope":1471,"src":"1303:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1452,"name":"string","nodeType":"ElementaryTypeName","src":"1303:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1467,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":1456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1337:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1457,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"1343:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1343:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1357:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1343:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1461,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1342:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:6","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"1342:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1464,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1341:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1337:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1326:10:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1454,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1326:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1303:62:6"},{"AST":{"nodeType":"YulBlock","src":"1385:2073:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1470:29:6","value":{"arguments":[{"name":"table","nodeType":"YulIdentifier","src":"1490:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"1497:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1486:3:6"},"nodeType":"YulFunctionCall","src":"1486:13:6"},"variables":[{"name":"tablePtr","nodeType":"YulTypedName","src":"1474:8:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1569:32:6","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"1590:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"1598:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1586:3:6"},"nodeType":"YulFunctionCall","src":"1586:15:6"},"variables":[{"name":"resultPtr","nodeType":"YulTypedName","src":"1573:9:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"1814:1257:6","statements":[{"nodeType":"YulAssignment","src":"1867:26:6","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1882:7:6"},{"kind":"number","nodeType":"YulLiteral","src":"1891:1:6","type":"","value":"3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1878:3:6"},"nodeType":"YulFunctionCall","src":"1878:15:6"},"variableNames":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1867:7:6"}]},{"nodeType":"YulVariableDeclaration","src":"1910:27:6","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1929:7:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1923:5:6"},"nodeType":"YulFunctionCall","src":"1923:14:6"},"variables":[{"name":"input","nodeType":"YulTypedName","src":"1914:5:6","type":""}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2521:9:6"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2542:8:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2560:2:6","type":"","value":"18"},{"name":"input","nodeType":"YulIdentifier","src":"2564:5:6"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2556:3:6"},"nodeType":"YulFunctionCall","src":"2556:14:6"},{"kind":"number","nodeType":"YulLiteral","src":"2572:4:6","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2552:3:6"},"nodeType":"YulFunctionCall","src":"2552:25:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:6"},"nodeType":"YulFunctionCall","src":"2538:40:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2532:5:6"},"nodeType":"YulFunctionCall","src":"2532:47:6"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2513:7:6"},"nodeType":"YulFunctionCall","src":"2513:67:6"},"nodeType":"YulExpressionStatement","src":"2513:67:6"},{"nodeType":"YulAssignment","src":"2597:30:6","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2614:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2625:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2610:3:6"},"nodeType":"YulFunctionCall","src":"2610:17:6"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2597:9:6"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2664:9:6"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2685:8:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2703:2:6","type":"","value":"12"},{"name":"input","nodeType":"YulIdentifier","src":"2707:5:6"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2699:3:6"},"nodeType":"YulFunctionCall","src":"2699:14:6"},{"kind":"number","nodeType":"YulLiteral","src":"2715:4:6","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2695:3:6"},"nodeType":"YulFunctionCall","src":"2695:25:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2681:3:6"},"nodeType":"YulFunctionCall","src":"2681:40:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2675:5:6"},"nodeType":"YulFunctionCall","src":"2675:47:6"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2656:7:6"},"nodeType":"YulFunctionCall","src":"2656:67:6"},"nodeType":"YulExpressionStatement","src":"2656:67:6"},{"nodeType":"YulAssignment","src":"2740:30:6","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2757:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2768:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2753:3:6"},"nodeType":"YulFunctionCall","src":"2753:17:6"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2740:9:6"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2807:9:6"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2828:8:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2846:1:6","type":"","value":"6"},{"name":"input","nodeType":"YulIdentifier","src":"2849:5:6"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2842:3:6"},"nodeType":"YulFunctionCall","src":"2842:13:6"},{"kind":"number","nodeType":"YulLiteral","src":"2857:4:6","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2838:3:6"},"nodeType":"YulFunctionCall","src":"2838:24:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2824:3:6"},"nodeType":"YulFunctionCall","src":"2824:39:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2818:5:6"},"nodeType":"YulFunctionCall","src":"2818:46:6"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2799:7:6"},"nodeType":"YulFunctionCall","src":"2799:66:6"},"nodeType":"YulExpressionStatement","src":"2799:66:6"},{"nodeType":"YulAssignment","src":"2882:30:6","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2899:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2910:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2895:3:6"},"nodeType":"YulFunctionCall","src":"2895:17:6"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2882:9:6"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2949:9:6"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2970:8:6"},{"arguments":[{"name":"input","nodeType":"YulIdentifier","src":"2984:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"2991:4:6","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2980:3:6"},"nodeType":"YulFunctionCall","src":"2980:16:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2966:3:6"},"nodeType":"YulFunctionCall","src":"2966:31:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2960:5:6"},"nodeType":"YulFunctionCall","src":"2960:38:6"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2941:7:6"},"nodeType":"YulFunctionCall","src":"2941:58:6"},"nodeType":"YulExpressionStatement","src":"2941:58:6"},{"nodeType":"YulAssignment","src":"3016:30:6","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3033:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3044:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3029:3:6"},"nodeType":"YulFunctionCall","src":"3029:17:6"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3016:9:6"}]}]},"condition":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1780:7:6"},{"name":"endPtr","nodeType":"YulIdentifier","src":"1789:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1777:2:6"},"nodeType":"YulFunctionCall","src":"1777:19:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1797:16:6","statements":[]},"pre":{"nodeType":"YulBlock","src":"1672:104:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1690:19:6","value":{"name":"data","nodeType":"YulIdentifier","src":"1705:4:6"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"1694:7:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1726:36:6","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1744:4:6"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1756:4:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1750:5:6"},"nodeType":"YulFunctionCall","src":"1750:11:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1740:3:6"},"nodeType":"YulFunctionCall","src":"1740:22:6"},"variables":[{"name":"endPtr","nodeType":"YulTypedName","src":"1730:6:6","type":""}]}]},"src":"1668:1403:6"},{"cases":[{"body":{"nodeType":"YulBlock","src":"3251:113:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3281:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3292:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3277:3:6"},"nodeType":"YulFunctionCall","src":"3277:17:6"},{"kind":"number","nodeType":"YulLiteral","src":"3296:4:6","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3269:7:6"},"nodeType":"YulFunctionCall","src":"3269:32:6"},"nodeType":"YulExpressionStatement","src":"3269:32:6"},{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3330:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3341:1:6","type":"","value":"2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3326:3:6"},"nodeType":"YulFunctionCall","src":"3326:17:6"},{"kind":"number","nodeType":"YulLiteral","src":"3345:4:6","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3318:7:6"},"nodeType":"YulFunctionCall","src":"3318:32:6"},"nodeType":"YulExpressionStatement","src":"3318:32:6"}]},"nodeType":"YulCase","src":"3244:120:6","value":{"kind":"number","nodeType":"YulLiteral","src":"3249:1:6","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3384:64:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3414:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3425:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3410:3:6"},"nodeType":"YulFunctionCall","src":"3410:17:6"},{"kind":"number","nodeType":"YulLiteral","src":"3429:4:6","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3402:7:6"},"nodeType":"YulFunctionCall","src":"3402:32:6"},"nodeType":"YulExpressionStatement","src":"3402:32:6"}]},"nodeType":"YulCase","src":"3377:71:6","value":{"kind":"number","nodeType":"YulLiteral","src":"3382:1:6","type":"","value":"2"}}],"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3222:4:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3216:5:6"},"nodeType":"YulFunctionCall","src":"3216:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"3229:1:6","type":"","value":"3"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3212:3:6"},"nodeType":"YulFunctionCall","src":"3212:19:6"},"nodeType":"YulSwitch","src":"3205:243:6"}]},"evmVersion":"london","externalReferences":[{"declaration":1436,"isOffset":false,"isSlot":false,"src":"1705:4:6","valueSize":1},{"declaration":1436,"isOffset":false,"isSlot":false,"src":"1744:4:6","valueSize":1},{"declaration":1436,"isOffset":false,"isSlot":false,"src":"1756:4:6","valueSize":1},{"declaration":1436,"isOffset":false,"isSlot":false,"src":"3222:4:6","valueSize":1},{"declaration":1453,"isOffset":false,"isSlot":false,"src":"1590:6:6","valueSize":1},{"declaration":1449,"isOffset":false,"isSlot":false,"src":"1490:5:6","valueSize":1}],"id":1468,"nodeType":"InlineAssembly","src":"1376:2082:6"},{"expression":{"id":1469,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"3475:6:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1440,"id":1470,"nodeType":"Return","src":"3468:13:6"}]},"documentation":{"id":1434,"nodeType":"StructuredDocumentation","src":"418:82:6","text":" @dev Converts a `bytes` to its Bytes64 `string` representation."},"id":1472,"implemented":true,"kind":"function","modifiers":[],"name":"encode","nameLocation":"514:6:6","nodeType":"FunctionDefinition","parameters":{"id":1437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1436,"mutability":"mutable","name":"data","nameLocation":"534:4:6","nodeType":"VariableDeclaration","scope":1472,"src":"521:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1435,"name":"bytes","nodeType":"ElementaryTypeName","src":"521:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"520:19:6"},"returnParameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1472,"src":"563:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1438,"name":"string","nodeType":"ElementaryTypeName","src":"563:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"562:15:6"},"scope":1473,"src":"505:2983:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1474,"src":"231:3259:6","usedErrors":[]}],"src":"100:3391:6"},"id":6},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1495]},"id":1496,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1475,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:7"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1476,"nodeType":"StructuredDocumentation","src":"111:496:7","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1495,"linearizedBaseContracts":[1495],"name":"Context","nameLocation":"626:7:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1484,"nodeType":"Block","src":"702:34:7","statements":[{"expression":{"expression":{"id":1481,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1480,"id":1483,"nodeType":"Return","src":"712:17:7"}]},"id":1485,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:7","nodeType":"FunctionDefinition","parameters":{"id":1477,"nodeType":"ParameterList","parameters":[],"src":"659:2:7"},"returnParameters":{"id":1480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1485,"src":"693:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1478,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:7"},"scope":1495,"src":"640:96:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1493,"nodeType":"Block","src":"809:32:7","statements":[{"expression":{"expression":{"id":1490,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1489,"id":1492,"nodeType":"Return","src":"819:15:7"}]},"id":1494,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:7","nodeType":"FunctionDefinition","parameters":{"id":1486,"nodeType":"ParameterList","parameters":[],"src":"759:2:7"},"returnParameters":{"id":1489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1494,"src":"793:14:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1487,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:7"},"scope":1495,"src":"742:99:7","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1496,"src":"608:235:7","usedErrors":[]}],"src":"86:758:7"},"id":7},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Strings":[1698]},"id":1699,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1497,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1498,"nodeType":"StructuredDocumentation","src":"111:34:8","text":" @dev String operations."},"fullyImplemented":true,"id":1698,"linearizedBaseContracts":[1698],"name":"Strings","nameLocation":"154:7:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1501,"mutability":"constant","name":"_HEX_SYMBOLS","nameLocation":"193:12:8","nodeType":"VariableDeclaration","scope":1698,"src":"168:58:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1499,"name":"bytes16","nodeType":"ElementaryTypeName","src":"168:7:8","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"208:18:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"body":{"id":1579,"nodeType":"Block","src":"399:632:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"601:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"610:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"601:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1515,"nodeType":"IfStatement","src":"597:51:8","trueBody":{"id":1514,"nodeType":"Block","src":"613:35:8","statements":[{"expression":{"hexValue":"30","id":1512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"634:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":1508,"id":1513,"nodeType":"Return","src":"627:10:8"}]}},{"assignments":[1517],"declarations":[{"constant":false,"id":1517,"mutability":"mutable","name":"temp","nameLocation":"665:4:8","nodeType":"VariableDeclaration","scope":1579,"src":"657:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1516,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1519,"initialValue":{"id":1518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"672:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"657:20:8"},{"assignments":[1521],"declarations":[{"constant":false,"id":1521,"mutability":"mutable","name":"digits","nameLocation":"695:6:8","nodeType":"VariableDeclaration","scope":1579,"src":"687:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1520,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1522,"nodeType":"VariableDeclarationStatement","src":"687:14:8"},{"body":{"id":1533,"nodeType":"Block","src":"729:57:8","statements":[{"expression":{"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"743:8:8","subExpression":{"id":1526,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"743:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1528,"nodeType":"ExpressionStatement","src":"743:8:8"},{"expression":{"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1529,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"765:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"773:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"765:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1532,"nodeType":"ExpressionStatement","src":"765:10:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1523,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"718:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"726:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"718:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1534,"nodeType":"WhileStatement","src":"711:75:8"},{"assignments":[1536],"declarations":[{"constant":false,"id":1536,"mutability":"mutable","name":"buffer","nameLocation":"808:6:8","nodeType":"VariableDeclaration","scope":1579,"src":"795:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1535,"name":"bytes","nodeType":"ElementaryTypeName","src":"795:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1541,"initialValue":{"arguments":[{"id":1539,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"827:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:9:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1537,"name":"bytes","nodeType":"ElementaryTypeName","src":"821:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"817:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"795:39:8"},{"body":{"id":1572,"nodeType":"Block","src":"863:131:8","statements":[{"expression":{"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1545,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"877:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"887:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"877:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1548,"nodeType":"ExpressionStatement","src":"877:11:8"},{"expression":{"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1549,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"902:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1551,"indexExpression":{"id":1550,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"909:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"902:14:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":1556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"932:2:8","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"945:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":1560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"953:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"945:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"937:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1557,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:8","typeDescriptions":{}}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"937:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"932:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"926:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1554,"name":"uint8","nodeType":"ElementaryTypeName","src":"926:5:8","typeDescriptions":{}}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"926:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"919:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1552,"name":"bytes1","nodeType":"ElementaryTypeName","src":"919:6:8","typeDescriptions":{}}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"919:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"902:56:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1567,"nodeType":"ExpressionStatement","src":"902:56:8"},{"expression":{"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"972:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"981:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"972:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1571,"nodeType":"ExpressionStatement","src":"972:11:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"851:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"860:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"851:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1573,"nodeType":"WhileStatement","src":"844:150:8"},{"expression":{"arguments":[{"id":1576,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"1017:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1010:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1574,"name":"string","nodeType":"ElementaryTypeName","src":"1010:6:8","typeDescriptions":{}}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1010:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1508,"id":1578,"nodeType":"Return","src":"1003:21:8"}]},"documentation":{"id":1502,"nodeType":"StructuredDocumentation","src":"233:90:8","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1580,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"337:8:8","nodeType":"FunctionDefinition","parameters":{"id":1505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"mutability":"mutable","name":"value","nameLocation":"354:5:8","nodeType":"VariableDeclaration","scope":1580,"src":"346:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1503,"name":"uint256","nodeType":"ElementaryTypeName","src":"346:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"345:15:8"},"returnParameters":{"id":1508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1580,"src":"384:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1506,"name":"string","nodeType":"ElementaryTypeName","src":"384:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"383:15:8"},"scope":1698,"src":"328:703:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1620,"nodeType":"Block","src":"1210:255:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"1224:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1224:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1594,"nodeType":"IfStatement","src":"1220:54:8","trueBody":{"id":1593,"nodeType":"Block","src":"1236:38:8","statements":[{"expression":{"hexValue":"30783030","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1257:6:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4","typeString":"literal_string \"0x00\""},"value":"0x00"},"functionReturnParameters":1587,"id":1592,"nodeType":"Return","src":"1250:13:8"}]}},{"assignments":[1596],"declarations":[{"constant":false,"id":1596,"mutability":"mutable","name":"temp","nameLocation":"1291:4:8","nodeType":"VariableDeclaration","scope":1620,"src":"1283:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1595,"name":"uint256","nodeType":"ElementaryTypeName","src":"1283:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1598,"initialValue":{"id":1597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"1298:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1283:20:8"},{"assignments":[1600],"declarations":[{"constant":false,"id":1600,"mutability":"mutable","name":"length","nameLocation":"1321:6:8","nodeType":"VariableDeclaration","scope":1620,"src":"1313:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"1313:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1602,"initialValue":{"hexValue":"30","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1330:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1313:18:8"},{"body":{"id":1613,"nodeType":"Block","src":"1359:57:8","statements":[{"expression":{"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1373:8:8","subExpression":{"id":1606,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"1373:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1608,"nodeType":"ExpressionStatement","src":"1373:8:8"},{"expression":{"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1609,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"1395:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1404:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1395:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1612,"nodeType":"ExpressionStatement","src":"1395:10:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1603,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"1348:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1356:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1348:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1614,"nodeType":"WhileStatement","src":"1341:75:8"},{"expression":{"arguments":[{"id":1616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"1444:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1617,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"1451:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1615,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1621,1697],"referencedDeclaration":1697,"src":"1432:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1432:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1587,"id":1619,"nodeType":"Return","src":"1425:33:8"}]},"documentation":{"id":1581,"nodeType":"StructuredDocumentation","src":"1037:94:8","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1621,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1145:11:8","nodeType":"FunctionDefinition","parameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"value","nameLocation":"1165:5:8","nodeType":"VariableDeclaration","scope":1621,"src":"1157:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1582,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:15:8"},"returnParameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1621,"src":"1195:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1585,"name":"string","nodeType":"ElementaryTypeName","src":"1195:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1194:15:8"},"scope":1698,"src":"1136:329:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1696,"nodeType":"Block","src":"1678:351:8","statements":[{"assignments":[1632],"declarations":[{"constant":false,"id":1632,"mutability":"mutable","name":"buffer","nameLocation":"1701:6:8","nodeType":"VariableDeclaration","scope":1696,"src":"1688:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1631,"name":"bytes","nodeType":"ElementaryTypeName","src":"1688:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1641,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1720:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1636,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"1724:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1720:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1733:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1720:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1710:9:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1633,"name":"bytes","nodeType":"ElementaryTypeName","src":"1714:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1710:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1688:47:8"},{"expression":{"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1642,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"1745:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1644,"indexExpression":{"hexValue":"30","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1752:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1745:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1757:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1745:15:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1647,"nodeType":"ExpressionStatement","src":"1745:15:8"},{"expression":{"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1648,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"1770:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1650,"indexExpression":{"hexValue":"31","id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1777:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1770:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1782:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1770:15:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1653,"nodeType":"ExpressionStatement","src":"1770:15:8"},{"body":{"id":1682,"nodeType":"Block","src":"1840:87:8","statements":[{"expression":{"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1668,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"1854:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1670,"indexExpression":{"id":1669,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"1861:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1854:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1671,"name":"_HEX_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"1866:12:8","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1675,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"1879:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1887:3:8","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1879:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1866:25:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1854:37:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1677,"nodeType":"ExpressionStatement","src":"1854:37:8"},{"expression":{"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"1905:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1905:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1681,"nodeType":"ExpressionStatement","src":"1905:11:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1662,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"1828:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1832:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1828:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1683,"initializationExpression":{"assignments":[1655],"declarations":[{"constant":false,"id":1655,"mutability":"mutable","name":"i","nameLocation":"1808:1:8","nodeType":"VariableDeclaration","scope":1683,"src":"1800:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1654,"name":"uint256","nodeType":"ElementaryTypeName","src":"1800:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1661,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1812:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1657,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"1816:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1812:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1825:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1812:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1800:26:8"},"loopExpression":{"expression":{"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1835:3:8","subExpression":{"id":1665,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"1837:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1667,"nodeType":"ExpressionStatement","src":"1835:3:8"},"nodeType":"ForStatement","src":"1795:132:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"1944:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1953:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1944:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1956:34:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1684,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1936:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1936:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1690,"nodeType":"ExpressionStatement","src":"1936:55:8"},{"expression":{"arguments":[{"id":1693,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"2015:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2008:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1691,"name":"string","nodeType":"ElementaryTypeName","src":"2008:6:8","typeDescriptions":{}}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2008:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1630,"id":1695,"nodeType":"Return","src":"2001:21:8"}]},"documentation":{"id":1622,"nodeType":"StructuredDocumentation","src":"1471:112:8","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1697,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1597:11:8","nodeType":"FunctionDefinition","parameters":{"id":1627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1624,"mutability":"mutable","name":"value","nameLocation":"1617:5:8","nodeType":"VariableDeclaration","scope":1697,"src":"1609:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1623,"name":"uint256","nodeType":"ElementaryTypeName","src":"1609:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1626,"mutability":"mutable","name":"length","nameLocation":"1632:6:8","nodeType":"VariableDeclaration","scope":1697,"src":"1624:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1625,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1608:31:8"},"returnParameters":{"id":1630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1697,"src":"1663:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1628,"name":"string","nodeType":"ElementaryTypeName","src":"1663:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1662:15:8"},"scope":1698,"src":"1588:441:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1699,"src":"146:1885:8","usedErrors":[]}],"src":"86:1946:8"},"id":8},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[1722],"IERC165":[1734]},"id":1723,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1700,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:9"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1701,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1723,"sourceUnit":1735,"src":"124:23:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1703,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":1734,"src":"754:7:9"},"id":1704,"nodeType":"InheritanceSpecifier","src":"754:7:9"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":1702,"nodeType":"StructuredDocumentation","src":"149:576:9","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":1722,"linearizedBaseContracts":[1722,1734],"name":"ERC165","nameLocation":"744:6:9","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1733],"body":{"id":1720,"nodeType":"Block","src":"920:64:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1713,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"937:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1715,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"957:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1734_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1734_$","typeString":"type(contract IERC165)"}],"id":1714,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1734","typeString":"type(contract IERC165)"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1712,"id":1719,"nodeType":"Return","src":"930:47:9"}]},"documentation":{"id":1705,"nodeType":"StructuredDocumentation","src":"768:56:9","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1721,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:9","nodeType":"FunctionDefinition","overrides":{"id":1709,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:9"},"parameters":{"id":1708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1707,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:9","nodeType":"VariableDeclaration","scope":1721,"src":"856:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1706,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:9"},"returnParameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1721,"src":"914:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1710,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:9"},"scope":1722,"src":"829:155:9","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1723,"src":"726:260:9","usedErrors":[]}],"src":"99:888:9"},"id":9},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1734]},"id":1735,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1724,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1725,"nodeType":"StructuredDocumentation","src":"125:279:10","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1734,"linearizedBaseContracts":[1734],"name":"IERC165","nameLocation":"415:7:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1726,"nodeType":"StructuredDocumentation","src":"429:340:10","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1733,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:10","nodeType":"FunctionDefinition","parameters":{"id":1729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1728,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:10","nodeType":"VariableDeclaration","scope":1733,"src":"801:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1727,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:10"},"returnParameters":{"id":1732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1733,"src":"844:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1730,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:10"},"scope":1734,"src":"774:76:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1735,"src":"405:447:10","usedErrors":[]}],"src":"100:753:10"},"id":10},"src/MedicalRecords.sol":{"ast":{"absolutePath":"src/MedicalRecords.sol","exportedSymbols":{"Address":[1426],"Base64":[1473],"Context":[1495],"ERC165":[1722],"ERC721":[970],"IERC165":[1734],"IERC721":[1086],"IERC721Metadata":[1131],"IERC721Receiver":[1104],"MedicalRecords":[1885],"Ownable":[104],"Strings":[1698]},"id":1886,"nodeType":"SourceUnit","nodes":[{"id":1736,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"0:23:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":1737,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1886,"sourceUnit":971,"src":"25:57:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1738,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1886,"sourceUnit":105,"src":"83:52:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Base64.sol","file":"@openzeppelin/contracts/utils/Base64.sol","id":1739,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1886,"sourceUnit":1474,"src":"136:50:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1740,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":970,"src":"215:6:11"},"id":1741,"nodeType":"InheritanceSpecifier","src":"215:6:11"},{"baseName":{"id":1742,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":104,"src":"223:7:11"},"id":1743,"nodeType":"InheritanceSpecifier","src":"223:7:11"}],"canonicalName":"MedicalRecords","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1885,"linearizedBaseContracts":[1885,104,970,1131,1086,1722,1734,1495],"name":"MedicalRecords","nameLocation":"197:14:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"id":1747,"name":"ReportCreated","nameLocation":"243:13:11","nodeType":"EventDefinition","parameters":{"id":1746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1745,"indexed":false,"mutability":"mutable","name":"reportId","nameLocation":"265:8:11","nodeType":"VariableDeclaration","scope":1747,"src":"257:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"257:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"256:18:11"},"src":"237:38:11"},{"constant":false,"functionSelector":"6e79bbf6","id":1749,"mutability":"mutable","name":"nextReportId","nameLocation":"296:12:11","nodeType":"VariableDeclaration","scope":1885,"src":"281:27:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1748,"name":"uint256","nodeType":"ElementaryTypeName","src":"281:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"canonicalName":"MedicalRecords.AvailMetadata","id":1756,"members":[{"constant":false,"id":1751,"mutability":"mutable","name":"blockHash","nameLocation":"354:9:11","nodeType":"VariableDeclaration","scope":1756,"src":"346:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1750,"name":"bytes32","nodeType":"ElementaryTypeName","src":"346:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1753,"mutability":"mutable","name":"txHash","nameLocation":"381:6:11","nodeType":"VariableDeclaration","scope":1756,"src":"373:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1752,"name":"bytes32","nodeType":"ElementaryTypeName","src":"373:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1755,"mutability":"mutable","name":"reportName","nameLocation":"404:10:11","nodeType":"VariableDeclaration","scope":1756,"src":"397:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1754,"name":"string","nodeType":"ElementaryTypeName","src":"397:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"AvailMetadata","nameLocation":"322:13:11","nodeType":"StructDefinition","scope":1885,"src":"315:106:11","visibility":"public"},{"constant":false,"functionSelector":"62a428d5","id":1761,"mutability":"mutable","name":"reportMetadata","nameLocation":"468:14:11","nodeType":"VariableDeclaration","scope":1885,"src":"427:55:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AvailMetadata_$1756_storage_$","typeString":"mapping(uint256 => struct MedicalRecords.AvailMetadata)"},"typeName":{"id":1760,"keyType":{"id":1757,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"427:33:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AvailMetadata_$1756_storage_$","typeString":"mapping(uint256 => struct MedicalRecords.AvailMetadata)"},"valueType":{"id":1759,"nodeType":"UserDefinedTypeName","pathNode":{"id":1758,"name":"AvailMetadata","nodeType":"IdentifierPath","referencedDeclaration":1756,"src":"446:13:11"},"referencedDeclaration":1756,"src":"446:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_AvailMetadata_$1756_storage_ptr","typeString":"struct MedicalRecords.AvailMetadata"}}},"visibility":"public"},{"body":{"id":1774,"nodeType":"Block","src":"573:48:11","statements":[{"expression":{"arguments":[{"id":1771,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"601:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1770,"name":"transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"583:17:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"583:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1773,"nodeType":"ExpressionStatement","src":"583:31:11"}]},"id":1775,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4d65646963616c205265636f726473","id":1766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"540:17:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fe5f1f51ca1eda8ed8c23f9ab6f803e1fadf6296811e0b5bb8b28727da563e6","typeString":"literal_string \"Medical Records\""},"value":"Medical Records"},{"hexValue":"4d4544524543","id":1767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"559:8:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_2b1509ec147445259d74eea3f105db0ce862535a3fc07de805cf57c710030ddf","typeString":"literal_string \"MEDREC\""},"value":"MEDREC"}],"id":1768,"kind":"baseConstructorSpecifier","modifierName":{"id":1765,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":970,"src":"533:6:11"},"nodeType":"ModifierInvocation","src":"533:35:11"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1763,"mutability":"mutable","name":"initialOwner","nameLocation":"511:12:11","nodeType":"VariableDeclaration","scope":1775,"src":"503:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1762,"name":"address","nodeType":"ElementaryTypeName","src":"503:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"502:22:11"},"returnParameters":{"id":1769,"nodeType":"ParameterList","parameters":[],"src":"573:0:11"},"scope":1885,"src":"491:130:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1822,"nodeType":"Block","src":"714:334:11","statements":[{"assignments":[1784],"declarations":[{"constant":false,"id":1784,"mutability":"mutable","name":"tokenId","nameLocation":"732:7:11","nodeType":"VariableDeclaration","scope":1822,"src":"724:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1783,"name":"uint256","nodeType":"ElementaryTypeName","src":"724:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1787,"initialValue":{"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"742:14:11","subExpression":{"id":1785,"name":"nextReportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"742:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"724:32:11"},{"expression":{"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1788,"name":"reportMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"767:14:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AvailMetadata_$1756_storage_$","typeString":"mapping(uint256 => struct MedicalRecords.AvailMetadata storage ref)"}},"id":1790,"indexExpression":{"id":1789,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"782:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"767:23:11","typeDescriptions":{"typeIdentifier":"t_struct$_AvailMetadata_$1756_storage","typeString":"struct MedicalRecords.AvailMetadata storage ref"}},"id":1791,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"blockHash","nodeType":"MemberAccess","referencedDeclaration":1751,"src":"767:33:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1792,"name":"_reportMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"803:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_AvailMetadata_$1756_memory_ptr","typeString":"struct MedicalRecords.AvailMetadata memory"}},"id":1793,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockHash","nodeType":"MemberAccess","referencedDeclaration":1751,"src":"803:25:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"767:61:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1795,"nodeType":"ExpressionStatement","src":"767:61:11"},{"expression":{"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1796,"name":"reportMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"838:14:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AvailMetadata_$1756_storage_$","typeString":"mapping(uint256 => struct MedicalRecords.AvailMetadata storage ref)"}},"id":1798,"indexExpression":{"id":1797,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"853:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"838:23:11","typeDescriptions":{"typeIdentifier":"t_struct$_AvailMetadata_$1756_storage","typeString":"struct MedicalRecords.AvailMetadata storage ref"}},"id":1799,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"txHash","nodeType":"MemberAccess","referencedDeclaration":1753,"src":"838:30:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1800,"name":"_reportMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"871:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_AvailMetadata_$1756_memory_ptr","typeString":"struct MedicalRecords.AvailMetadata memory"}},"id":1801,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"txHash","nodeType":"MemberAccess","referencedDeclaration":1753,"src":"871:22:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"838:55:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1803,"nodeType":"ExpressionStatement","src":"838:55:11"},{"expression":{"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1804,"name":"reportMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"903:14:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AvailMetadata_$1756_storage_$","typeString":"mapping(uint256 => struct MedicalRecords.AvailMetadata storage ref)"}},"id":1806,"indexExpression":{"id":1805,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"918:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"903:23:11","typeDescriptions":{"typeIdentifier":"t_struct$_AvailMetadata_$1756_storage","typeString":"struct MedicalRecords.AvailMetadata storage ref"}},"id":1807,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"reportName","nodeType":"MemberAccess","referencedDeclaration":1755,"src":"903:34:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1808,"name":"_reportMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"940:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_AvailMetadata_$1756_memory_ptr","typeString":"struct MedicalRecords.AvailMetadata memory"}},"id":1809,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"reportName","nodeType":"MemberAccess","referencedDeclaration":1755,"src":"940:26:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"903:63:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1811,"nodeType":"ExpressionStatement","src":"903:63:11"},{"expression":{"arguments":[{"expression":{"id":1813,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"983:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"983:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1815,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"995:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1812,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"977:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"977:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1817,"nodeType":"ExpressionStatement","src":"977:26:11"},{"eventCall":{"arguments":[{"id":1819,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"1033:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1818,"name":"ReportCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"1019:13:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1019:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1821,"nodeType":"EmitStatement","src":"1014:27:11"}]},"functionSelector":"8b3f1736","id":1823,"implemented":true,"kind":"function","modifiers":[{"id":1781,"kind":"modifierInvocation","modifierName":{"id":1780,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":46,"src":"704:9:11"},"nodeType":"ModifierInvocation","src":"704:9:11"}],"name":"storePatientData","nameLocation":"642:16:11","nodeType":"FunctionDefinition","parameters":{"id":1779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1778,"mutability":"mutable","name":"_reportMetadata","nameLocation":"680:15:11","nodeType":"VariableDeclaration","scope":1823,"src":"659:36:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AvailMetadata_$1756_memory_ptr","typeString":"struct MedicalRecords.AvailMetadata"},"typeName":{"id":1777,"nodeType":"UserDefinedTypeName","pathNode":{"id":1776,"name":"AvailMetadata","nodeType":"IdentifierPath","referencedDeclaration":1756,"src":"659:13:11"},"referencedDeclaration":1756,"src":"659:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_AvailMetadata_$1756_storage_ptr","typeString":"struct MedicalRecords.AvailMetadata"}},"visibility":"internal"}],"src":"658:38:11"},"returnParameters":{"id":1782,"nodeType":"ParameterList","parameters":[],"src":"714:0:11"},"scope":1885,"src":"633:415:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[312],"body":{"id":1868,"nodeType":"Block","src":"1162:586:11","statements":[{"assignments":[1833],"declarations":[{"constant":false,"id":1833,"mutability":"mutable","name":"url","nameLocation":"1186:3:11","nodeType":"VariableDeclaration","scope":1868,"src":"1172:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1832,"name":"string","nodeType":"ElementaryTypeName","src":"1172:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1835,"initialValue":{"hexValue":"68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f6f70656e7365612d70726f642e61707073706f742e636f6d2f70756666732f312e706e67","id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1192:69:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_a8889b3a531b9adb2a1eb357a11791c641da6d825453820bb3793f87dc43ad00","typeString":"literal_string \"https://storage.googleapis.com/opensea-prod.appspot.com/puffs/1.png\""},"value":"https://storage.googleapis.com/opensea-prod.appspot.com/puffs/1.png"},"nodeType":"VariableDeclarationStatement","src":"1172:89:11"},{"assignments":[1837],"declarations":[{"constant":false,"id":1837,"mutability":"mutable","name":"name","nameLocation":"1286:4:11","nodeType":"VariableDeclaration","scope":1868,"src":"1272:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1836,"name":"string","nodeType":"ElementaryTypeName","src":"1272:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1842,"initialValue":{"expression":{"baseExpression":{"id":1838,"name":"reportMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"1293:14:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AvailMetadata_$1756_storage_$","typeString":"mapping(uint256 => struct MedicalRecords.AvailMetadata storage ref)"}},"id":1840,"indexExpression":{"id":1839,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"1308:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1293:23:11","typeDescriptions":{"typeIdentifier":"t_struct$_AvailMetadata_$1756_storage","typeString":"struct MedicalRecords.AvailMetadata storage ref"}},"id":1841,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"reportName","nodeType":"MemberAccess","referencedDeclaration":1755,"src":"1293:34:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1272:55:11"},{"assignments":[1844],"declarations":[{"constant":false,"id":1844,"mutability":"mutable","name":"dataURI","nameLocation":"1351:7:11","nodeType":"VariableDeclaration","scope":1868,"src":"1338:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1843,"name":"bytes","nodeType":"ElementaryTypeName","src":"1338:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1855,"initialValue":{"arguments":[{"hexValue":"7b","id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1391:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","typeString":"literal_string \"{\""},"value":"{"},{"hexValue":"22696d616765223a2022","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1408:12:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_dee71bd900939e5251fa52ed0e7fadcfe3990bd7a5ea546147c85d1b972c64b6","typeString":"literal_string \"\"image\": \"\""},"value":"\"image\": \""},{"id":1849,"name":"url","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"1434:3:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":1850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1451:4:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"226e616d65223a2022","id":1851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1470:11:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_92eb2af4325a1f29529688124f0869dc0de3154f09f2a84d73f5c6d33cc3af37","typeString":"literal_string \"\"name\": \"\""},"value":"\"name\": \""},{"id":1852,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"1495:4:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"227d","id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1513:19:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475","typeString":"literal_string \"\"}\""},"value":"\"}"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","typeString":"literal_string \"{\""},{"typeIdentifier":"t_stringliteral_dee71bd900939e5251fa52ed0e7fadcfe3990bd7a5ea546147c85d1b972c64b6","typeString":"literal_string \"\"image\": \"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_92eb2af4325a1f29529688124f0869dc0de3154f09f2a84d73f5c6d33cc3af37","typeString":"literal_string \"\"name\": \"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475","typeString":"literal_string \"\"}\""}],"expression":{"id":1845,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1361:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1361:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1361:181:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1338:204:11"},{"expression":{"arguments":[{"arguments":[{"hexValue":"646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1634:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},"value":"data:application/json;base64,"},{"arguments":[{"id":1863,"name":"dataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"1701:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1861,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"1687:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$1473_$","typeString":"type(library Base64)"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":1472,"src":"1687:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1687:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1858,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1596:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1596:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1596:131:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1572:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1856,"name":"string","nodeType":"ElementaryTypeName","src":"1572:6:11","typeDescriptions":{}}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1572:169:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1831,"id":1867,"nodeType":"Return","src":"1553:188:11"}]},"functionSelector":"c87b56dd","id":1869,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1063:8:11","nodeType":"FunctionDefinition","overrides":{"id":1828,"nodeType":"OverrideSpecifier","overrides":[{"id":1827,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":970,"src":"1122:6:11"}],"src":"1113:16:11"},"parameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1825,"mutability":"mutable","name":"tokenId","nameLocation":"1080:7:11","nodeType":"VariableDeclaration","scope":1869,"src":"1072:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1824,"name":"uint256","nodeType":"ElementaryTypeName","src":"1072:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1071:17:11"},"returnParameters":{"id":1831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1869,"src":"1143:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1829,"name":"string","nodeType":"ElementaryTypeName","src":"1143:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1142:15:11"},"scope":1885,"src":"1054:694:11","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[198],"body":{"id":1883,"nodeType":"Block","src":"1949:60:11","statements":[{"expression":{"arguments":[{"id":1880,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"1990:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1878,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1966:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MedicalRecords_$1885_$","typeString":"type(contract super MedicalRecords)"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":198,"src":"1966:23:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1966:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1877,"id":1882,"nodeType":"Return","src":"1959:43:11"}]},"functionSelector":"01ffc9a7","id":1884,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1831:17:11","nodeType":"FunctionDefinition","overrides":{"id":1874,"nodeType":"OverrideSpecifier","overrides":[{"id":1873,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":970,"src":"1914:6:11"}],"src":"1905:16:11"},"parameters":{"id":1872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1871,"mutability":"mutable","name":"interfaceId","nameLocation":"1856:11:11","nodeType":"VariableDeclaration","scope":1884,"src":"1849:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1870,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1849:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1848:20:11"},"returnParameters":{"id":1877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1884,"src":"1939:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1875,"name":"bool","nodeType":"ElementaryTypeName","src":"1939:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1938:6:11"},"scope":1885,"src":"1822:187:11","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":1886,"src":"188:1823:11","usedErrors":[]}],"src":"0:2011:11"},"id":11}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_167":{"entryPoint":null,"id":167,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":292,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":475,"id":null,"parameterSlots":2,"returnSlots":2},"extract_byte_array_length":{"entryPoint":581,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":270,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1985:12","statements":[{"nodeType":"YulBlock","src":"6:3:12","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:12"},"nodeType":"YulFunctionCall","src":"66:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:12"},"nodeType":"YulFunctionCall","src":"56:31:12"},"nodeType":"YulExpressionStatement","src":"56:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:12","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:12"},"nodeType":"YulFunctionCall","src":"96:15:12"},"nodeType":"YulExpressionStatement","src":"96:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:12"},"nodeType":"YulFunctionCall","src":"120:15:12"},"nodeType":"YulExpressionStatement","src":"120:15:12"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:12"},{"body":{"nodeType":"YulBlock","src":"210:821:12","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:12"},"nodeType":"YulFunctionCall","src":"261:12:12"},"nodeType":"YulExpressionStatement","src":"261:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:12"},"nodeType":"YulFunctionCall","src":"234:17:12"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:12"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:12"},"nodeType":"YulFunctionCall","src":"230:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:12"},"nodeType":"YulFunctionCall","src":"223:35:12"},"nodeType":"YulIf","src":"220:55:12"},{"nodeType":"YulVariableDeclaration","src":"284:23:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:12"},"nodeType":"YulFunctionCall","src":"294:13:12"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:12","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:12","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:12"},"nodeType":"YulFunctionCall","src":"330:10:12"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:12"},"nodeType":"YulFunctionCall","src":"326:18:12"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:12"},"nodeType":"YulFunctionCall","src":"369:18:12"},"nodeType":"YulExpressionStatement","src":"369:18:12"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:12"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:12"},"nodeType":"YulFunctionCall","src":"356:10:12"},"nodeType":"YulIf","src":"353:36:12"},{"nodeType":"YulVariableDeclaration","src":"398:17:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:12","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:12"},"nodeType":"YulFunctionCall","src":"408:7:12"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:12","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:12"},"nodeType":"YulFunctionCall","src":"438:9:12"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:12","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:12"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:12"},"nodeType":"YulFunctionCall","src":"498:13:12"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:12"},"nodeType":"YulFunctionCall","src":"494:22:12"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:12","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:12"},"nodeType":"YulFunctionCall","src":"490:31:12"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:12"},"nodeType":"YulFunctionCall","src":"486:40:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:12"},"nodeType":"YulFunctionCall","src":"474:53:12"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:12"},"nodeType":"YulFunctionCall","src":"588:18:12"},"nodeType":"YulExpressionStatement","src":"588:18:12"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:12"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:12"},"nodeType":"YulFunctionCall","src":"542:18:12"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:12"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:12"},"nodeType":"YulFunctionCall","src":"562:22:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:12"},"nodeType":"YulFunctionCall","src":"539:46:12"},"nodeType":"YulIf","src":"536:72:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:12","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:12"},"nodeType":"YulFunctionCall","src":"617:22:12"},"nodeType":"YulExpressionStatement","src":"617:22:12"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:12"},"nodeType":"YulFunctionCall","src":"648:18:12"},"nodeType":"YulExpressionStatement","src":"648:18:12"},{"nodeType":"YulVariableDeclaration","src":"675:14:12","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:12","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:12"},"nodeType":"YulFunctionCall","src":"737:12:12"},"nodeType":"YulExpressionStatement","src":"737:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:12"},"nodeType":"YulFunctionCall","src":"708:15:12"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:12"},"nodeType":"YulFunctionCall","src":"704:24:12"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:12"},"nodeType":"YulFunctionCall","src":"701:33:12"},"nodeType":"YulIf","src":"698:53:12"},{"nodeType":"YulVariableDeclaration","src":"760:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:12","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:12"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:12"},"nodeType":"YulFunctionCall","src":"850:14:12"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:12"},"nodeType":"YulFunctionCall","src":"846:23:12"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:12"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:12"},"nodeType":"YulFunctionCall","src":"881:14:12"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:12"},"nodeType":"YulFunctionCall","src":"877:23:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:12"},"nodeType":"YulFunctionCall","src":"871:30:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:12"},"nodeType":"YulFunctionCall","src":"839:63:12"},"nodeType":"YulExpressionStatement","src":"839:63:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:12"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:12"},"nodeType":"YulFunctionCall","src":"787:9:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:12","statements":[{"nodeType":"YulAssignment","src":"799:15:12","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:12"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:12"},"nodeType":"YulFunctionCall","src":"804:10:12"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:12"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:12","statements":[]},"src":"779:133:12"},{"body":{"nodeType":"YulBlock","src":"942:59:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"971:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"979:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:12"},"nodeType":"YulFunctionCall","src":"967:15:12"},{"name":"_4","nodeType":"YulIdentifier","src":"984:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"963:3:12"},"nodeType":"YulFunctionCall","src":"963:24:12"},{"kind":"number","nodeType":"YulLiteral","src":"989:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"956:6:12"},"nodeType":"YulFunctionCall","src":"956:35:12"},"nodeType":"YulExpressionStatement","src":"956:35:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"927:1:12"},{"name":"_1","nodeType":"YulIdentifier","src":"930:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"924:2:12"},"nodeType":"YulFunctionCall","src":"924:9:12"},"nodeType":"YulIf","src":"921:80:12"},{"nodeType":"YulAssignment","src":"1010:15:12","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1019:6:12"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1010:5:12"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:12","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:12","type":""}],"src":"146:885:12"},{"body":{"nodeType":"YulBlock","src":"1154:444:12","statements":[{"body":{"nodeType":"YulBlock","src":"1200:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1209:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1212:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1202:6:12"},"nodeType":"YulFunctionCall","src":"1202:12:12"},"nodeType":"YulExpressionStatement","src":"1202:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1175:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1184:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1171:3:12"},"nodeType":"YulFunctionCall","src":"1171:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1196:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1167:3:12"},"nodeType":"YulFunctionCall","src":"1167:32:12"},"nodeType":"YulIf","src":"1164:52:12"},{"nodeType":"YulVariableDeclaration","src":"1225:30:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1245:9:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1239:5:12"},"nodeType":"YulFunctionCall","src":"1239:16:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1229:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1264:28:12","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1282:2:12","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1278:3:12"},"nodeType":"YulFunctionCall","src":"1278:10:12"},{"kind":"number","nodeType":"YulLiteral","src":"1290:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1274:3:12"},"nodeType":"YulFunctionCall","src":"1274:18:12"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1268:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1319:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1328:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1331:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1321:6:12"},"nodeType":"YulFunctionCall","src":"1321:12:12"},"nodeType":"YulExpressionStatement","src":"1321:12:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1307:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"1315:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1304:2:12"},"nodeType":"YulFunctionCall","src":"1304:14:12"},"nodeType":"YulIf","src":"1301:34:12"},{"nodeType":"YulAssignment","src":"1344:71:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1387:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"1398:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1383:3:12"},"nodeType":"YulFunctionCall","src":"1383:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1407:7:12"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1354:28:12"},"nodeType":"YulFunctionCall","src":"1354:61:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1344:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"1424:41:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1450:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1461:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1446:3:12"},"nodeType":"YulFunctionCall","src":"1446:18:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1440:5:12"},"nodeType":"YulFunctionCall","src":"1440:25:12"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1428:8:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1494:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1503:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1506:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1496:6:12"},"nodeType":"YulFunctionCall","src":"1496:12:12"},"nodeType":"YulExpressionStatement","src":"1496:12:12"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1480:8:12"},{"name":"_1","nodeType":"YulIdentifier","src":"1490:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1477:2:12"},"nodeType":"YulFunctionCall","src":"1477:16:12"},"nodeType":"YulIf","src":"1474:36:12"},{"nodeType":"YulAssignment","src":"1519:73:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1562:9:12"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1573:8:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1558:3:12"},"nodeType":"YulFunctionCall","src":"1558:24:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1584:7:12"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1529:28:12"},"nodeType":"YulFunctionCall","src":"1529:63:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1519:6:12"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1112:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1123:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1135:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1143:6:12","type":""}],"src":"1036:562:12"},{"body":{"nodeType":"YulBlock","src":"1658:325:12","statements":[{"nodeType":"YulAssignment","src":"1668:22:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1682:1:12","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1685:4:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1678:3:12"},"nodeType":"YulFunctionCall","src":"1678:12:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1668:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"1699:38:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1729:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"1735:1:12","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1725:3:12"},"nodeType":"YulFunctionCall","src":"1725:12:12"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1703:18:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1776:31:12","statements":[{"nodeType":"YulAssignment","src":"1778:27:12","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1792:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"1800:4:12","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1788:3:12"},"nodeType":"YulFunctionCall","src":"1788:17:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1778:6:12"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1756:18:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1749:6:12"},"nodeType":"YulFunctionCall","src":"1749:26:12"},"nodeType":"YulIf","src":"1746:61:12"},{"body":{"nodeType":"YulBlock","src":"1866:111:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1887:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1894:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1899:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1890:3:12"},"nodeType":"YulFunctionCall","src":"1890:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1880:6:12"},"nodeType":"YulFunctionCall","src":"1880:31:12"},"nodeType":"YulExpressionStatement","src":"1880:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1931:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1934:4:12","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1924:6:12"},"nodeType":"YulFunctionCall","src":"1924:15:12"},"nodeType":"YulExpressionStatement","src":"1924:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1959:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1962:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1952:6:12"},"nodeType":"YulFunctionCall","src":"1952:15:12"},"nodeType":"YulExpressionStatement","src":"1952:15:12"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1822:18:12"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1845:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"1853:2:12","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1842:2:12"},"nodeType":"YulFunctionCall","src":"1842:14:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1819:2:12"},"nodeType":"YulFunctionCall","src":"1819:38:12"},"nodeType":"YulIf","src":"1816:161:12"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1638:4:12","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1647:6:12","type":""}],"src":"1603:380:12"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":12,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620014ac380380620014ac8339810160408190526200003491620001db565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b61121a80620002926000396000f3fe608060405234801561001057600080fd5b50600436106100bf5760003560e01c80636352211e1161007c5780636352211e1461016757806370a082311461017a57806395d89b411461019b578063a22cb465146101a3578063b88d4fde146101b6578063c87b56dd146101c9578063e985e9c5146101dc57600080fd5b806301ffc9a7146100c457806306fdde03146100ec578063081812fc14610101578063095ea7b31461012c57806323b872dd1461014157806342842e0e14610154575b600080fd5b6100d76100d2366004610d2a565b6101ef565b60405190151581526020015b60405180910390f35b6100f4610241565b6040516100e39190610d9f565b61011461010f366004610db2565b6102d3565b6040516001600160a01b0390911681526020016100e3565b61013f61013a366004610de7565b610360565b005b61013f61014f366004610e11565b610471565b61013f610162366004610e11565b6104a2565b610114610175366004610db2565b6104bd565b61018d610188366004610e4d565b610534565b6040519081526020016100e3565b6100f46105bb565b61013f6101b1366004610e68565b6105ca565b61013f6101c4366004610eba565b6105d9565b6100f46101d7366004610db2565b610611565b6100d76101ea366004610f96565b6106e9565b60006001600160e01b031982166380ac58cd60e01b148061022057506001600160e01b03198216635b5e139f60e01b145b8061023b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461025090610fc9565b80601f016020809104026020016040519081016040528092919081815260200182805461027c90610fc9565b80156102c95780601f1061029e576101008083540402835291602001916102c9565b820191906000526020600020905b8154815290600101906020018083116102ac57829003601f168201915b5050505050905090565b60006102de82610717565b6103445760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061036b826104bd565b9050806001600160a01b0316836001600160a01b031614156103d95760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161033b565b336001600160a01b03821614806103f557506103f581336106e9565b6104625760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b606482015260840161033b565b61046c8383610734565b505050565b61047b33826107a2565b6104975760405162461bcd60e51b815260040161033b90611004565b61046c83838361086c565b61046c838383604051806020016040528060008152506105d9565b6000818152600260205260408120546001600160a01b03168061023b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161033b565b60006001600160a01b03821661059f5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161033b565b506001600160a01b031660009081526003602052604090205490565b60606001805461025090610fc9565b6105d5338383610a08565b5050565b6105e333836107a2565b6105ff5760405162461bcd60e51b815260040161033b90611004565b61060b84848484610ad3565b50505050565b606061061c82610717565b6106805760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161033b565b600061069760408051602081019091526000815290565b905060008151116106b757604051806020016040528060008152506106e2565b806106c184610b06565b6040516020016106d2929190611055565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610769826104bd565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006107ad82610717565b61080e5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161033b565b6000610819836104bd565b9050806001600160a01b0316846001600160a01b031614806108545750836001600160a01b0316610849846102d3565b6001600160a01b0316145b80610864575061086481856106e9565b949350505050565b826001600160a01b031661087f826104bd565b6001600160a01b0316146108e35760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161033b565b6001600160a01b0382166109455760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161033b565b610950600082610734565b6001600160a01b038316600090815260036020526040812080546001929061097990849061109a565b90915550506001600160a01b03821660009081526003602052604081208054600192906109a79084906110b1565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03161415610a665760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b604482015260640161033b565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610ade84848461086c565b610aea84848484610c04565b61060b5760405162461bcd60e51b815260040161033b906110c9565b606081610b2a5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b545780610b3e8161111b565b9150610b4d9050600a8361114c565b9150610b2e565b60008167ffffffffffffffff811115610b6f57610b6f610ea4565b6040519080825280601f01601f191660200182016040528015610b99576020820181803683370190505b5090505b841561086457610bae60018361109a565b9150610bbb600a86611160565b610bc69060306110b1565b60f81b818381518110610bdb57610bdb611174565b60200101906001600160f81b031916908160001a905350610bfd600a8661114c565b9450610b9d565b60006001600160a01b0384163b15610d0657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c4890339089908890889060040161118a565b602060405180830381600087803b158015610c6257600080fd5b505af1925050508015610c92575060408051601f3d908101601f19168201909252610c8f918101906111c7565b60015b610cec573d808015610cc0576040519150601f19603f3d011682016040523d82523d6000602084013e610cc5565b606091505b508051610ce45760405162461bcd60e51b815260040161033b906110c9565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610864565b506001949350505050565b6001600160e01b031981168114610d2757600080fd5b50565b600060208284031215610d3c57600080fd5b81356106e281610d11565b60005b83811015610d62578181015183820152602001610d4a565b8381111561060b5750506000910152565b60008151808452610d8b816020860160208601610d47565b601f01601f19169290920160200192915050565b6020815260006106e26020830184610d73565b600060208284031215610dc457600080fd5b5035919050565b80356001600160a01b0381168114610de257600080fd5b919050565b60008060408385031215610dfa57600080fd5b610e0383610dcb565b946020939093013593505050565b600080600060608486031215610e2657600080fd5b610e2f84610dcb565b9250610e3d60208501610dcb565b9150604084013590509250925092565b600060208284031215610e5f57600080fd5b6106e282610dcb565b60008060408385031215610e7b57600080fd5b610e8483610dcb565b915060208301358015158114610e9957600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610ed057600080fd5b610ed985610dcb565b9350610ee760208601610dcb565b925060408501359150606085013567ffffffffffffffff80821115610f0b57600080fd5b818701915087601f830112610f1f57600080fd5b813581811115610f3157610f31610ea4565b604051601f8201601f19908116603f01168101908382118183101715610f5957610f59610ea4565b816040528281528a6020848701011115610f7257600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fa957600080fd5b610fb283610dcb565b9150610fc060208401610dcb565b90509250929050565b600181811c90821680610fdd57607f821691505b60208210811415610ffe57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008351611067818460208801610d47565b83519083019061107b818360208801610d47565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156110ac576110ac611084565b500390565b600082198211156110c4576110c4611084565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060001982141561112f5761112f611084565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261115b5761115b611136565b500490565b60008261116f5761116f611136565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111bd90830184610d73565b9695505050505050565b6000602082840312156111d957600080fd5b81516106e281610d1156fea2646970667358221220cb7d0173e66b9494b38a16573c91151e3697c237aef4a69ada0aa431a1eecb2764736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x14AC CODESIZE SUB DUP1 PUSH3 0x14AC DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1DB JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x245 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x153 JUMPI PUSH3 0x153 PUSH3 0x10E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x17E JUMPI PUSH3 0x17E PUSH3 0x10E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1BF JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1A0 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1D1 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x215 DUP7 DUP4 DUP8 ADD PUSH3 0x124 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x23B DUP6 DUP3 DUP7 ADD PUSH3 0x124 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x25A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x27C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x121A DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x154 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7 PUSH2 0xD2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2A JUMP JUMPDEST PUSH2 0x1EF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF4 PUSH2 0x241 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x114 PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0xDB2 JUMP JUMPDEST PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13F PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0xE11 JUMP JUMPDEST PUSH2 0x471 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x162 CALLDATASIZE PUSH1 0x4 PUSH2 0xE11 JUMP JUMPDEST PUSH2 0x4A2 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB2 JUMP JUMPDEST PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x18D PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0xE4D JUMP JUMPDEST PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x5BB JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE68 JUMP JUMPDEST PUSH2 0x5CA JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB2 JUMP JUMPDEST PUSH2 0x611 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0xF96 JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x220 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x23B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x250 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x27C SWAP1 PUSH2 0xFC9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x29E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2AC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE DUP3 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x344 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36B DUP3 PUSH2 0x4BD JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33B JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3F5 JUMPI POP PUSH2 0x3F5 DUP2 CALLER PUSH2 0x6E9 JUMP JUMPDEST PUSH2 0x462 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x1B995C881B9BDC88185C1C1C9BDD995908199BDC88185B1B PUSH1 0x42 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33B JUMP JUMPDEST PUSH2 0x46C DUP4 DUP4 PUSH2 0x734 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x47B CALLER DUP3 PUSH2 0x7A2 JUMP JUMPDEST PUSH2 0x497 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33B SWAP1 PUSH2 0x1004 JUMP JUMPDEST PUSH2 0x46C DUP4 DUP4 DUP4 PUSH2 0x86C JUMP JUMPDEST PUSH2 0x46C DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x23B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x250 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST PUSH2 0x5D5 CALLER DUP4 DUP4 PUSH2 0xA08 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5E3 CALLER DUP4 PUSH2 0x7A2 JUMP JUMPDEST PUSH2 0x5FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33B SWAP1 PUSH2 0x1004 JUMP JUMPDEST PUSH2 0x60B DUP5 DUP5 DUP5 DUP5 PUSH2 0xAD3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x61C DUP3 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x680 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x697 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6E2 JUMP JUMPDEST DUP1 PUSH2 0x6C1 DUP5 PUSH2 0xB06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6D2 SWAP3 SWAP2 SWAP1 PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x769 DUP3 PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7AD DUP3 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x80E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x819 DUP4 PUSH2 0x4BD JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x854 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x849 DUP5 PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x864 JUMPI POP PUSH2 0x864 DUP2 DUP6 PUSH2 0x6E9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x87F DUP3 PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x945 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33B JUMP JUMPDEST PUSH2 0x950 PUSH1 0x0 DUP3 PUSH2 0x734 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x979 SWAP1 DUP5 SWAP1 PUSH2 0x109A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9A7 SWAP1 DUP5 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xA66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x22A9219B99189D1030B8383937BB32903A379031B0B63632B9 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x33B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xADE DUP5 DUP5 DUP5 PUSH2 0x86C JUMP JUMPDEST PUSH2 0xAEA DUP5 DUP5 DUP5 DUP5 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0x60B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33B SWAP1 PUSH2 0x10C9 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xB2A JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB54 JUMPI DUP1 PUSH2 0xB3E DUP2 PUSH2 0x111B JUMP JUMPDEST SWAP2 POP PUSH2 0xB4D SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x114C JUMP JUMPDEST SWAP2 POP PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB6F JUMPI PUSH2 0xB6F PUSH2 0xEA4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB99 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x864 JUMPI PUSH2 0xBAE PUSH1 0x1 DUP4 PUSH2 0x109A JUMP JUMPDEST SWAP2 POP PUSH2 0xBBB PUSH1 0xA DUP7 PUSH2 0x1160 JUMP JUMPDEST PUSH2 0xBC6 SWAP1 PUSH1 0x30 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xBDB JUMPI PUSH2 0xBDB PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xBFD PUSH1 0xA DUP7 PUSH2 0x114C JUMP JUMPDEST SWAP5 POP PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD06 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC48 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x118A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC92 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC8F SWAP2 DUP2 ADD SWAP1 PUSH2 0x11C7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xCEC JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCC0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xCE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33B SWAP1 PUSH2 0x10C9 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x864 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6E2 DUP2 PUSH2 0xD11 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD62 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD4A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x60B JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD8B DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x6E2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE03 DUP4 PUSH2 0xDCB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE2F DUP5 PUSH2 0xDCB JUMP JUMPDEST SWAP3 POP PUSH2 0xE3D PUSH1 0x20 DUP6 ADD PUSH2 0xDCB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6E2 DUP3 PUSH2 0xDCB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE84 DUP4 PUSH2 0xDCB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xED0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED9 DUP6 PUSH2 0xDCB JUMP JUMPDEST SWAP4 POP PUSH2 0xEE7 PUSH1 0x20 DUP7 ADD PUSH2 0xDCB JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF31 JUMPI PUSH2 0xF31 PUSH2 0xEA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF59 JUMPI PUSH2 0xF59 PUSH2 0xEA4 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xF72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFB2 DUP4 PUSH2 0xDCB JUMP JUMPDEST SWAP2 POP PUSH2 0xFC0 PUSH1 0x20 DUP5 ADD PUSH2 0xDCB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFDD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xFFE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1067 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD47 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x107B DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD47 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x10AC JUMPI PUSH2 0x10AC PUSH2 0x1084 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10C4 JUMPI PUSH2 0x10C4 PUSH2 0x1084 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x112F JUMPI PUSH2 0x112F PUSH2 0x1084 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x115B JUMPI PUSH2 0x115B PUSH2 0x1136 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x116F JUMPI PUSH2 0x116F PUSH2 0x1136 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11BD SWAP1 DUP4 ADD DUP5 PUSH2 0xD73 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6E2 DUP2 PUSH2 0xD11 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB PUSH30 0x173E66B9494B38A16573C91151E3697C237AEF4A69ADA0AA431A1EECB27 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"628:13657:1:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1479:17:1;;;;:7;;:17;;;;;:::i;:::-;;1390:113;;628:13657;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;628:13657:1;;;-1:-1:-1;628:13657:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:12;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:12;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:12;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:12:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:12;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;628:13657:1;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_969":{"entryPoint":null,"id":969,"parameterSlots":3,"returnSlots":0},"@_approve_853":{"entryPoint":1844,"id":853,"parameterSlots":2,"returnSlots":0},"@_baseURI_321":{"entryPoint":null,"id":321,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_958":{"entryPoint":null,"id":958,"parameterSlots":3,"returnSlots":0},"@_checkOnERC721Received_947":{"entryPoint":3076,"id":947,"parameterSlots":4,"returnSlots":1},"@_exists_543":{"entryPoint":1815,"id":543,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_584":{"entryPoint":1954,"id":584,"parameterSlots":2,"returnSlots":1},"@_msgSender_1485":{"entryPoint":null,"id":1485,"parameterSlots":0,"returnSlots":1},"@_safeTransfer_525":{"entryPoint":2771,"id":525,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_885":{"entryPoint":2568,"id":885,"parameterSlots":3,"returnSlots":0},"@_transfer_829":{"entryPoint":2156,"id":829,"parameterSlots":3,"returnSlots":0},"@approve_364":{"entryPoint":864,"id":364,"parameterSlots":2,"returnSlots":0},"@balanceOf_222":{"entryPoint":1332,"id":222,"parameterSlots":1,"returnSlots":1},"@getApproved_385":{"entryPoint":723,"id":385,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_420":{"entryPoint":1769,"id":420,"parameterSlots":2,"returnSlots":1},"@isContract_1149":{"entryPoint":null,"id":1149,"parameterSlots":1,"returnSlots":1},"@name_260":{"entryPoint":577,"id":260,"parameterSlots":0,"returnSlots":1},"@ownerOf_250":{"entryPoint":1213,"id":250,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_466":{"entryPoint":1186,"id":466,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_496":{"entryPoint":1497,"id":496,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_402":{"entryPoint":1482,"id":402,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1721":{"entryPoint":null,"id":1721,"parameterSlots":1,"returnSlots":1},"@supportsInterface_198":{"entryPoint":495,"id":198,"parameterSlots":1,"returnSlots":1},"@symbol_270":{"entryPoint":1467,"id":270,"parameterSlots":0,"returnSlots":1},"@toString_1580":{"entryPoint":2822,"id":1580,"parameterSlots":1,"returnSlots":1},"@tokenURI_312":{"entryPoint":1553,"id":312,"parameterSlots":1,"returnSlots":1},"@transferFrom_447":{"entryPoint":1137,"id":447,"parameterSlots":3,"returnSlots":0},"abi_decode_address":{"entryPoint":3531,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3661,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3990,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3601,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":3770,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":3688,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3559,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":3370,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":4551,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3506,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":3443,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4181,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4490,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3487,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4297,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4100,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4273,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":4428,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4250,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":3399,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4041,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":4379,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":4448,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":4228,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":4406,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4468,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3748,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":3345,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:12309:12","statements":[{"nodeType":"YulBlock","src":"6:3:12","statements":[]},{"body":{"nodeType":"YulBlock","src":"58:87:12","statements":[{"body":{"nodeType":"YulBlock","src":"123:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"132:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"125:6:12"},"nodeType":"YulFunctionCall","src":"125:12:12"},"nodeType":"YulExpressionStatement","src":"125:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"81:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"92:5:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"108:10:12","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"99:3:12"},"nodeType":"YulFunctionCall","src":"99:20:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"88:3:12"},"nodeType":"YulFunctionCall","src":"88:32:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"78:2:12"},"nodeType":"YulFunctionCall","src":"78:43:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"71:6:12"},"nodeType":"YulFunctionCall","src":"71:51:12"},"nodeType":"YulIf","src":"68:71:12"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47:5:12","type":""}],"src":"14:131:12"},{"body":{"nodeType":"YulBlock","src":"219:176:12","statements":[{"body":{"nodeType":"YulBlock","src":"265:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"274:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"277:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"267:6:12"},"nodeType":"YulFunctionCall","src":"267:12:12"},"nodeType":"YulExpressionStatement","src":"267:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"240:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"249:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"236:3:12"},"nodeType":"YulFunctionCall","src":"236:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"261:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"232:3:12"},"nodeType":"YulFunctionCall","src":"232:32:12"},"nodeType":"YulIf","src":"229:52:12"},{"nodeType":"YulVariableDeclaration","src":"290:36:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"316:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"303:12:12"},"nodeType":"YulFunctionCall","src":"303:23:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"294:5:12","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"359:5:12"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"335:23:12"},"nodeType":"YulFunctionCall","src":"335:30:12"},"nodeType":"YulExpressionStatement","src":"335:30:12"},{"nodeType":"YulAssignment","src":"374:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"384:5:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"374:6:12"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"185:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"196:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"208:6:12","type":""}],"src":"150:245:12"},{"body":{"nodeType":"YulBlock","src":"495:92:12","statements":[{"nodeType":"YulAssignment","src":"505:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"517:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"528:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"513:3:12"},"nodeType":"YulFunctionCall","src":"513:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"505:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"547:9:12"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"572:6:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"565:6:12"},"nodeType":"YulFunctionCall","src":"565:14:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"558:6:12"},"nodeType":"YulFunctionCall","src":"558:22:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"540:6:12"},"nodeType":"YulFunctionCall","src":"540:41:12"},"nodeType":"YulExpressionStatement","src":"540:41:12"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"464:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"475:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"486:4:12","type":""}],"src":"400:187:12"},{"body":{"nodeType":"YulBlock","src":"645:205:12","statements":[{"nodeType":"YulVariableDeclaration","src":"655:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"664:1:12","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"659:1:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"724:63:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"749:3:12"},{"name":"i","nodeType":"YulIdentifier","src":"754:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:12"},"nodeType":"YulFunctionCall","src":"745:11:12"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"768:3:12"},{"name":"i","nodeType":"YulIdentifier","src":"773:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"764:3:12"},"nodeType":"YulFunctionCall","src":"764:11:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"758:5:12"},"nodeType":"YulFunctionCall","src":"758:18:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"738:6:12"},"nodeType":"YulFunctionCall","src":"738:39:12"},"nodeType":"YulExpressionStatement","src":"738:39:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"685:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"688:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"682:2:12"},"nodeType":"YulFunctionCall","src":"682:13:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"696:19:12","statements":[{"nodeType":"YulAssignment","src":"698:15:12","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"707:1:12"},{"kind":"number","nodeType":"YulLiteral","src":"710:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"703:3:12"},"nodeType":"YulFunctionCall","src":"703:10:12"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"698:1:12"}]}]},"pre":{"nodeType":"YulBlock","src":"678:3:12","statements":[]},"src":"674:113:12"},{"body":{"nodeType":"YulBlock","src":"813:31:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"826:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"831:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"822:3:12"},"nodeType":"YulFunctionCall","src":"822:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"840:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"815:6:12"},"nodeType":"YulFunctionCall","src":"815:27:12"},"nodeType":"YulExpressionStatement","src":"815:27:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"802:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"805:6:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"799:2:12"},"nodeType":"YulFunctionCall","src":"799:13:12"},"nodeType":"YulIf","src":"796:48:12"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"623:3:12","type":""},{"name":"dst","nodeType":"YulTypedName","src":"628:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"633:6:12","type":""}],"src":"592:258:12"},{"body":{"nodeType":"YulBlock","src":"905:208:12","statements":[{"nodeType":"YulVariableDeclaration","src":"915:26:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"935:5:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"929:5:12"},"nodeType":"YulFunctionCall","src":"929:12:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"919:6:12","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"957:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"962:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"950:6:12"},"nodeType":"YulFunctionCall","src":"950:19:12"},"nodeType":"YulExpressionStatement","src":"950:19:12"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1004:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"1011:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1000:3:12"},"nodeType":"YulFunctionCall","src":"1000:16:12"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1022:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"1027:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1018:3:12"},"nodeType":"YulFunctionCall","src":"1018:14:12"},{"name":"length","nodeType":"YulIdentifier","src":"1034:6:12"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"978:21:12"},"nodeType":"YulFunctionCall","src":"978:63:12"},"nodeType":"YulExpressionStatement","src":"978:63:12"},{"nodeType":"YulAssignment","src":"1050:57:12","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1065:3:12"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1078:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"1086:2:12","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1074:3:12"},"nodeType":"YulFunctionCall","src":"1074:15:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1095:2:12","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1091:3:12"},"nodeType":"YulFunctionCall","src":"1091:7:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1070:3:12"},"nodeType":"YulFunctionCall","src":"1070:29:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1061:3:12"},"nodeType":"YulFunctionCall","src":"1061:39:12"},{"kind":"number","nodeType":"YulLiteral","src":"1102:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1057:3:12"},"nodeType":"YulFunctionCall","src":"1057:50:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1050:3:12"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"882:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"889:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"897:3:12","type":""}],"src":"855:258:12"},{"body":{"nodeType":"YulBlock","src":"1239:99:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1256:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1267:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1249:6:12"},"nodeType":"YulFunctionCall","src":"1249:21:12"},"nodeType":"YulExpressionStatement","src":"1249:21:12"},{"nodeType":"YulAssignment","src":"1279:53:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1305:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1317:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1328:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1313:3:12"},"nodeType":"YulFunctionCall","src":"1313:18:12"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1287:17:12"},"nodeType":"YulFunctionCall","src":"1287:45:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1279:4:12"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1208:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1219:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1230:4:12","type":""}],"src":"1118:220:12"},{"body":{"nodeType":"YulBlock","src":"1413:110:12","statements":[{"body":{"nodeType":"YulBlock","src":"1459:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1468:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1471:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1461:6:12"},"nodeType":"YulFunctionCall","src":"1461:12:12"},"nodeType":"YulExpressionStatement","src":"1461:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1434:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1443:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1430:3:12"},"nodeType":"YulFunctionCall","src":"1430:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1455:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1426:3:12"},"nodeType":"YulFunctionCall","src":"1426:32:12"},"nodeType":"YulIf","src":"1423:52:12"},{"nodeType":"YulAssignment","src":"1484:33:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1507:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1494:12:12"},"nodeType":"YulFunctionCall","src":"1494:23:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1484:6:12"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1379:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1390:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1402:6:12","type":""}],"src":"1343:180:12"},{"body":{"nodeType":"YulBlock","src":"1629:102:12","statements":[{"nodeType":"YulAssignment","src":"1639:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1651:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1662:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1647:3:12"},"nodeType":"YulFunctionCall","src":"1647:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1639:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1681:9:12"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1696:6:12"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1712:3:12","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1717:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1708:3:12"},"nodeType":"YulFunctionCall","src":"1708:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"1721:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1704:3:12"},"nodeType":"YulFunctionCall","src":"1704:19:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1692:3:12"},"nodeType":"YulFunctionCall","src":"1692:32:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1674:6:12"},"nodeType":"YulFunctionCall","src":"1674:51:12"},"nodeType":"YulExpressionStatement","src":"1674:51:12"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1598:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1609:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1620:4:12","type":""}],"src":"1528:203:12"},{"body":{"nodeType":"YulBlock","src":"1785:124:12","statements":[{"nodeType":"YulAssignment","src":"1795:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1817:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1804:12:12"},"nodeType":"YulFunctionCall","src":"1804:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1795:5:12"}]},{"body":{"nodeType":"YulBlock","src":"1887:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1896:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1899:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1889:6:12"},"nodeType":"YulFunctionCall","src":"1889:12:12"},"nodeType":"YulExpressionStatement","src":"1889:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1846:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1857:5:12"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1872:3:12","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1877:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1868:3:12"},"nodeType":"YulFunctionCall","src":"1868:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"1881:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1864:3:12"},"nodeType":"YulFunctionCall","src":"1864:19:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1853:3:12"},"nodeType":"YulFunctionCall","src":"1853:31:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1843:2:12"},"nodeType":"YulFunctionCall","src":"1843:42:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1836:6:12"},"nodeType":"YulFunctionCall","src":"1836:50:12"},"nodeType":"YulIf","src":"1833:70:12"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1764:6:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1775:5:12","type":""}],"src":"1736:173:12"},{"body":{"nodeType":"YulBlock","src":"2001:167:12","statements":[{"body":{"nodeType":"YulBlock","src":"2047:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2056:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2059:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2049:6:12"},"nodeType":"YulFunctionCall","src":"2049:12:12"},"nodeType":"YulExpressionStatement","src":"2049:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2022:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2031:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2018:3:12"},"nodeType":"YulFunctionCall","src":"2018:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2043:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2014:3:12"},"nodeType":"YulFunctionCall","src":"2014:32:12"},"nodeType":"YulIf","src":"2011:52:12"},{"nodeType":"YulAssignment","src":"2072:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2101:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2082:18:12"},"nodeType":"YulFunctionCall","src":"2082:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2072:6:12"}]},{"nodeType":"YulAssignment","src":"2120:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2147:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2158:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2143:3:12"},"nodeType":"YulFunctionCall","src":"2143:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2130:12:12"},"nodeType":"YulFunctionCall","src":"2130:32:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2120:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1959:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1970:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1982:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1990:6:12","type":""}],"src":"1914:254:12"},{"body":{"nodeType":"YulBlock","src":"2277:224:12","statements":[{"body":{"nodeType":"YulBlock","src":"2323:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2332:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2335:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2325:6:12"},"nodeType":"YulFunctionCall","src":"2325:12:12"},"nodeType":"YulExpressionStatement","src":"2325:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2298:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2307:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2294:3:12"},"nodeType":"YulFunctionCall","src":"2294:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2319:2:12","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2290:3:12"},"nodeType":"YulFunctionCall","src":"2290:32:12"},"nodeType":"YulIf","src":"2287:52:12"},{"nodeType":"YulAssignment","src":"2348:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2377:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2358:18:12"},"nodeType":"YulFunctionCall","src":"2358:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2348:6:12"}]},{"nodeType":"YulAssignment","src":"2396:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2429:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2440:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2425:3:12"},"nodeType":"YulFunctionCall","src":"2425:18:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2406:18:12"},"nodeType":"YulFunctionCall","src":"2406:38:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2396:6:12"}]},{"nodeType":"YulAssignment","src":"2453:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2480:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2491:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2476:3:12"},"nodeType":"YulFunctionCall","src":"2476:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2463:12:12"},"nodeType":"YulFunctionCall","src":"2463:32:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2453:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2227:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2238:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2250:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2258:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2266:6:12","type":""}],"src":"2173:328:12"},{"body":{"nodeType":"YulBlock","src":"2576:116:12","statements":[{"body":{"nodeType":"YulBlock","src":"2622:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2631:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2634:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2624:6:12"},"nodeType":"YulFunctionCall","src":"2624:12:12"},"nodeType":"YulExpressionStatement","src":"2624:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2597:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2606:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2593:3:12"},"nodeType":"YulFunctionCall","src":"2593:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2618:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2589:3:12"},"nodeType":"YulFunctionCall","src":"2589:32:12"},"nodeType":"YulIf","src":"2586:52:12"},{"nodeType":"YulAssignment","src":"2647:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2676:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2657:18:12"},"nodeType":"YulFunctionCall","src":"2657:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2647:6:12"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2542:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2553:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2565:6:12","type":""}],"src":"2506:186:12"},{"body":{"nodeType":"YulBlock","src":"2798:76:12","statements":[{"nodeType":"YulAssignment","src":"2808:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2820:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2831:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2816:3:12"},"nodeType":"YulFunctionCall","src":"2816:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2808:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2850:9:12"},{"name":"value0","nodeType":"YulIdentifier","src":"2861:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2843:6:12"},"nodeType":"YulFunctionCall","src":"2843:25:12"},"nodeType":"YulExpressionStatement","src":"2843:25:12"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2767:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2778:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2789:4:12","type":""}],"src":"2697:177:12"},{"body":{"nodeType":"YulBlock","src":"2963:263:12","statements":[{"body":{"nodeType":"YulBlock","src":"3009:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3018:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3021:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3011:6:12"},"nodeType":"YulFunctionCall","src":"3011:12:12"},"nodeType":"YulExpressionStatement","src":"3011:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2984:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2993:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2980:3:12"},"nodeType":"YulFunctionCall","src":"2980:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"3005:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2976:3:12"},"nodeType":"YulFunctionCall","src":"2976:32:12"},"nodeType":"YulIf","src":"2973:52:12"},{"nodeType":"YulAssignment","src":"3034:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3063:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3044:18:12"},"nodeType":"YulFunctionCall","src":"3044:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3034:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"3082:45:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3112:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3123:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3108:3:12"},"nodeType":"YulFunctionCall","src":"3108:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3095:12:12"},"nodeType":"YulFunctionCall","src":"3095:32:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3086:5:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"3180:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3189:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3192:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3182:6:12"},"nodeType":"YulFunctionCall","src":"3182:12:12"},"nodeType":"YulExpressionStatement","src":"3182:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3149:5:12"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3170:5:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3163:6:12"},"nodeType":"YulFunctionCall","src":"3163:13:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3156:6:12"},"nodeType":"YulFunctionCall","src":"3156:21:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3146:2:12"},"nodeType":"YulFunctionCall","src":"3146:32:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3139:6:12"},"nodeType":"YulFunctionCall","src":"3139:40:12"},"nodeType":"YulIf","src":"3136:60:12"},{"nodeType":"YulAssignment","src":"3205:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"3215:5:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3205:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2921:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2932:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2944:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2952:6:12","type":""}],"src":"2879:347:12"},{"body":{"nodeType":"YulBlock","src":"3263:95:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3280:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3287:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3292:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3283:3:12"},"nodeType":"YulFunctionCall","src":"3283:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3273:6:12"},"nodeType":"YulFunctionCall","src":"3273:31:12"},"nodeType":"YulExpressionStatement","src":"3273:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3320:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3323:4:12","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3313:6:12"},"nodeType":"YulFunctionCall","src":"3313:15:12"},"nodeType":"YulExpressionStatement","src":"3313:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3344:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3347:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3337:6:12"},"nodeType":"YulFunctionCall","src":"3337:15:12"},"nodeType":"YulExpressionStatement","src":"3337:15:12"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3231:127:12"},{"body":{"nodeType":"YulBlock","src":"3493:1008:12","statements":[{"body":{"nodeType":"YulBlock","src":"3540:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3549:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3552:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3542:6:12"},"nodeType":"YulFunctionCall","src":"3542:12:12"},"nodeType":"YulExpressionStatement","src":"3542:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3514:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"3523:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3510:3:12"},"nodeType":"YulFunctionCall","src":"3510:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"3535:3:12","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3506:3:12"},"nodeType":"YulFunctionCall","src":"3506:33:12"},"nodeType":"YulIf","src":"3503:53:12"},{"nodeType":"YulAssignment","src":"3565:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3594:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3575:18:12"},"nodeType":"YulFunctionCall","src":"3575:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3565:6:12"}]},{"nodeType":"YulAssignment","src":"3613:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3646:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3657:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3642:3:12"},"nodeType":"YulFunctionCall","src":"3642:18:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3623:18:12"},"nodeType":"YulFunctionCall","src":"3623:38:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3613:6:12"}]},{"nodeType":"YulAssignment","src":"3670:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3697:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3708:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3693:3:12"},"nodeType":"YulFunctionCall","src":"3693:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3680:12:12"},"nodeType":"YulFunctionCall","src":"3680:32:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3670:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"3721:46:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3752:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3763:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3748:3:12"},"nodeType":"YulFunctionCall","src":"3748:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3735:12:12"},"nodeType":"YulFunctionCall","src":"3735:32:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3725:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3776:28:12","value":{"kind":"number","nodeType":"YulLiteral","src":"3786:18:12","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3780:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"3831:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3840:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3843:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3833:6:12"},"nodeType":"YulFunctionCall","src":"3833:12:12"},"nodeType":"YulExpressionStatement","src":"3833:12:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3819:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"3827:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3816:2:12"},"nodeType":"YulFunctionCall","src":"3816:14:12"},"nodeType":"YulIf","src":"3813:34:12"},{"nodeType":"YulVariableDeclaration","src":"3856:32:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3870:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"3881:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3866:3:12"},"nodeType":"YulFunctionCall","src":"3866:22:12"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3860:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"3936:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3945:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3948:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3938:6:12"},"nodeType":"YulFunctionCall","src":"3938:12:12"},"nodeType":"YulExpressionStatement","src":"3938:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3915:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"3919:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3911:3:12"},"nodeType":"YulFunctionCall","src":"3911:13:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3926:7:12"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3907:3:12"},"nodeType":"YulFunctionCall","src":"3907:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3900:6:12"},"nodeType":"YulFunctionCall","src":"3900:35:12"},"nodeType":"YulIf","src":"3897:55:12"},{"nodeType":"YulVariableDeclaration","src":"3961:26:12","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3984:2:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3971:12:12"},"nodeType":"YulFunctionCall","src":"3971:16:12"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3965:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"4010:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4012:16:12"},"nodeType":"YulFunctionCall","src":"4012:18:12"},"nodeType":"YulExpressionStatement","src":"4012:18:12"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4002:2:12"},{"name":"_1","nodeType":"YulIdentifier","src":"4006:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3999:2:12"},"nodeType":"YulFunctionCall","src":"3999:10:12"},"nodeType":"YulIf","src":"3996:36:12"},{"nodeType":"YulVariableDeclaration","src":"4041:17:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4055:2:12","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4051:3:12"},"nodeType":"YulFunctionCall","src":"4051:7:12"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"4045:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4067:23:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4087:2:12","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4081:5:12"},"nodeType":"YulFunctionCall","src":"4081:9:12"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4071:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4099:71:12","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4121:6:12"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4145:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"4149:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4141:3:12"},"nodeType":"YulFunctionCall","src":"4141:13:12"},{"name":"_4","nodeType":"YulIdentifier","src":"4156:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4137:3:12"},"nodeType":"YulFunctionCall","src":"4137:22:12"},{"kind":"number","nodeType":"YulLiteral","src":"4161:2:12","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4133:3:12"},"nodeType":"YulFunctionCall","src":"4133:31:12"},{"name":"_4","nodeType":"YulIdentifier","src":"4166:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4129:3:12"},"nodeType":"YulFunctionCall","src":"4129:40:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4117:3:12"},"nodeType":"YulFunctionCall","src":"4117:53:12"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4103:10:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"4229:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4231:16:12"},"nodeType":"YulFunctionCall","src":"4231:18:12"},"nodeType":"YulExpressionStatement","src":"4231:18:12"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4188:10:12"},{"name":"_1","nodeType":"YulIdentifier","src":"4200:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4185:2:12"},"nodeType":"YulFunctionCall","src":"4185:18:12"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4208:10:12"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4220:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4205:2:12"},"nodeType":"YulFunctionCall","src":"4205:22:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4182:2:12"},"nodeType":"YulFunctionCall","src":"4182:46:12"},"nodeType":"YulIf","src":"4179:72:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4267:2:12","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4271:10:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4260:6:12"},"nodeType":"YulFunctionCall","src":"4260:22:12"},"nodeType":"YulExpressionStatement","src":"4260:22:12"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4298:6:12"},{"name":"_3","nodeType":"YulIdentifier","src":"4306:2:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4291:6:12"},"nodeType":"YulFunctionCall","src":"4291:18:12"},"nodeType":"YulExpressionStatement","src":"4291:18:12"},{"body":{"nodeType":"YulBlock","src":"4355:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4364:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4367:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4357:6:12"},"nodeType":"YulFunctionCall","src":"4357:12:12"},"nodeType":"YulExpressionStatement","src":"4357:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4332:2:12"},{"name":"_3","nodeType":"YulIdentifier","src":"4336:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4328:3:12"},"nodeType":"YulFunctionCall","src":"4328:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"4341:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4324:3:12"},"nodeType":"YulFunctionCall","src":"4324:20:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4346:7:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4321:2:12"},"nodeType":"YulFunctionCall","src":"4321:33:12"},"nodeType":"YulIf","src":"4318:53:12"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4397:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"4405:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4393:3:12"},"nodeType":"YulFunctionCall","src":"4393:15:12"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4414:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"4418:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4410:3:12"},"nodeType":"YulFunctionCall","src":"4410:11:12"},{"name":"_3","nodeType":"YulIdentifier","src":"4423:2:12"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4380:12:12"},"nodeType":"YulFunctionCall","src":"4380:46:12"},"nodeType":"YulExpressionStatement","src":"4380:46:12"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4450:6:12"},{"name":"_3","nodeType":"YulIdentifier","src":"4458:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4446:3:12"},"nodeType":"YulFunctionCall","src":"4446:15:12"},{"kind":"number","nodeType":"YulLiteral","src":"4463:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4442:3:12"},"nodeType":"YulFunctionCall","src":"4442:24:12"},{"kind":"number","nodeType":"YulLiteral","src":"4468:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4435:6:12"},"nodeType":"YulFunctionCall","src":"4435:35:12"},"nodeType":"YulExpressionStatement","src":"4435:35:12"},{"nodeType":"YulAssignment","src":"4479:16:12","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"4489:6:12"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4479:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3435:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3446:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3458:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3466:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3474:6:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3482:6:12","type":""}],"src":"3363:1138:12"},{"body":{"nodeType":"YulBlock","src":"4593:173:12","statements":[{"body":{"nodeType":"YulBlock","src":"4639:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4648:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4651:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4641:6:12"},"nodeType":"YulFunctionCall","src":"4641:12:12"},"nodeType":"YulExpressionStatement","src":"4641:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4614:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"4623:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4610:3:12"},"nodeType":"YulFunctionCall","src":"4610:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"4635:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4606:3:12"},"nodeType":"YulFunctionCall","src":"4606:32:12"},"nodeType":"YulIf","src":"4603:52:12"},{"nodeType":"YulAssignment","src":"4664:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4693:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4674:18:12"},"nodeType":"YulFunctionCall","src":"4674:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4664:6:12"}]},{"nodeType":"YulAssignment","src":"4712:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4745:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4756:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4741:3:12"},"nodeType":"YulFunctionCall","src":"4741:18:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4722:18:12"},"nodeType":"YulFunctionCall","src":"4722:38:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4712:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4551:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4562:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4574:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4582:6:12","type":""}],"src":"4506:260:12"},{"body":{"nodeType":"YulBlock","src":"4826:325:12","statements":[{"nodeType":"YulAssignment","src":"4836:22:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4850:1:12","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"4853:4:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4846:3:12"},"nodeType":"YulFunctionCall","src":"4846:12:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4836:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"4867:38:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4897:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"4903:1:12","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4893:3:12"},"nodeType":"YulFunctionCall","src":"4893:12:12"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4871:18:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"4944:31:12","statements":[{"nodeType":"YulAssignment","src":"4946:27:12","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4960:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"4968:4:12","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4956:3:12"},"nodeType":"YulFunctionCall","src":"4956:17:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4946:6:12"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4924:18:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4917:6:12"},"nodeType":"YulFunctionCall","src":"4917:26:12"},"nodeType":"YulIf","src":"4914:61:12"},{"body":{"nodeType":"YulBlock","src":"5034:111:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5055:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5062:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5067:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5058:3:12"},"nodeType":"YulFunctionCall","src":"5058:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5048:6:12"},"nodeType":"YulFunctionCall","src":"5048:31:12"},"nodeType":"YulExpressionStatement","src":"5048:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5099:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5102:4:12","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5092:6:12"},"nodeType":"YulFunctionCall","src":"5092:15:12"},"nodeType":"YulExpressionStatement","src":"5092:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5127:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5130:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5120:6:12"},"nodeType":"YulFunctionCall","src":"5120:15:12"},"nodeType":"YulExpressionStatement","src":"5120:15:12"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4990:18:12"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5013:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"5021:2:12","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5010:2:12"},"nodeType":"YulFunctionCall","src":"5010:14:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4987:2:12"},"nodeType":"YulFunctionCall","src":"4987:38:12"},"nodeType":"YulIf","src":"4984:161:12"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4806:4:12","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4815:6:12","type":""}],"src":"4771:380:12"},{"body":{"nodeType":"YulBlock","src":"5330:234:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5347:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5358:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5340:6:12"},"nodeType":"YulFunctionCall","src":"5340:21:12"},"nodeType":"YulExpressionStatement","src":"5340:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5381:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5392:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5377:3:12"},"nodeType":"YulFunctionCall","src":"5377:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"5397:2:12","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5370:6:12"},"nodeType":"YulFunctionCall","src":"5370:30:12"},"nodeType":"YulExpressionStatement","src":"5370:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5420:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5431:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5416:3:12"},"nodeType":"YulFunctionCall","src":"5416:18:12"},{"hexValue":"4552433732313a20617070726f76656420717565727920666f72206e6f6e6578","kind":"string","nodeType":"YulLiteral","src":"5436:34:12","type":"","value":"ERC721: approved query for nonex"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5409:6:12"},"nodeType":"YulFunctionCall","src":"5409:62:12"},"nodeType":"YulExpressionStatement","src":"5409:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5491:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5502:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5487:3:12"},"nodeType":"YulFunctionCall","src":"5487:18:12"},{"hexValue":"697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"5507:14:12","type":"","value":"istent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5480:6:12"},"nodeType":"YulFunctionCall","src":"5480:42:12"},"nodeType":"YulExpressionStatement","src":"5480:42:12"},{"nodeType":"YulAssignment","src":"5531:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5543:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5554:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5539:3:12"},"nodeType":"YulFunctionCall","src":"5539:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5531:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5307:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5321:4:12","type":""}],"src":"5156:408:12"},{"body":{"nodeType":"YulBlock","src":"5743:223:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5760:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5771:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5753:6:12"},"nodeType":"YulFunctionCall","src":"5753:21:12"},"nodeType":"YulExpressionStatement","src":"5753:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5794:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5805:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5790:3:12"},"nodeType":"YulFunctionCall","src":"5790:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"5810:2:12","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5783:6:12"},"nodeType":"YulFunctionCall","src":"5783:30:12"},"nodeType":"YulExpressionStatement","src":"5783:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5833:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5844:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5829:3:12"},"nodeType":"YulFunctionCall","src":"5829:18:12"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"5849:34:12","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5822:6:12"},"nodeType":"YulFunctionCall","src":"5822:62:12"},"nodeType":"YulExpressionStatement","src":"5822:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5904:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5915:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5900:3:12"},"nodeType":"YulFunctionCall","src":"5900:18:12"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"5920:3:12","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5893:6:12"},"nodeType":"YulFunctionCall","src":"5893:31:12"},"nodeType":"YulExpressionStatement","src":"5893:31:12"},{"nodeType":"YulAssignment","src":"5933:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5945:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5956:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5941:3:12"},"nodeType":"YulFunctionCall","src":"5941:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5933:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5720:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5734:4:12","type":""}],"src":"5569:397:12"},{"body":{"nodeType":"YulBlock","src":"6145:246:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6162:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6173:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6155:6:12"},"nodeType":"YulFunctionCall","src":"6155:21:12"},"nodeType":"YulExpressionStatement","src":"6155:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6196:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6207:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6192:3:12"},"nodeType":"YulFunctionCall","src":"6192:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"6212:2:12","type":"","value":"56"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6185:6:12"},"nodeType":"YulFunctionCall","src":"6185:30:12"},"nodeType":"YulExpressionStatement","src":"6185:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6235:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6246:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6231:3:12"},"nodeType":"YulFunctionCall","src":"6231:18:12"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77","kind":"string","nodeType":"YulLiteral","src":"6251:34:12","type":"","value":"ERC721: approve caller is not ow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6224:6:12"},"nodeType":"YulFunctionCall","src":"6224:62:12"},"nodeType":"YulExpressionStatement","src":"6224:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6306:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6317:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6302:3:12"},"nodeType":"YulFunctionCall","src":"6302:18:12"},{"hexValue":"6e6572206e6f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"6322:26:12","type":"","value":"ner nor approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6295:6:12"},"nodeType":"YulFunctionCall","src":"6295:54:12"},"nodeType":"YulExpressionStatement","src":"6295:54:12"},{"nodeType":"YulAssignment","src":"6358:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6370:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6381:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6366:3:12"},"nodeType":"YulFunctionCall","src":"6366:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6358:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6122:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6136:4:12","type":""}],"src":"5971:420:12"},{"body":{"nodeType":"YulBlock","src":"6570:239:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6587:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6598:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6580:6:12"},"nodeType":"YulFunctionCall","src":"6580:21:12"},"nodeType":"YulExpressionStatement","src":"6580:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6621:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6632:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6617:3:12"},"nodeType":"YulFunctionCall","src":"6617:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"6637:2:12","type":"","value":"49"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6610:6:12"},"nodeType":"YulFunctionCall","src":"6610:30:12"},"nodeType":"YulExpressionStatement","src":"6610:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6660:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6671:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6656:3:12"},"nodeType":"YulFunctionCall","src":"6656:18:12"},{"hexValue":"4552433732313a207472616e736665722063616c6c6572206973206e6f74206f","kind":"string","nodeType":"YulLiteral","src":"6676:34:12","type":"","value":"ERC721: transfer caller is not o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6649:6:12"},"nodeType":"YulFunctionCall","src":"6649:62:12"},"nodeType":"YulExpressionStatement","src":"6649:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6731:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6742:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6727:3:12"},"nodeType":"YulFunctionCall","src":"6727:18:12"},{"hexValue":"776e6572206e6f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"6747:19:12","type":"","value":"wner nor approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6720:6:12"},"nodeType":"YulFunctionCall","src":"6720:47:12"},"nodeType":"YulExpressionStatement","src":"6720:47:12"},{"nodeType":"YulAssignment","src":"6776:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6788:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6799:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6784:3:12"},"nodeType":"YulFunctionCall","src":"6784:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6776:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6547:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6561:4:12","type":""}],"src":"6396:413:12"},{"body":{"nodeType":"YulBlock","src":"6988:231:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7005:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7016:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6998:6:12"},"nodeType":"YulFunctionCall","src":"6998:21:12"},"nodeType":"YulExpressionStatement","src":"6998:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7039:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7050:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7035:3:12"},"nodeType":"YulFunctionCall","src":"7035:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"7055:2:12","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7028:6:12"},"nodeType":"YulFunctionCall","src":"7028:30:12"},"nodeType":"YulExpressionStatement","src":"7028:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7078:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7089:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7074:3:12"},"nodeType":"YulFunctionCall","src":"7074:18:12"},{"hexValue":"4552433732313a206f776e657220717565727920666f72206e6f6e6578697374","kind":"string","nodeType":"YulLiteral","src":"7094:34:12","type":"","value":"ERC721: owner query for nonexist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7067:6:12"},"nodeType":"YulFunctionCall","src":"7067:62:12"},"nodeType":"YulExpressionStatement","src":"7067:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7149:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7160:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7145:3:12"},"nodeType":"YulFunctionCall","src":"7145:18:12"},{"hexValue":"656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"7165:11:12","type":"","value":"ent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7138:6:12"},"nodeType":"YulFunctionCall","src":"7138:39:12"},"nodeType":"YulExpressionStatement","src":"7138:39:12"},{"nodeType":"YulAssignment","src":"7186:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7198:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7209:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7194:3:12"},"nodeType":"YulFunctionCall","src":"7194:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7186:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6965:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6979:4:12","type":""}],"src":"6814:405:12"},{"body":{"nodeType":"YulBlock","src":"7398:232:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7415:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7426:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7408:6:12"},"nodeType":"YulFunctionCall","src":"7408:21:12"},"nodeType":"YulExpressionStatement","src":"7408:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7449:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7460:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7445:3:12"},"nodeType":"YulFunctionCall","src":"7445:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"7465:2:12","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7438:6:12"},"nodeType":"YulFunctionCall","src":"7438:30:12"},"nodeType":"YulExpressionStatement","src":"7438:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7488:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7499:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7484:3:12"},"nodeType":"YulFunctionCall","src":"7484:18:12"},{"hexValue":"4552433732313a2062616c616e636520717565727920666f7220746865207a65","kind":"string","nodeType":"YulLiteral","src":"7504:34:12","type":"","value":"ERC721: balance query for the ze"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7477:6:12"},"nodeType":"YulFunctionCall","src":"7477:62:12"},"nodeType":"YulExpressionStatement","src":"7477:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7559:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7570:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7555:3:12"},"nodeType":"YulFunctionCall","src":"7555:18:12"},{"hexValue":"726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"7575:12:12","type":"","value":"ro address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7548:6:12"},"nodeType":"YulFunctionCall","src":"7548:40:12"},"nodeType":"YulExpressionStatement","src":"7548:40:12"},{"nodeType":"YulAssignment","src":"7597:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7609:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7620:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7605:3:12"},"nodeType":"YulFunctionCall","src":"7605:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7597:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7375:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7389:4:12","type":""}],"src":"7224:406:12"},{"body":{"nodeType":"YulBlock","src":"7809:237:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7826:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7837:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7819:6:12"},"nodeType":"YulFunctionCall","src":"7819:21:12"},"nodeType":"YulExpressionStatement","src":"7819:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7860:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7871:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7856:3:12"},"nodeType":"YulFunctionCall","src":"7856:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"7876:2:12","type":"","value":"47"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7849:6:12"},"nodeType":"YulFunctionCall","src":"7849:30:12"},"nodeType":"YulExpressionStatement","src":"7849:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7899:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7910:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7895:3:12"},"nodeType":"YulFunctionCall","src":"7895:18:12"},{"hexValue":"4552433732314d657461646174613a2055524920717565727920666f72206e6f","kind":"string","nodeType":"YulLiteral","src":"7915:34:12","type":"","value":"ERC721Metadata: URI query for no"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7888:6:12"},"nodeType":"YulFunctionCall","src":"7888:62:12"},"nodeType":"YulExpressionStatement","src":"7888:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7970:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7981:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7966:3:12"},"nodeType":"YulFunctionCall","src":"7966:18:12"},{"hexValue":"6e6578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"7986:17:12","type":"","value":"nexistent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7959:6:12"},"nodeType":"YulFunctionCall","src":"7959:45:12"},"nodeType":"YulExpressionStatement","src":"7959:45:12"},{"nodeType":"YulAssignment","src":"8013:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8025:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8036:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8021:3:12"},"nodeType":"YulFunctionCall","src":"8021:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8013:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7786:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7800:4:12","type":""}],"src":"7635:411:12"},{"body":{"nodeType":"YulBlock","src":"8238:283:12","statements":[{"nodeType":"YulVariableDeclaration","src":"8248:27:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8268:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8262:5:12"},"nodeType":"YulFunctionCall","src":"8262:13:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8252:6:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8310:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"8318:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8306:3:12"},"nodeType":"YulFunctionCall","src":"8306:17:12"},{"name":"pos","nodeType":"YulIdentifier","src":"8325:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"8330:6:12"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"8284:21:12"},"nodeType":"YulFunctionCall","src":"8284:53:12"},"nodeType":"YulExpressionStatement","src":"8284:53:12"},{"nodeType":"YulVariableDeclaration","src":"8346:29:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8363:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"8368:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8359:3:12"},"nodeType":"YulFunctionCall","src":"8359:16:12"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"8350:5:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8384:29:12","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8406:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8400:5:12"},"nodeType":"YulFunctionCall","src":"8400:13:12"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"8388:8:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8448:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"8456:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8444:3:12"},"nodeType":"YulFunctionCall","src":"8444:17:12"},{"name":"end_1","nodeType":"YulIdentifier","src":"8463:5:12"},{"name":"length_1","nodeType":"YulIdentifier","src":"8470:8:12"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"8422:21:12"},"nodeType":"YulFunctionCall","src":"8422:57:12"},"nodeType":"YulExpressionStatement","src":"8422:57:12"},{"nodeType":"YulAssignment","src":"8488:27:12","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"8499:5:12"},{"name":"length_1","nodeType":"YulIdentifier","src":"8506:8:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8495:3:12"},"nodeType":"YulFunctionCall","src":"8495:20:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8488:3:12"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8206:3:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8211:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8219:6:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8230:3:12","type":""}],"src":"8051:470:12"},{"body":{"nodeType":"YulBlock","src":"8700:234:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8717:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8728:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8710:6:12"},"nodeType":"YulFunctionCall","src":"8710:21:12"},"nodeType":"YulExpressionStatement","src":"8710:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8751:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8762:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8747:3:12"},"nodeType":"YulFunctionCall","src":"8747:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"8767:2:12","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8740:6:12"},"nodeType":"YulFunctionCall","src":"8740:30:12"},"nodeType":"YulExpressionStatement","src":"8740:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8790:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8801:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8786:3:12"},"nodeType":"YulFunctionCall","src":"8786:18:12"},{"hexValue":"4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578","kind":"string","nodeType":"YulLiteral","src":"8806:34:12","type":"","value":"ERC721: operator query for nonex"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8779:6:12"},"nodeType":"YulFunctionCall","src":"8779:62:12"},"nodeType":"YulExpressionStatement","src":"8779:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8861:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8872:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8857:3:12"},"nodeType":"YulFunctionCall","src":"8857:18:12"},{"hexValue":"697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"8877:14:12","type":"","value":"istent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8850:6:12"},"nodeType":"YulFunctionCall","src":"8850:42:12"},"nodeType":"YulExpressionStatement","src":"8850:42:12"},{"nodeType":"YulAssignment","src":"8901:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8913:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8924:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8909:3:12"},"nodeType":"YulFunctionCall","src":"8909:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8901:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8677:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8691:4:12","type":""}],"src":"8526:408:12"},{"body":{"nodeType":"YulBlock","src":"9113:227:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9130:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9141:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9123:6:12"},"nodeType":"YulFunctionCall","src":"9123:21:12"},"nodeType":"YulExpressionStatement","src":"9123:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9164:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9175:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9160:3:12"},"nodeType":"YulFunctionCall","src":"9160:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"9180:2:12","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9153:6:12"},"nodeType":"YulFunctionCall","src":"9153:30:12"},"nodeType":"YulExpressionStatement","src":"9153:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9203:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9214:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9199:3:12"},"nodeType":"YulFunctionCall","src":"9199:18:12"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"9219:34:12","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9192:6:12"},"nodeType":"YulFunctionCall","src":"9192:62:12"},"nodeType":"YulExpressionStatement","src":"9192:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9274:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9285:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9270:3:12"},"nodeType":"YulFunctionCall","src":"9270:18:12"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"9290:7:12","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9263:6:12"},"nodeType":"YulFunctionCall","src":"9263:35:12"},"nodeType":"YulExpressionStatement","src":"9263:35:12"},{"nodeType":"YulAssignment","src":"9307:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9319:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9330:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9315:3:12"},"nodeType":"YulFunctionCall","src":"9315:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9307:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9090:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9104:4:12","type":""}],"src":"8939:401:12"},{"body":{"nodeType":"YulBlock","src":"9519:226:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9536:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9547:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9529:6:12"},"nodeType":"YulFunctionCall","src":"9529:21:12"},"nodeType":"YulExpressionStatement","src":"9529:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9570:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9581:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9566:3:12"},"nodeType":"YulFunctionCall","src":"9566:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"9586:2:12","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9559:6:12"},"nodeType":"YulFunctionCall","src":"9559:30:12"},"nodeType":"YulExpressionStatement","src":"9559:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9609:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9620:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9605:3:12"},"nodeType":"YulFunctionCall","src":"9605:18:12"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"9625:34:12","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9598:6:12"},"nodeType":"YulFunctionCall","src":"9598:62:12"},"nodeType":"YulExpressionStatement","src":"9598:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9680:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9691:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9676:3:12"},"nodeType":"YulFunctionCall","src":"9676:18:12"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"9696:6:12","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9669:6:12"},"nodeType":"YulFunctionCall","src":"9669:34:12"},"nodeType":"YulExpressionStatement","src":"9669:34:12"},{"nodeType":"YulAssignment","src":"9712:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9724:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9735:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9720:3:12"},"nodeType":"YulFunctionCall","src":"9720:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9712:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9496:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9510:4:12","type":""}],"src":"9345:400:12"},{"body":{"nodeType":"YulBlock","src":"9782:95:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9799:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9806:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9811:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9802:3:12"},"nodeType":"YulFunctionCall","src":"9802:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9792:6:12"},"nodeType":"YulFunctionCall","src":"9792:31:12"},"nodeType":"YulExpressionStatement","src":"9792:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9839:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9842:4:12","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9832:6:12"},"nodeType":"YulFunctionCall","src":"9832:15:12"},"nodeType":"YulExpressionStatement","src":"9832:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9863:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9866:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9856:6:12"},"nodeType":"YulFunctionCall","src":"9856:15:12"},"nodeType":"YulExpressionStatement","src":"9856:15:12"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9750:127:12"},{"body":{"nodeType":"YulBlock","src":"9931:76:12","statements":[{"body":{"nodeType":"YulBlock","src":"9953:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9955:16:12"},"nodeType":"YulFunctionCall","src":"9955:18:12"},"nodeType":"YulExpressionStatement","src":"9955:18:12"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9947:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"9950:1:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9944:2:12"},"nodeType":"YulFunctionCall","src":"9944:8:12"},"nodeType":"YulIf","src":"9941:34:12"},{"nodeType":"YulAssignment","src":"9984:17:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9996:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"9999:1:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9992:3:12"},"nodeType":"YulFunctionCall","src":"9992:9:12"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"9984:4:12"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9913:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"9916:1:12","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"9922:4:12","type":""}],"src":"9882:125:12"},{"body":{"nodeType":"YulBlock","src":"10060:80:12","statements":[{"body":{"nodeType":"YulBlock","src":"10087:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10089:16:12"},"nodeType":"YulFunctionCall","src":"10089:18:12"},"nodeType":"YulExpressionStatement","src":"10089:18:12"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10076:1:12"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10083:1:12"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10079:3:12"},"nodeType":"YulFunctionCall","src":"10079:6:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10073:2:12"},"nodeType":"YulFunctionCall","src":"10073:13:12"},"nodeType":"YulIf","src":"10070:39:12"},{"nodeType":"YulAssignment","src":"10118:16:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10129:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"10132:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10125:3:12"},"nodeType":"YulFunctionCall","src":"10125:9:12"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"10118:3:12"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10043:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"10046:1:12","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"10052:3:12","type":""}],"src":"10012:128:12"},{"body":{"nodeType":"YulBlock","src":"10319:175:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10336:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10347:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10329:6:12"},"nodeType":"YulFunctionCall","src":"10329:21:12"},"nodeType":"YulExpressionStatement","src":"10329:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10370:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10381:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10366:3:12"},"nodeType":"YulFunctionCall","src":"10366:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"10386:2:12","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10359:6:12"},"nodeType":"YulFunctionCall","src":"10359:30:12"},"nodeType":"YulExpressionStatement","src":"10359:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10409:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10420:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10405:3:12"},"nodeType":"YulFunctionCall","src":"10405:18:12"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"10425:27:12","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10398:6:12"},"nodeType":"YulFunctionCall","src":"10398:55:12"},"nodeType":"YulExpressionStatement","src":"10398:55:12"},{"nodeType":"YulAssignment","src":"10462:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10474:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10485:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10470:3:12"},"nodeType":"YulFunctionCall","src":"10470:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10462:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10296:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10310:4:12","type":""}],"src":"10145:349:12"},{"body":{"nodeType":"YulBlock","src":"10673:240:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10690:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10701:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10683:6:12"},"nodeType":"YulFunctionCall","src":"10683:21:12"},"nodeType":"YulExpressionStatement","src":"10683:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10724:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10735:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10720:3:12"},"nodeType":"YulFunctionCall","src":"10720:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"10740:2:12","type":"","value":"50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10713:6:12"},"nodeType":"YulFunctionCall","src":"10713:30:12"},"nodeType":"YulExpressionStatement","src":"10713:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10763:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10774:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10759:3:12"},"nodeType":"YulFunctionCall","src":"10759:18:12"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"10779:34:12","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10752:6:12"},"nodeType":"YulFunctionCall","src":"10752:62:12"},"nodeType":"YulExpressionStatement","src":"10752:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10834:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10845:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10830:3:12"},"nodeType":"YulFunctionCall","src":"10830:18:12"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"10850:20:12","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10823:6:12"},"nodeType":"YulFunctionCall","src":"10823:48:12"},"nodeType":"YulExpressionStatement","src":"10823:48:12"},{"nodeType":"YulAssignment","src":"10880:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10892:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10903:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10888:3:12"},"nodeType":"YulFunctionCall","src":"10888:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10880:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10650:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10664:4:12","type":""}],"src":"10499:414:12"},{"body":{"nodeType":"YulBlock","src":"10965:88:12","statements":[{"body":{"nodeType":"YulBlock","src":"10996:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10998:16:12"},"nodeType":"YulFunctionCall","src":"10998:18:12"},"nodeType":"YulExpressionStatement","src":"10998:18:12"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10981:5:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10992:1:12","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10988:3:12"},"nodeType":"YulFunctionCall","src":"10988:6:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10978:2:12"},"nodeType":"YulFunctionCall","src":"10978:17:12"},"nodeType":"YulIf","src":"10975:43:12"},{"nodeType":"YulAssignment","src":"11027:20:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11038:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"11045:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11034:3:12"},"nodeType":"YulFunctionCall","src":"11034:13:12"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11027:3:12"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10947:5:12","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"10957:3:12","type":""}],"src":"10918:135:12"},{"body":{"nodeType":"YulBlock","src":"11090:95:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11107:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11114:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11119:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11110:3:12"},"nodeType":"YulFunctionCall","src":"11110:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11100:6:12"},"nodeType":"YulFunctionCall","src":"11100:31:12"},"nodeType":"YulExpressionStatement","src":"11100:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11147:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11150:4:12","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11140:6:12"},"nodeType":"YulFunctionCall","src":"11140:15:12"},"nodeType":"YulExpressionStatement","src":"11140:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11171:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11174:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11164:6:12"},"nodeType":"YulFunctionCall","src":"11164:15:12"},"nodeType":"YulExpressionStatement","src":"11164:15:12"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"11058:127:12"},{"body":{"nodeType":"YulBlock","src":"11236:74:12","statements":[{"body":{"nodeType":"YulBlock","src":"11259:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"11261:16:12"},"nodeType":"YulFunctionCall","src":"11261:18:12"},"nodeType":"YulExpressionStatement","src":"11261:18:12"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11256:1:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11249:6:12"},"nodeType":"YulFunctionCall","src":"11249:9:12"},"nodeType":"YulIf","src":"11246:35:12"},{"nodeType":"YulAssignment","src":"11290:14:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11299:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"11302:1:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11295:3:12"},"nodeType":"YulFunctionCall","src":"11295:9:12"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"11290:1:12"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11221:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"11224:1:12","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"11230:1:12","type":""}],"src":"11190:120:12"},{"body":{"nodeType":"YulBlock","src":"11353:74:12","statements":[{"body":{"nodeType":"YulBlock","src":"11376:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"11378:16:12"},"nodeType":"YulFunctionCall","src":"11378:18:12"},"nodeType":"YulExpressionStatement","src":"11378:18:12"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11373:1:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11366:6:12"},"nodeType":"YulFunctionCall","src":"11366:9:12"},"nodeType":"YulIf","src":"11363:35:12"},{"nodeType":"YulAssignment","src":"11407:14:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11416:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"11419:1:12"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"11412:3:12"},"nodeType":"YulFunctionCall","src":"11412:9:12"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"11407:1:12"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11338:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"11341:1:12","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"11347:1:12","type":""}],"src":"11315:112:12"},{"body":{"nodeType":"YulBlock","src":"11464:95:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11481:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11488:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11493:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11484:3:12"},"nodeType":"YulFunctionCall","src":"11484:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11474:6:12"},"nodeType":"YulFunctionCall","src":"11474:31:12"},"nodeType":"YulExpressionStatement","src":"11474:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11521:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11524:4:12","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11514:6:12"},"nodeType":"YulFunctionCall","src":"11514:15:12"},"nodeType":"YulExpressionStatement","src":"11514:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11545:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11548:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11538:6:12"},"nodeType":"YulFunctionCall","src":"11538:15:12"},"nodeType":"YulExpressionStatement","src":"11538:15:12"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"11432:127:12"},{"body":{"nodeType":"YulBlock","src":"11767:286:12","statements":[{"nodeType":"YulVariableDeclaration","src":"11777:29:12","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11795:3:12","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11800:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11791:3:12"},"nodeType":"YulFunctionCall","src":"11791:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"11804:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11787:3:12"},"nodeType":"YulFunctionCall","src":"11787:19:12"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11781:2:12","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11822:9:12"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11837:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"11845:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11833:3:12"},"nodeType":"YulFunctionCall","src":"11833:15:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11815:6:12"},"nodeType":"YulFunctionCall","src":"11815:34:12"},"nodeType":"YulExpressionStatement","src":"11815:34:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11869:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11880:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11865:3:12"},"nodeType":"YulFunctionCall","src":"11865:18:12"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11889:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"11897:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11885:3:12"},"nodeType":"YulFunctionCall","src":"11885:15:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11858:6:12"},"nodeType":"YulFunctionCall","src":"11858:43:12"},"nodeType":"YulExpressionStatement","src":"11858:43:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11921:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11932:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11917:3:12"},"nodeType":"YulFunctionCall","src":"11917:18:12"},{"name":"value2","nodeType":"YulIdentifier","src":"11937:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11910:6:12"},"nodeType":"YulFunctionCall","src":"11910:34:12"},"nodeType":"YulExpressionStatement","src":"11910:34:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11964:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11975:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11960:3:12"},"nodeType":"YulFunctionCall","src":"11960:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"11980:3:12","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11953:6:12"},"nodeType":"YulFunctionCall","src":"11953:31:12"},"nodeType":"YulExpressionStatement","src":"11953:31:12"},{"nodeType":"YulAssignment","src":"11993:54:12","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"12019:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12031:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12042:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12027:3:12"},"nodeType":"YulFunctionCall","src":"12027:19:12"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"12001:17:12"},"nodeType":"YulFunctionCall","src":"12001:46:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11993:4:12"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11712:9:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11723:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11731:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11739:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11747:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11758:4:12","type":""}],"src":"11564:489:12"},{"body":{"nodeType":"YulBlock","src":"12138:169:12","statements":[{"body":{"nodeType":"YulBlock","src":"12184:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12193:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12196:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12186:6:12"},"nodeType":"YulFunctionCall","src":"12186:12:12"},"nodeType":"YulExpressionStatement","src":"12186:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12159:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"12168:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12155:3:12"},"nodeType":"YulFunctionCall","src":"12155:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"12180:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12151:3:12"},"nodeType":"YulFunctionCall","src":"12151:32:12"},"nodeType":"YulIf","src":"12148:52:12"},{"nodeType":"YulVariableDeclaration","src":"12209:29:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12228:9:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12222:5:12"},"nodeType":"YulFunctionCall","src":"12222:16:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12213:5:12","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12271:5:12"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"12247:23:12"},"nodeType":"YulFunctionCall","src":"12247:30:12"},"nodeType":"YulExpressionStatement","src":"12247:30:12"},{"nodeType":"YulAssignment","src":"12286:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"12296:5:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12286:6:12"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12104:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12115:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12127:6:12","type":""}],"src":"12058:249:12"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: approved query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not ow\")\n        mstore(add(headStart, 96), \"ner nor approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC721: transfer caller is not o\")\n        mstore(add(headStart, 96), \"wner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: owner query for nonexist\")\n        mstore(add(headStart, 96), \"ent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC721: balance query for the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC721Metadata: URI query for no\")\n        mstore(add(headStart, 96), \"nexistent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: operator query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}","id":12,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x154 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7 PUSH2 0xD2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2A JUMP JUMPDEST PUSH2 0x1EF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF4 PUSH2 0x241 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x114 PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0xDB2 JUMP JUMPDEST PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13F PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0xE11 JUMP JUMPDEST PUSH2 0x471 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x162 CALLDATASIZE PUSH1 0x4 PUSH2 0xE11 JUMP JUMPDEST PUSH2 0x4A2 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB2 JUMP JUMPDEST PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x18D PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0xE4D JUMP JUMPDEST PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x5BB JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE68 JUMP JUMPDEST PUSH2 0x5CA JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB2 JUMP JUMPDEST PUSH2 0x611 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0xF96 JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x220 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x23B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x250 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x27C SWAP1 PUSH2 0xFC9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x29E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2AC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE DUP3 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x344 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36B DUP3 PUSH2 0x4BD JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33B JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3F5 JUMPI POP PUSH2 0x3F5 DUP2 CALLER PUSH2 0x6E9 JUMP JUMPDEST PUSH2 0x462 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x1B995C881B9BDC88185C1C1C9BDD995908199BDC88185B1B PUSH1 0x42 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33B JUMP JUMPDEST PUSH2 0x46C DUP4 DUP4 PUSH2 0x734 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x47B CALLER DUP3 PUSH2 0x7A2 JUMP JUMPDEST PUSH2 0x497 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33B SWAP1 PUSH2 0x1004 JUMP JUMPDEST PUSH2 0x46C DUP4 DUP4 DUP4 PUSH2 0x86C JUMP JUMPDEST PUSH2 0x46C DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x23B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x250 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST PUSH2 0x5D5 CALLER DUP4 DUP4 PUSH2 0xA08 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5E3 CALLER DUP4 PUSH2 0x7A2 JUMP JUMPDEST PUSH2 0x5FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33B SWAP1 PUSH2 0x1004 JUMP JUMPDEST PUSH2 0x60B DUP5 DUP5 DUP5 DUP5 PUSH2 0xAD3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x61C DUP3 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x680 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x697 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6E2 JUMP JUMPDEST DUP1 PUSH2 0x6C1 DUP5 PUSH2 0xB06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6D2 SWAP3 SWAP2 SWAP1 PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x769 DUP3 PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7AD DUP3 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x80E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x819 DUP4 PUSH2 0x4BD JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x854 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x849 DUP5 PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x864 JUMPI POP PUSH2 0x864 DUP2 DUP6 PUSH2 0x6E9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x87F DUP3 PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x945 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33B JUMP JUMPDEST PUSH2 0x950 PUSH1 0x0 DUP3 PUSH2 0x734 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x979 SWAP1 DUP5 SWAP1 PUSH2 0x109A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9A7 SWAP1 DUP5 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xA66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x22A9219B99189D1030B8383937BB32903A379031B0B63632B9 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x33B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xADE DUP5 DUP5 DUP5 PUSH2 0x86C JUMP JUMPDEST PUSH2 0xAEA DUP5 DUP5 DUP5 DUP5 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0x60B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33B SWAP1 PUSH2 0x10C9 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xB2A JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB54 JUMPI DUP1 PUSH2 0xB3E DUP2 PUSH2 0x111B JUMP JUMPDEST SWAP2 POP PUSH2 0xB4D SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x114C JUMP JUMPDEST SWAP2 POP PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB6F JUMPI PUSH2 0xB6F PUSH2 0xEA4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB99 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x864 JUMPI PUSH2 0xBAE PUSH1 0x1 DUP4 PUSH2 0x109A JUMP JUMPDEST SWAP2 POP PUSH2 0xBBB PUSH1 0xA DUP7 PUSH2 0x1160 JUMP JUMPDEST PUSH2 0xBC6 SWAP1 PUSH1 0x30 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xBDB JUMPI PUSH2 0xBDB PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xBFD PUSH1 0xA DUP7 PUSH2 0x114C JUMP JUMPDEST SWAP5 POP PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD06 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC48 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x118A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC92 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC8F SWAP2 DUP2 ADD SWAP1 PUSH2 0x11C7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xCEC JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCC0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xCE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33B SWAP1 PUSH2 0x10C9 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x864 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6E2 DUP2 PUSH2 0xD11 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD62 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD4A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x60B JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD8B DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x6E2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE03 DUP4 PUSH2 0xDCB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE2F DUP5 PUSH2 0xDCB JUMP JUMPDEST SWAP3 POP PUSH2 0xE3D PUSH1 0x20 DUP6 ADD PUSH2 0xDCB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6E2 DUP3 PUSH2 0xDCB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE84 DUP4 PUSH2 0xDCB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xED0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED9 DUP6 PUSH2 0xDCB JUMP JUMPDEST SWAP4 POP PUSH2 0xEE7 PUSH1 0x20 DUP7 ADD PUSH2 0xDCB JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF31 JUMPI PUSH2 0xF31 PUSH2 0xEA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF59 JUMPI PUSH2 0xF59 PUSH2 0xEA4 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xF72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFB2 DUP4 PUSH2 0xDCB JUMP JUMPDEST SWAP2 POP PUSH2 0xFC0 PUSH1 0x20 DUP5 ADD PUSH2 0xDCB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFDD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xFFE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1067 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD47 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x107B DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD47 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x10AC JUMPI PUSH2 0x10AC PUSH2 0x1084 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10C4 JUMPI PUSH2 0x10C4 PUSH2 0x1084 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x112F JUMPI PUSH2 0x112F PUSH2 0x1084 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x115B JUMPI PUSH2 0x115B PUSH2 0x1136 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x116F JUMPI PUSH2 0x116F PUSH2 0x1136 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11BD SWAP1 DUP4 ADD DUP5 PUSH2 0xD73 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6E2 DUP2 PUSH2 0xD11 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB PUSH30 0x173E66B9494B38A16573C91151E3697C237AEF4A69ADA0AA431A1EECB27 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"628:13657:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:12;;558:22;540:41;;528:2;513:18;1570:300:1;;;;;;;;2488:98;;;:::i;:::-;;;;;;;:::i;3999:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:12;;;1674:51;;1662:2;1647:18;3999:217:1;1528:203:12;3537:401:1;;;;;;:::i;:::-;;:::i;:::-;;4726:330;;;;;;:::i;:::-;;:::i;5122:179::-;;;;;;:::i;:::-;;:::i;2191:235::-;;;;;;:::i;:::-;;:::i;1929:205::-;;;;;;:::i;:::-;;:::i;:::-;;;2843:25:12;;;2831:2;2816:18;1929:205:1;2697:177:12;2650:102:1;;;:::i;4283:153::-;;;;;;:::i;:::-;;:::i;5367:320::-;;;;;;:::i;:::-;;:::i;2818:329::-;;;;;;:::i;:::-;;:::i;4502:162::-;;;;;;:::i;:::-;;:::i;1570:300::-;1672:4;-1:-1:-1;;;;;;1707:40:1;;-1:-1:-1;;;1707:40:1;;:104;;-1:-1:-1;;;;;;;1763:48:1;;-1:-1:-1;;;1763:48:1;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:9;;;1827:36:1;1688:175;1570:300;-1:-1:-1;;1570:300:1:o;2488:98::-;2542:13;2574:5;2567:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:98;:::o;3999:217::-;4075:7;4102:16;4110:7;4102;:16::i;:::-;4094:73;;;;-1:-1:-1;;;4094:73:1;;5358:2:12;4094:73:1;;;5340:21:12;5397:2;5377:18;;;5370:30;5436:34;5416:18;;;5409:62;-1:-1:-1;;;5487:18:12;;;5480:42;5539:19;;4094:73:1;;;;;;;;;-1:-1:-1;4185:24:1;;;;:15;:24;;;;;;-1:-1:-1;;;;;4185:24:1;;3999:217::o;3537:401::-;3617:13;3633:23;3648:7;3633:14;:23::i;:::-;3617:39;;3680:5;-1:-1:-1;;;;;3674:11:1;:2;-1:-1:-1;;;;;3674:11:1;;;3666:57;;;;-1:-1:-1;;;3666:57:1;;5771:2:12;3666:57:1;;;5753:21:12;5810:2;5790:18;;;5783:30;5849:34;5829:18;;;5822:62;-1:-1:-1;;;5900:18:12;;;5893:31;5941:19;;3666:57:1;5569:397:12;3666:57:1;719:10:7;-1:-1:-1;;;;;3755:21:1;;;;:62;;-1:-1:-1;3780:37:1;3797:5;719:10:7;4502:162:1;:::i;3780:37::-;3734:165;;;;-1:-1:-1;;;3734:165:1;;6173:2:12;3734:165:1;;;6155:21:12;6212:2;6192:18;;;6185:30;6251:34;6231:18;;;6224:62;-1:-1:-1;;;6302:18:12;;;6295:54;6366:19;;3734:165:1;5971:420:12;3734:165:1;3910:21;3919:2;3923:7;3910:8;:21::i;:::-;3607:331;3537:401;;:::o;4726:330::-;4915:41;719:10:7;4948:7:1;4915:18;:41::i;:::-;4907:103;;;;-1:-1:-1;;;4907:103:1;;;;;;;:::i;:::-;5021:28;5031:4;5037:2;5041:7;5021:9;:28::i;5122:179::-;5255:39;5272:4;5278:2;5282:7;5255:39;;;;;;;;;;;;:16;:39::i;2191:235::-;2263:7;2298:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2298:16:1;2332:19;2324:73;;;;-1:-1:-1;;;2324:73:1;;7016:2:12;2324:73:1;;;6998:21:12;7055:2;7035:18;;;7028:30;7094:34;7074:18;;;7067:62;-1:-1:-1;;;7145:18:12;;;7138:39;7194:19;;2324:73:1;6814:405:12;1929:205:1;2001:7;-1:-1:-1;;;;;2028:19:1;;2020:74;;;;-1:-1:-1;;;2020:74:1;;7426:2:12;2020:74:1;;;7408:21:12;7465:2;7445:18;;;7438:30;7504:34;7484:18;;;7477:62;-1:-1:-1;;;7555:18:12;;;7548:40;7605:19;;2020:74:1;7224:406:12;2020:74:1;-1:-1:-1;;;;;;2111:16:1;;;;;:9;:16;;;;;;;1929:205::o;2650:102::-;2706:13;2738:7;2731:14;;;;;:::i;4283:153::-;4377:52;719:10:7;4410:8:1;4420;4377:18;:52::i;:::-;4283:153;;:::o;5367:320::-;5536:41;719:10:7;5569:7:1;5536:18;:41::i;:::-;5528:103;;;;-1:-1:-1;;;5528:103:1;;;;;;;:::i;:::-;5641:39;5655:4;5661:2;5665:7;5674:5;5641:13;:39::i;:::-;5367:320;;;;:::o;2818:329::-;2891:13;2924:16;2932:7;2924;:16::i;:::-;2916:76;;;;-1:-1:-1;;;2916:76:1;;7837:2:12;2916:76:1;;;7819:21:12;7876:2;7856:18;;;7849:30;7915:34;7895:18;;;7888:62;-1:-1:-1;;;7966:18:12;;;7959:45;8021:19;;2916:76:1;7635:411:12;2916:76:1;3003:21;3027:10;3464:9;;;;;;;;;-1:-1:-1;3464:9:1;;;3388:92;3027:10;3003:34;;3078:1;3060:7;3054:21;:25;:86;;;;;;;;;;;;;;;;;3106:7;3115:18;:7;:16;:18::i;:::-;3089:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3054:86;3047:93;2818:329;-1:-1:-1;;;2818:329:1:o;4502:162::-;-1:-1:-1;;;;;4622:25:1;;;4599:4;4622:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4502:162::o;7159:125::-;7224:4;7247:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7247:16:1;:30;;;7159:125::o;11168:171::-;11242:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11242:29:1;-1:-1:-1;;;;;11242:29:1;;;;;;;;:24;;11295:23;11242:24;11295:14;:23::i;:::-;-1:-1:-1;;;;;11286:46:1;;;;;;;;;;;11168:171;;:::o;7442:344::-;7535:4;7559:16;7567:7;7559;:16::i;:::-;7551:73;;;;-1:-1:-1;;;7551:73:1;;8728:2:12;7551:73:1;;;8710:21:12;8767:2;8747:18;;;8740:30;8806:34;8786:18;;;8779:62;-1:-1:-1;;;8857:18:12;;;8850:42;8909:19;;7551:73:1;8526:408:12;7551:73:1;7634:13;7650:23;7665:7;7650:14;:23::i;:::-;7634:39;;7702:5;-1:-1:-1;;;;;7691:16:1;:7;-1:-1:-1;;;;;7691:16:1;;:51;;;;7735:7;-1:-1:-1;;;;;7711:31:1;:20;7723:7;7711:11;:20::i;:::-;-1:-1:-1;;;;;7711:31:1;;7691:51;:87;;;;7746:32;7763:5;7770:7;7746:16;:32::i;:::-;7683:96;7442:344;-1:-1:-1;;;;7442:344:1:o;10452:605::-;10606:4;-1:-1:-1;;;;;10579:31:1;:23;10594:7;10579:14;:23::i;:::-;-1:-1:-1;;;;;10579:31:1;;10571:81;;;;-1:-1:-1;;;10571:81:1;;9141:2:12;10571:81:1;;;9123:21:12;9180:2;9160:18;;;9153:30;9219:34;9199:18;;;9192:62;-1:-1:-1;;;9270:18:12;;;9263:35;9315:19;;10571:81:1;8939:401:12;10571:81:1;-1:-1:-1;;;;;10670:16:1;;10662:65;;;;-1:-1:-1;;;10662:65:1;;9547:2:12;10662:65:1;;;9529:21:12;9586:2;9566:18;;;9559:30;9625:34;9605:18;;;9598:62;-1:-1:-1;;;9676:18:12;;;9669:34;9720:19;;10662:65:1;9345:400:12;10662:65:1;10839:29;10856:1;10860:7;10839:8;:29::i;:::-;-1:-1:-1;;;;;10879:15:1;;;;;;:9;:15;;;;;:20;;10898:1;;10879:15;:20;;10898:1;;10879:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10909:13:1;;;;;;:9;:13;;;;;:18;;10926:1;;10909:13;:18;;10926:1;;10909:18;:::i;:::-;;;;-1:-1:-1;;10937:16:1;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10937:21:1;-1:-1:-1;;;;;10937:21:1;;;;;;;;;10974:27;;10937:16;;10974:27;;;;;;;3607:331;3537:401;;:::o;11474:307::-;11624:8;-1:-1:-1;;;;;11615:17:1;:5;-1:-1:-1;;;;;11615:17:1;;;11607:55;;;;-1:-1:-1;;;11607:55:1;;10347:2:12;11607:55:1;;;10329:21:12;10386:2;10366:18;;;10359:30;-1:-1:-1;;;10405:18:12;;;10398:55;10470:18;;11607:55:1;10145:349:12;11607:55:1;-1:-1:-1;;;;;11672:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11672:46:1;;;;;;;;;;11733:41;;540::12;;;11733::1;;513:18:12;11733:41:1;;;;;;;11474:307;;;:::o;6549:::-;6700:28;6710:4;6716:2;6720:7;6700:9;:28::i;:::-;6746:48;6769:4;6775:2;6779:7;6788:5;6746:22;:48::i;:::-;6738:111;;;;-1:-1:-1;;;6738:111:1;;;;;;;:::i;328:703:8:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:8;;;;;;;;;;;;-1:-1:-1;;;627:10:8;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:8;;-1:-1:-1;773:2:8;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:8;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:8;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:8;;;;;;;;-1:-1:-1;972:11:8;981:2;972:11;;:::i;:::-;;;844:150;;12334:778:1;12484:4;-1:-1:-1;;;;;12504:13:1;;1465:19:5;:23;12500:606:1;;12539:72;;-1:-1:-1;;;12539:72:1;;-1:-1:-1;;;;;12539:36:1;;;;;:72;;719:10:7;;12590:4:1;;12596:7;;12605:5;;12539:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12539:72:1;;;;;;;;-1:-1:-1;;12539:72:1;;;;;;;;;;;;:::i;:::-;;;12535:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12778:13:1;;12774:266;;12820:60;;-1:-1:-1;;;12820:60:1;;;;;;;:::i;12774:266::-;12992:6;12986:13;12977:6;12973:2;12969:15;12962:38;12535:519;-1:-1:-1;;;;;;12661:51:1;-1:-1:-1;;;12661:51:1;;-1:-1:-1;12654:58:1;;12500:606;-1:-1:-1;13091:4:1;12334:778;;;;;;:::o;14:131:12:-;-1:-1:-1;;;;;;88:32:12;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:12;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:12;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:12:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:12;;1343:180;-1:-1:-1;1343:180:12:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:12;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:12:o;2173:328::-;2250:6;2258;2266;2319:2;2307:9;2298:7;2294:23;2290:32;2287:52;;;2335:1;2332;2325:12;2287:52;2358:29;2377:9;2358:29;:::i;:::-;2348:39;;2406:38;2440:2;2429:9;2425:18;2406:38;:::i;:::-;2396:48;;2491:2;2480:9;2476:18;2463:32;2453:42;;2173:328;;;;;:::o;2506:186::-;2565:6;2618:2;2606:9;2597:7;2593:23;2589:32;2586:52;;;2634:1;2631;2624:12;2586:52;2657:29;2676:9;2657:29;:::i;2879:347::-;2944:6;2952;3005:2;2993:9;2984:7;2980:23;2976:32;2973:52;;;3021:1;3018;3011:12;2973:52;3044:29;3063:9;3044:29;:::i;:::-;3034:39;;3123:2;3112:9;3108:18;3095:32;3170:5;3163:13;3156:21;3149:5;3146:32;3136:60;;3192:1;3189;3182:12;3136:60;3215:5;3205:15;;;2879:347;;;;;:::o;3231:127::-;3292:10;3287:3;3283:20;3280:1;3273:31;3323:4;3320:1;3313:15;3347:4;3344:1;3337:15;3363:1138;3458:6;3466;3474;3482;3535:3;3523:9;3514:7;3510:23;3506:33;3503:53;;;3552:1;3549;3542:12;3503:53;3575:29;3594:9;3575:29;:::i;:::-;3565:39;;3623:38;3657:2;3646:9;3642:18;3623:38;:::i;:::-;3613:48;;3708:2;3697:9;3693:18;3680:32;3670:42;;3763:2;3752:9;3748:18;3735:32;3786:18;3827:2;3819:6;3816:14;3813:34;;;3843:1;3840;3833:12;3813:34;3881:6;3870:9;3866:22;3856:32;;3926:7;3919:4;3915:2;3911:13;3907:27;3897:55;;3948:1;3945;3938:12;3897:55;3984:2;3971:16;4006:2;4002;3999:10;3996:36;;;4012:18;;:::i;:::-;4087:2;4081:9;4055:2;4141:13;;-1:-1:-1;;4137:22:12;;;4161:2;4133:31;4129:40;4117:53;;;4185:18;;;4205:22;;;4182:46;4179:72;;;4231:18;;:::i;:::-;4271:10;4267:2;4260:22;4306:2;4298:6;4291:18;4346:7;4341:2;4336;4332;4328:11;4324:20;4321:33;4318:53;;;4367:1;4364;4357:12;4318:53;4423:2;4418;4414;4410:11;4405:2;4397:6;4393:15;4380:46;4468:1;4463:2;4458;4450:6;4446:15;4442:24;4435:35;4489:6;4479:16;;;;;;;3363:1138;;;;;;;:::o;4506:260::-;4574:6;4582;4635:2;4623:9;4614:7;4610:23;4606:32;4603:52;;;4651:1;4648;4641:12;4603:52;4674:29;4693:9;4674:29;:::i;:::-;4664:39;;4722:38;4756:2;4745:9;4741:18;4722:38;:::i;:::-;4712:48;;4506:260;;;;;:::o;4771:380::-;4850:1;4846:12;;;;4893;;;4914:61;;4968:4;4960:6;4956:17;4946:27;;4914:61;5021:2;5013:6;5010:14;4990:18;4987:38;4984:161;;;5067:10;5062:3;5058:20;5055:1;5048:31;5102:4;5099:1;5092:15;5130:4;5127:1;5120:15;4984:161;;4771:380;;;:::o;6396:413::-;6598:2;6580:21;;;6637:2;6617:18;;;6610:30;6676:34;6671:2;6656:18;;6649:62;-1:-1:-1;;;6742:2:12;6727:18;;6720:47;6799:3;6784:19;;6396:413::o;8051:470::-;8230:3;8268:6;8262:13;8284:53;8330:6;8325:3;8318:4;8310:6;8306:17;8284:53;:::i;:::-;8400:13;;8359:16;;;;8422:57;8400:13;8359:16;8456:4;8444:17;;8422:57;:::i;:::-;8495:20;;8051:470;-1:-1:-1;;;;8051:470:12:o;9750:127::-;9811:10;9806:3;9802:20;9799:1;9792:31;9842:4;9839:1;9832:15;9866:4;9863:1;9856:15;9882:125;9922:4;9950:1;9947;9944:8;9941:34;;;9955:18;;:::i;:::-;-1:-1:-1;9992:9:12;;9882:125::o;10012:128::-;10052:3;10083:1;10079:6;10076:1;10073:13;10070:39;;;10089:18;;:::i;:::-;-1:-1:-1;10125:9:12;;10012:128::o;10499:414::-;10701:2;10683:21;;;10740:2;10720:18;;;10713:30;10779:34;10774:2;10759:18;;10752:62;-1:-1:-1;;;10845:2:12;10830:18;;10823:48;10903:3;10888:19;;10499:414::o;10918:135::-;10957:3;-1:-1:-1;;10978:17:12;;10975:43;;;10998:18;;:::i;:::-;-1:-1:-1;11045:1:12;11034:13;;10918:135::o;11058:127::-;11119:10;11114:3;11110:20;11107:1;11100:31;11150:4;11147:1;11140:15;11174:4;11171:1;11164:15;11190:120;11230:1;11256;11246:35;;11261:18;;:::i;:::-;-1:-1:-1;11295:9:12;;11190:120::o;11315:112::-;11347:1;11373;11363:35;;11378:18;;:::i;:::-;-1:-1:-1;11412:9:12;;11315:112::o;11432:127::-;11493:10;11488:3;11484:20;11481:1;11474:31;11524:4;11521:1;11514:15;11548:4;11545:1;11538:15;11564:489;-1:-1:-1;;;;;11833:15:12;;;11815:34;;11885:15;;11880:2;11865:18;;11858:43;11932:2;11917:18;;11910:34;;;11980:3;11975:2;11960:18;;11953:31;;;11758:4;;12001:46;;12027:19;;12019:6;12001:46;:::i;:::-;11993:54;11564:489;-1:-1:-1;;;;;;11564:489:12:o;12058:249::-;12127:6;12180:2;12168:9;12159:7;12155:23;12151:32;12148:52;;;12196:1;12193;12186:12;12148:52;12228:9;12222:16;12247:30;12271:5;12247:30;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"926800","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2611","getApproved(uint256)":"4776","isApprovedForAll(address,address)":"infinite","name()":"infinite","ownerOf(uint256)":"2556","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"26752","supportsInterface(bytes4)":"511","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"infinite","_approve(address,uint256)":"infinite","_baseURI()":"infinite","_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(uint256)":"infinite","_checkOnERC721Received(address,address,uint256,bytes memory)":"infinite","_exists(uint256)":"2211","_isApprovedOrOwner(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_safeMint(address,uint256)":"infinite","_safeMint(address,uint256,bytes memory)":"infinite","_safeTransfer(address,address,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: balance query for the zero address\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: owner query for nonexistent token\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721Metadata: URI query for nonexistent token\\\");\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overriden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        require(_exists(tokenId), \\\"ERC721: approved query for nonexistent token\\\");\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, _data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        require(_exists(tokenId), \\\"ERC721: operator query for nonexistent token\\\");\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, _data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits a {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits a {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x11b84bb56dc112a6590bfe3e0efa118aa1b5891132342200d04c4ef544cb93de\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":130,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":132,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":136,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":140,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":144,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":150,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204b16eeffeeac2b31a3bc8807f495611232f9c61124c15cb88388134f2f41ed7a64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B AND 0xEE SELFDESTRUCT 0xEE 0xAC 0x2B BALANCE LOG3 0xBC DUP9 SMOD DELEGATECALL SWAP6 PUSH2 0x1232 0xF9 0xC6 GT 0x24 0xC1 0x5C 0xB8 DUP4 DUP9 SGT 0x4F 0x2F COINBASE 0xED PUSH27 0x64736F6C6343000809003300000000000000000000000000000000 ","sourceMap":"194:8061:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8061:5;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204b16eeffeeac2b31a3bc8807f495611232f9c61124c15cb88388134f2f41ed7a64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B AND 0xEE SELFDESTRUCT 0xEE 0xAC 0x2B BALANCE LOG3 0xBC DUP9 SMOD DELEGATECALL SWAP6 PUSH2 0x1232 0xF9 0xC6 GT 0x24 0xC1 0x5C 0xB8 DUP4 DUP9 SGT 0x4F 0x2F COINBASE 0xED PUSH27 0x64736F6C6343000809003300000000000000000000000000000000 ","sourceMap":"194:8061:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Base64.sol":{"Base64":{"abi":[],"devdoc":{"details":"Provides a set of functions to operate with Base64 strings. _Available since v4.5._","kind":"dev","methods":{},"stateVariables":{"_TABLE":{"details":"Base64 Encoding/Decoding Table"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f19163eb86ec09a22d3720f3121417a83e4c5cf9828874b19e454400ffd081d064736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL SWAP2 PUSH4 0xEB86EC09 LOG2 0x2D CALLDATACOPY KECCAK256 RETURN SLT EQ OR 0xA8 RETURNDATACOPY 0x4C 0x5C 0xF9 DUP3 DUP9 PUSH21 0xB19E454400FFD081D064736F6C6343000809003300 ","sourceMap":"231:3259:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;231:3259:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f19163eb86ec09a22d3720f3121417a83e4c5cf9828874b19e454400ffd081d064736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL SWAP2 PUSH4 0xEB86EC09 LOG2 0x2D CALLDATACOPY KECCAK256 RETURN SLT EQ OR 0xA8 RETURNDATACOPY 0x4C 0x5C 0xF9 DUP3 DUP9 PUSH21 0xB19E454400FFD081D064736F6C6343000809003300 ","sourceMap":"231:3259:6:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"encode(bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to operate with Base64 strings. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_TABLE\":{\"details\":\"Base64 Encoding/Decoding Table\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Base64.sol\":\"Base64\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Base64.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides a set of functions to operate with Base64 strings.\\n *\\n * _Available since v4.5._\\n */\\nlibrary Base64 {\\n    /**\\n     * @dev Base64 Encoding/Decoding Table\\n     */\\n    string internal constant _TABLE = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\n\\n    /**\\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\\n     */\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        /**\\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\\n         */\\n        if (data.length == 0) return \\\"\\\";\\n\\n        // Loads the table into memory\\n        string memory table = _TABLE;\\n\\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\\n        // and split into 4 numbers of 6 bits.\\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\\n        // - `data.length + 2`  -> Round up\\n        // - `/ 3`              -> Number of 3-bytes chunks\\n        // - `4 *`              -> 4 characters for each chunk\\n        string memory result = new string(4 * ((data.length + 2) / 3));\\n\\n        assembly {\\n            // Prepare the lookup table (skip the first \\\"length\\\" byte)\\n            let tablePtr := add(table, 1)\\n\\n            // Prepare result pointer, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // Run over the input, 3 bytes at a time\\n            for {\\n                let dataPtr := data\\n                let endPtr := add(data, mload(data))\\n            } lt(dataPtr, endPtr) {\\n\\n            } {\\n                // Advance 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // To write each character, shift the 3 bytes (18 bits) chunk\\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\\n                // and apply logical AND with 0x3F which is the number of\\n                // the previous character in the ASCII table prior to the Base64 Table\\n                // The result is then added to the table to get the character to write,\\n                // and finally write it in the result pointer but with a left shift\\n                // of 256 (1 byte) - 8 (1 ASCII char) = 248 bits\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n            }\\n\\n            // When data `bytes` is not exactly 3 bytes long\\n            // it is padded with `=` characters at the end\\n            switch mod(mload(data), 3)\\n            case 1 {\\n                mstore8(sub(resultPtr, 1), 0x3d)\\n                mstore8(sub(resultPtr, 2), 0x3d)\\n            }\\n            case 2 {\\n                mstore8(sub(resultPtr, 1), 0x3d)\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x5efa2a2ed44af15fd5bec8c43b45cb26fe6cb68671fea151e6afcfed66ed2672\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122067190e7b083d64091ef52996e353e577799262f2819a4dbe6048dffea338bb0664736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x190E7B083D64091E CREATE2 0x29 SWAP7 0xE3 MSTORE8 0xE5 PUSH24 0x799262F2819A4DBE6048DFFEA338BB0664736F6C63430008 MULMOD STOP CALLER ","sourceMap":"146:1885:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;146:1885:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122067190e7b083d64091ef52996e353e577799262f2819a4dbe6048dffea338bb0664736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x190E7B083D64091E CREATE2 0x29 SWAP7 0xE3 MSTORE8 0xE5 PUSH24 0x799262F2819A4DBE6048DFFEA338BB0664736F6C63430008 MULMOD STOP CALLER ","sourceMap":"146:1885:8:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/MedicalRecords.sol":{"MedicalRecords":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"reportId","type":"uint256"}],"name":"ReportCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextReportId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"reportMetadata","outputs":[{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"bytes32","name":"txHash","type":"bytes32"},{"internalType":"string","name":"reportName","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"bytes32","name":"txHash","type":"bytes32"},{"internalType":"string","name":"reportName","type":"string"}],"internalType":"struct MedicalRecords.AvailMetadata","name":"_reportMetadata","type":"tuple"}],"name":"storePatientData","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_167":{"entryPoint":null,"id":167,"parameterSlots":2,"returnSlots":0},"@_1775":{"entryPoint":null,"id":1775,"parameterSlots":1,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_msgSender_1485":{"entryPoint":206,"id":1485,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_103":{"entryPoint":210,"id":103,"parameterSlots":1,"returnSlots":0},"@owner_32":{"entryPoint":null,"id":32,"parameterSlots":0,"returnSlots":1},"@transferOwnership_83":{"entryPoint":292,"id":83,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":671,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":721,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1459:12","statements":[{"nodeType":"YulBlock","src":"6:3:12","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:12","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:12"},"nodeType":"YulFunctionCall","src":"143:12:12"},"nodeType":"YulExpressionStatement","src":"143:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:12"},"nodeType":"YulFunctionCall","src":"112:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:12"},"nodeType":"YulFunctionCall","src":"108:32:12"},"nodeType":"YulIf","src":"105:52:12"},{"nodeType":"YulVariableDeclaration","src":"166:29:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:12"},"nodeType":"YulFunctionCall","src":"179:16:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:12"},"nodeType":"YulFunctionCall","src":"260:12:12"},"nodeType":"YulExpressionStatement","src":"260:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:12"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:12","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:12"},"nodeType":"YulFunctionCall","src":"239:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:12"},"nodeType":"YulFunctionCall","src":"235:19:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:12"},"nodeType":"YulFunctionCall","src":"224:31:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:12"},"nodeType":"YulFunctionCall","src":"214:42:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:12"},"nodeType":"YulFunctionCall","src":"207:50:12"},"nodeType":"YulIf","src":"204:70:12"},{"nodeType":"YulAssignment","src":"283:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:12"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:12","type":""}],"src":"14:290:12"},{"body":{"nodeType":"YulBlock","src":"483:182:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"500:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"511:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"493:6:12"},"nodeType":"YulFunctionCall","src":"493:21:12"},"nodeType":"YulExpressionStatement","src":"493:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"534:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"545:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"530:3:12"},"nodeType":"YulFunctionCall","src":"530:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"550:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"523:6:12"},"nodeType":"YulFunctionCall","src":"523:30:12"},"nodeType":"YulExpressionStatement","src":"523:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"573:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"584:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"569:3:12"},"nodeType":"YulFunctionCall","src":"569:18:12"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"589:34:12","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"562:6:12"},"nodeType":"YulFunctionCall","src":"562:62:12"},"nodeType":"YulExpressionStatement","src":"562:62:12"},{"nodeType":"YulAssignment","src":"633:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"645:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"656:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"641:3:12"},"nodeType":"YulFunctionCall","src":"641:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"633:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"460:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"474:4:12","type":""}],"src":"309:356:12"},{"body":{"nodeType":"YulBlock","src":"844:228:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"861:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"872:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"854:6:12"},"nodeType":"YulFunctionCall","src":"854:21:12"},"nodeType":"YulExpressionStatement","src":"854:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"895:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"906:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"891:3:12"},"nodeType":"YulFunctionCall","src":"891:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"911:2:12","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"884:6:12"},"nodeType":"YulFunctionCall","src":"884:30:12"},"nodeType":"YulExpressionStatement","src":"884:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"934:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"945:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"930:3:12"},"nodeType":"YulFunctionCall","src":"930:18:12"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"950:34:12","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"923:6:12"},"nodeType":"YulFunctionCall","src":"923:62:12"},"nodeType":"YulExpressionStatement","src":"923:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1005:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1016:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1001:3:12"},"nodeType":"YulFunctionCall","src":"1001:18:12"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"1021:8:12","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"994:6:12"},"nodeType":"YulFunctionCall","src":"994:36:12"},"nodeType":"YulExpressionStatement","src":"994:36:12"},{"nodeType":"YulAssignment","src":"1039:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1051:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1062:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1047:3:12"},"nodeType":"YulFunctionCall","src":"1047:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1039:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"821:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"835:4:12","type":""}],"src":"670:402:12"},{"body":{"nodeType":"YulBlock","src":"1132:325:12","statements":[{"nodeType":"YulAssignment","src":"1142:22:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1156:1:12","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1159:4:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1152:3:12"},"nodeType":"YulFunctionCall","src":"1152:12:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1142:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"1173:38:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1203:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"1209:1:12","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1199:3:12"},"nodeType":"YulFunctionCall","src":"1199:12:12"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1177:18:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1250:31:12","statements":[{"nodeType":"YulAssignment","src":"1252:27:12","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1266:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"1274:4:12","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1262:3:12"},"nodeType":"YulFunctionCall","src":"1262:17:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1252:6:12"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1230:18:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1223:6:12"},"nodeType":"YulFunctionCall","src":"1223:26:12"},"nodeType":"YulIf","src":"1220:61:12"},{"body":{"nodeType":"YulBlock","src":"1340:111:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1361:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1368:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1373:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1364:3:12"},"nodeType":"YulFunctionCall","src":"1364:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1354:6:12"},"nodeType":"YulFunctionCall","src":"1354:31:12"},"nodeType":"YulExpressionStatement","src":"1354:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1405:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1408:4:12","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1398:6:12"},"nodeType":"YulFunctionCall","src":"1398:15:12"},"nodeType":"YulExpressionStatement","src":"1398:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1433:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1436:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1426:6:12"},"nodeType":"YulFunctionCall","src":"1426:15:12"},"nodeType":"YulExpressionStatement","src":"1426:15:12"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1296:18:12"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1319:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"1327:2:12","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1316:2:12"},"nodeType":"YulFunctionCall","src":"1316:14:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1293:2:12"},"nodeType":"YulFunctionCall","src":"1293:38:12"},"nodeType":"YulIf","src":"1290:161:12"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1112:4:12","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1121:6:12","type":""}],"src":"1077:380:12"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":12,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001d2a38038062001d2a83398101604081905262000034916200029f565b604080518082018252600f81526e4d65646963616c205265636f72647360881b6020808301918252835180850190945260068452654d454452454360d01b9084015281519192916200008991600091620001f9565b5080516200009f906001906020840190620001f9565b505050620000bc620000b6620000ce60201b60201c565b620000d2565b620000c78162000124565b506200030e565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6006546001600160a01b03163314620001845760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b038116620001eb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200017b565b620001f681620000d2565b50565b8280546200020790620002d1565b90600052602060002090601f0160209004810192826200022b576000855562000276565b82601f106200024657805160ff191683800117855562000276565b8280016001018555821562000276579182015b828111156200027657825182559160200191906001019062000259565b506200028492915062000288565b5090565b5b8082111562000284576000815560010162000289565b600060208284031215620002b257600080fd5b81516001600160a01b0381168114620002ca57600080fd5b9392505050565b600181811c90821680620002e657607f821691505b602082108114156200030857634e487b7160e01b600052602260045260246000fd5b50919050565b611a0c806200031e6000396000f3fe608060405234801561001057600080fd5b50600436106101115760003560e01c806370a08231116100ad578063a22cb46511610071578063a22cb4651461024c578063b88d4fde1461025f578063c87b56dd14610272578063e985e9c514610285578063f2fde38b1461029857600080fd5b806370a0823114610205578063715018a6146102185780638b3f1736146102205780638da5cb5b1461023357806395d89b411461024457600080fd5b806301ffc9a71461011657806306fdde031461013e578063081812fc14610153578063095ea7b31461017e57806323b872dd1461019357806342842e0e146101a657806362a428d5146101b95780636352211e146101db5780636e79bbf6146101ee575b600080fd5b6101296101243660046112dc565b6102ab565b60405190151581526020015b60405180910390f35b6101466102bc565b6040516101359190611358565b61016661016136600461136b565b61034e565b6040516001600160a01b039091168152602001610135565b61019161018c3660046113a0565b6103db565b005b6101916101a13660046113ca565b6104ec565b6101916101b43660046113ca565b61051d565b6101cc6101c736600461136b565b610538565b60405161013593929190611406565b6101666101e936600461136b565b6105e3565b6101f760075481565b604051908152602001610135565b6101f761021336600461142e565b61065a565b6101916106e1565b61019161022e3660046114fe565b610717565b6006546001600160a01b0316610166565b6101466107d3565b61019161025a366004611596565b6107e2565b61019161026d3660046115d2565b6107f1565b61014661028036600461136b565b610829565b61012961029336600461164e565b61093f565b6101916102a636600461142e565b61096d565b60006102b682610a08565b92915050565b6060600080546102cb90611681565b80601f01602080910402602001604051908101604052809291908181526020018280546102f790611681565b80156103445780601f1061031957610100808354040283529160200191610344565b820191906000526020600020905b81548152906001019060200180831161032757829003601f168201915b5050505050905090565b600061035982610a58565b6103bf5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103e6826105e3565b9050806001600160a01b0316836001600160a01b031614156104545760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103b6565b336001600160a01b03821614806104705750610470813361093f565b6104dd5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b60648201526084016103b6565b6104e78383610a75565b505050565b6104f63382610ae3565b6105125760405162461bcd60e51b81526004016103b6906116bc565b6104e7838383610bad565b6104e7838383604051806020016040528060008152506107f1565b6008602052600090815260409020805460018201546002830180549293919261056090611681565b80601f016020809104026020016040519081016040528092919081815260200182805461058c90611681565b80156105d95780601f106105ae576101008083540402835291602001916105d9565b820191906000526020600020905b8154815290600101906020018083116105bc57829003601f168201915b5050505050905083565b6000818152600260205260408120546001600160a01b0316806102b65760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103b6565b60006001600160a01b0382166106c55760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103b6565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b0316331461070b5760405162461bcd60e51b81526004016103b69061170d565b6107156000610d49565b565b6006546001600160a01b031633146107415760405162461bcd60e51b81526004016103b69061170d565b600780546000918261075283611758565b9091555082516000828152600860209081526040918290209283558086015160018401559085015180519394506107919360029093019291019061122d565b5061079c3382610d9b565b6040518181527fa334d01adfad3b6825eb093754e05bf8024eff7dee52c43fd93195ebe877a6649060200160405180910390a15050565b6060600180546102cb90611681565b6107ed338383610ece565b5050565b6107fb3383610ae3565b6108175760405162461bcd60e51b81526004016103b6906116bc565b61082384848484610f99565b50505050565b606060006040518060800160405280604381526020016119946043913960008481526008602052604081206002018054929350909161086790611681565b80601f016020809104026020016040519081016040528092919081815260200182805461089390611681565b80156108e05780601f106108b5576101008083540402835291602001916108e0565b820191906000526020600020905b8154815290600101906020018083116108c357829003601f168201915b50505050509050600082826040516020016108fc929190611773565b604051602081830303815290604052905061091681610fcc565b60405160200161092691906117f2565b6040516020818303038152906040529350505050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6006546001600160a01b031633146109975760405162461bcd60e51b81526004016103b69061170d565b6001600160a01b0381166109fc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103b6565b610a0581610d49565b50565b60006001600160e01b031982166380ac58cd60e01b1480610a3957506001600160e01b03198216635b5e139f60e01b145b806102b657506301ffc9a760e01b6001600160e01b03198316146102b6565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610aaa826105e3565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610aee82610a58565b610b4f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103b6565b6000610b5a836105e3565b9050806001600160a01b0316846001600160a01b03161480610b955750836001600160a01b0316610b8a8461034e565b6001600160a01b0316145b80610ba55750610ba5818561093f565b949350505050565b826001600160a01b0316610bc0826105e3565b6001600160a01b031614610c245760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016103b6565b6001600160a01b038216610c865760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103b6565b610c91600082610a75565b6001600160a01b0383166000908152600360205260408120805460019290610cba908490611837565b90915550506001600160a01b0382166000908152600360205260408120805460019290610ce890849061184e565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610df15760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103b6565b610dfa81610a58565b15610e475760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103b6565b6001600160a01b0382166000908152600360205260408120805460019290610e7090849061184e565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b816001600160a01b0316836001600160a01b03161415610f2c5760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b60448201526064016103b6565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610fa4848484610bad565b610fb084848484611120565b6108235760405162461bcd60e51b81526004016103b690611866565b6060815160001415610fec57505060408051602081019091526000815290565b6000604051806060016040528060408152602001611954604091399050600060038451600261101b919061184e565b61102591906118b8565b6110309060046118da565b67ffffffffffffffff81111561104857611048611449565b6040519080825280601f01601f191660200182016040528015611072576020820181803683370190505b509050600182016020820185865187015b808210156110de576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250611083565b50506003865106600181146110fa576002811461110d57611115565b603d6001830353603d6002830353611115565b603d60018303535b509195945050505050565b60006001600160a01b0384163b1561122257604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906111649033908990889088906004016118f9565b602060405180830381600087803b15801561117e57600080fd5b505af19250505080156111ae575060408051601f3d908101601f191682019092526111ab91810190611936565b60015b611208573d8080156111dc576040519150601f19603f3d011682016040523d82523d6000602084013e6111e1565b606091505b5080516112005760405162461bcd60e51b81526004016103b690611866565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610ba5565b506001949350505050565b82805461123990611681565b90600052602060002090601f01602090048101928261125b57600085556112a1565b82601f1061127457805160ff19168380011785556112a1565b828001600101855582156112a1579182015b828111156112a1578251825591602001919060010190611286565b506112ad9291506112b1565b5090565b5b808211156112ad57600081556001016112b2565b6001600160e01b031981168114610a0557600080fd5b6000602082840312156112ee57600080fd5b81356112f9816112c6565b9392505050565b60005b8381101561131b578181015183820152602001611303565b838111156108235750506000910152565b60008151808452611344816020860160208601611300565b601f01601f19169290920160200192915050565b6020815260006112f9602083018461132c565b60006020828403121561137d57600080fd5b5035919050565b80356001600160a01b038116811461139b57600080fd5b919050565b600080604083850312156113b357600080fd5b6113bc83611384565b946020939093013593505050565b6000806000606084860312156113df57600080fd5b6113e884611384565b92506113f660208501611384565b9150604084013590509250925092565b838152826020820152606060408201526000611425606083018461132c565b95945050505050565b60006020828403121561144057600080fd5b6112f982611384565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561148257611482611449565b60405290565b600067ffffffffffffffff808411156114a3576114a3611449565b604051601f8501601f19908116603f011681019082821181831017156114cb576114cb611449565b816040528093508581528686860111156114e457600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561151057600080fd5b813567ffffffffffffffff8082111561152857600080fd5b908301906060828603121561153c57600080fd5b61154461145f565b823581526020830135602082015260408301358281111561156457600080fd5b80840193505085601f84011261157957600080fd5b61158886843560208601611488565b604082015295945050505050565b600080604083850312156115a957600080fd5b6115b283611384565b9150602083013580151581146115c757600080fd5b809150509250929050565b600080600080608085870312156115e857600080fd5b6115f185611384565b93506115ff60208601611384565b925060408501359150606085013567ffffffffffffffff81111561162257600080fd5b8501601f8101871361163357600080fd5b61164287823560208401611488565b91505092959194509250565b6000806040838503121561166157600080fd5b61166a83611384565b915061167860208401611384565b90509250929050565b600181811c9082168061169557607f821691505b602082108114156116b657634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600060001982141561176c5761176c611742565b5060010190565b607b60f81b8152691134b6b0b3b2911d101160b11b600182015282516000906117a381600b850160208801611300565b61088b60f21b600b9184019182015268113730b6b2911d101160b91b600d82015283516117d7816016840160208801611300565b61227d60f01b60169290910191820152601801949350505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081526000825161182a81601d850160208701611300565b91909101601d0192915050565b60008282101561184957611849611742565b500390565b6000821982111561186157611861611742565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000826118d557634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156118f4576118f4611742565b500290565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061192c9083018461132c565b9695505050505050565b60006020828403121561194857600080fd5b81516112f9816112c656fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f6f70656e7365612d70726f642e61707073706f742e636f6d2f70756666732f312e706e67a2646970667358221220c4132cfe79a26ddc64c4a1a53612d9ac12022ebc927d122d4cc695182321d7d064736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1D2A CODESIZE SUB DUP1 PUSH3 0x1D2A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x29F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH15 0x4D65646963616C205265636F726473 PUSH1 0x88 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x6 DUP5 MSTORE PUSH6 0x4D4544524543 PUSH1 0xD0 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0x89 SWAP2 PUSH1 0x0 SWAP2 PUSH3 0x1F9 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x9F SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x1F9 JUMP JUMPDEST POP POP POP PUSH3 0xBC PUSH3 0xB6 PUSH3 0xCE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xD2 JUMP JUMPDEST PUSH3 0xC7 DUP2 PUSH3 0x124 JUMP JUMPDEST POP PUSH3 0x30E JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x184 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x1EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x17B JUMP JUMPDEST PUSH3 0x1F6 DUP2 PUSH3 0xD2 JUMP JUMPDEST POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x207 SWAP1 PUSH3 0x2D1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x22B JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x276 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x246 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x276 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x276 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x276 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x259 JUMP JUMPDEST POP PUSH3 0x284 SWAP3 SWAP2 POP PUSH3 0x288 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x284 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x289 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2E6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x308 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0C DUP1 PUSH3 0x31E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x111 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x8B3F1736 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x62A428D5 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x6E79BBF6 EQ PUSH2 0x1EE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x129 PUSH2 0x124 CALLDATASIZE PUSH1 0x4 PUSH2 0x12DC JUMP JUMPDEST PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x146 PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x1358 JUMP JUMPDEST PUSH2 0x166 PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0x136B JUMP JUMPDEST PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0x13A0 JUMP JUMPDEST PUSH2 0x3DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x191 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x13CA JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x191 PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x13CA JUMP JUMPDEST PUSH2 0x51D JUMP JUMPDEST PUSH2 0x1CC PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x136B JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1406 JUMP JUMPDEST PUSH2 0x166 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x136B JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST PUSH2 0x1F7 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x65A JUMP JUMPDEST PUSH2 0x191 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0x14FE JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x166 JUMP JUMPDEST PUSH2 0x146 PUSH2 0x7D3 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x1596 JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0x15D2 JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x146 PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x136B JUMP JUMPDEST PUSH2 0x829 JUMP JUMPDEST PUSH2 0x129 PUSH2 0x293 CALLDATASIZE PUSH1 0x4 PUSH2 0x164E JUMP JUMPDEST PUSH2 0x93F JUMP JUMPDEST PUSH2 0x191 PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x96D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B6 DUP3 PUSH2 0xA08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x2CB SWAP1 PUSH2 0x1681 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F7 SWAP1 PUSH2 0x1681 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x344 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x319 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x344 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x327 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x359 DUP3 PUSH2 0xA58 JUMP JUMPDEST PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E6 DUP3 PUSH2 0x5E3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x454 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B6 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x470 JUMPI POP PUSH2 0x470 DUP2 CALLER PUSH2 0x93F JUMP JUMPDEST PUSH2 0x4DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x1B995C881B9BDC88185C1C1C9BDD995908199BDC88185B1B PUSH1 0x42 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B6 JUMP JUMPDEST PUSH2 0x4E7 DUP4 DUP4 PUSH2 0xA75 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4F6 CALLER DUP3 PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x512 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B6 SWAP1 PUSH2 0x16BC JUMP JUMPDEST PUSH2 0x4E7 DUP4 DUP4 DUP4 PUSH2 0xBAD JUMP JUMPDEST PUSH2 0x4E7 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH2 0x560 SWAP1 PUSH2 0x1681 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x58C SWAP1 PUSH2 0x1681 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x2B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B6 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x70B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B6 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x715 PUSH1 0x0 PUSH2 0xD49 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x741 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B6 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 PUSH2 0x752 DUP4 PUSH2 0x1758 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP3 MLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 DUP4 SSTORE DUP1 DUP7 ADD MLOAD PUSH1 0x1 DUP5 ADD SSTORE SWAP1 DUP6 ADD MLOAD DUP1 MLOAD SWAP4 SWAP5 POP PUSH2 0x791 SWAP4 PUSH1 0x2 SWAP1 SWAP4 ADD SWAP3 SWAP2 ADD SWAP1 PUSH2 0x122D JUMP JUMPDEST POP PUSH2 0x79C CALLER DUP3 PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xA334D01ADFAD3B6825EB093754E05BF8024EFF7DEE52C43FD93195EBE877A664 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2CB SWAP1 PUSH2 0x1681 JUMP JUMPDEST PUSH2 0x7ED CALLER DUP4 DUP4 PUSH2 0xECE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7FB CALLER DUP4 PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x817 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B6 SWAP1 PUSH2 0x16BC JUMP JUMPDEST PUSH2 0x823 DUP5 DUP5 DUP5 DUP5 PUSH2 0xF99 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x43 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1994 PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH2 0x867 SWAP1 PUSH2 0x1681 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x893 SWAP1 PUSH2 0x1681 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8E0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8B5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8E0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8C3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8FC SWAP3 SWAP2 SWAP1 PUSH2 0x1773 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x916 DUP2 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x926 SWAP2 SWAP1 PUSH2 0x17F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x997 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B6 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B6 JUMP JUMPDEST PUSH2 0xA05 DUP2 PUSH2 0xD49 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xA39 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2B6 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x2B6 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0xAAA DUP3 PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEE DUP3 PUSH2 0xA58 JUMP JUMPDEST PUSH2 0xB4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5A DUP4 PUSH2 0x5E3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xB95 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB8A DUP5 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0xBA5 JUMPI POP PUSH2 0xBA5 DUP2 DUP6 PUSH2 0x93F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBC0 DUP3 PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B6 JUMP JUMPDEST PUSH2 0xC91 PUSH1 0x0 DUP3 PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xCBA SWAP1 DUP5 SWAP1 PUSH2 0x1837 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xCE8 SWAP1 DUP5 SWAP1 PUSH2 0x184E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B6 JUMP JUMPDEST PUSH2 0xDFA DUP2 PUSH2 0xA58 JUMP JUMPDEST ISZERO PUSH2 0xE47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xE70 SWAP1 DUP5 SWAP1 PUSH2 0x184E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xF2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x22A9219B99189D1030B8383937BB32903A379031B0B63632B9 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xFA4 DUP5 DUP5 DUP5 PUSH2 0xBAD JUMP JUMPDEST PUSH2 0xFB0 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1120 JUMP JUMPDEST PUSH2 0x823 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B6 SWAP1 PUSH2 0x1866 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xFEC JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1954 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP5 MLOAD PUSH1 0x2 PUSH2 0x101B SWAP2 SWAP1 PUSH2 0x184E JUMP JUMPDEST PUSH2 0x1025 SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH2 0x1030 SWAP1 PUSH1 0x4 PUSH2 0x18DA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1048 JUMPI PUSH2 0x1048 PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1072 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP3 ADD PUSH1 0x20 DUP3 ADD DUP6 DUP7 MLOAD DUP8 ADD JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x10DE JUMPI PUSH1 0x3 DUP3 ADD SWAP2 POP DUP2 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP5 MSTORE8 POP PUSH1 0x1 DUP4 ADD SWAP3 POP PUSH2 0x1083 JUMP JUMPDEST POP POP PUSH1 0x3 DUP7 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x10FA JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x110D JUMPI PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 PUSH1 0x3D PUSH1 0x2 DUP4 SUB MSTORE8 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1222 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1164 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x18F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x117E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11AE JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x11AB SWAP2 DUP2 ADD SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1208 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x11DC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11E1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x1200 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B6 SWAP1 PUSH2 0x1866 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xBA5 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1239 SWAP1 PUSH2 0x1681 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x125B JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x12A1 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1274 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x12A1 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x12A1 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x12A1 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1286 JUMP JUMPDEST POP PUSH2 0x12AD SWAP3 SWAP2 POP PUSH2 0x12B1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x12AD JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x12B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xA05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x12F9 DUP2 PUSH2 0x12C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x131B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1303 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x823 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1344 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x12F9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x132C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x137D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x139B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13BC DUP4 PUSH2 0x1384 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E8 DUP5 PUSH2 0x1384 JUMP JUMPDEST SWAP3 POP PUSH2 0x13F6 PUSH1 0x20 DUP6 ADD PUSH2 0x1384 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1425 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x132C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12F9 DUP3 PUSH2 0x1384 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1482 JUMPI PUSH2 0x1482 PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x14A3 JUMPI PUSH2 0x14A3 PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x14CB JUMPI PUSH2 0x14CB PUSH2 0x1449 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x14E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x60 DUP3 DUP7 SUB SLT ISZERO PUSH2 0x153C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1544 PUSH2 0x145F JUMP JUMPDEST DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x1564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 ADD SWAP4 POP POP DUP6 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1588 DUP7 DUP5 CALLDATALOAD PUSH1 0x20 DUP7 ADD PUSH2 0x1488 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15B2 DUP4 PUSH2 0x1384 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x15C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x15E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15F1 DUP6 PUSH2 0x1384 JUMP JUMPDEST SWAP4 POP PUSH2 0x15FF PUSH1 0x20 DUP7 ADD PUSH2 0x1384 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1622 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1642 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1488 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x166A DUP4 PUSH2 0x1384 JUMP JUMPDEST SWAP2 POP PUSH2 0x1678 PUSH1 0x20 DUP5 ADD PUSH2 0x1384 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1695 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x16B6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x176C JUMPI PUSH2 0x176C PUSH2 0x1742 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x7B PUSH1 0xF8 SHL DUP2 MSTORE PUSH10 0x1134B6B0B3B2911D1011 PUSH1 0xB1 SHL PUSH1 0x1 DUP3 ADD MSTORE DUP3 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x17A3 DUP2 PUSH1 0xB DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1300 JUMP JUMPDEST PUSH2 0x88B PUSH1 0xF2 SHL PUSH1 0xB SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE PUSH9 0x113730B6B2911D1011 PUSH1 0xB9 SHL PUSH1 0xD DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x17D7 DUP2 PUSH1 0x16 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1300 JUMP JUMPDEST PUSH2 0x227D PUSH1 0xF0 SHL PUSH1 0x16 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x18 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x182A DUP2 PUSH1 0x1D DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1300 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1D ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1849 JUMPI PUSH2 0x1849 PUSH2 0x1742 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1861 JUMPI PUSH2 0x1861 PUSH2 0x1742 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x18D5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x18F4 JUMPI PUSH2 0x18F4 PUSH2 0x1742 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x192C SWAP1 DUP4 ADD DUP5 PUSH2 0x132C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1948 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x12F9 DUP2 PUSH2 0x12C6 JUMP INVALID COINBASE TIMESTAMP NUMBER DIFFICULTY GASLIMIT CHAINID SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2F68747470733A2F 0x2F PUSH20 0x746F726167652E676F6F676C65617069732E636F PUSH14 0x2F6F70656E7365612D70726F642E PUSH2 0x7070 PUSH20 0x706F742E636F6D2F70756666732F312E706E67A2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 SGT 0x2C INVALID PUSH26 0xA26DDC64C4A1A53612D9AC12022EBC927D122D4CC695182321D7 0xD0 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"188:1823:11:-:0;;;491:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:1;;;;;;;;;;;-1:-1:-1;;;1390:113:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:1;;;;1456:13;;1390:113;;;1456:13;;-1:-1:-1;;1456:13:1;:::i;:::-;-1:-1:-1;1479:17:1;;;;:7;;:17;;;;;:::i;:::-;;1390:113;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;583:31:11::1;601:12:::0;583:17:::1;:31::i;:::-;491:130:::0;188:1823;;640:96:7;719:10;;640:96::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;1918:198::-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:7;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;511:2:12;1240:68:0;;;493:21:12;;;530:18;;;523:30;589:34;569:18;;;562:62;641:18;;1240:68:0;;;;;;;;;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;872:2:12;1998:73:0::1;::::0;::::1;854:21:12::0;911:2;891:18;;;884:30;950:34;930:18;;;923:62;-1:-1:-1;;;1001:18:12;;;994:36;1047:19;;1998:73:0::1;670:402:12::0;1998:73:0::1;2081:28;2100:8:::0;2081:18:::1;:28::i;:::-;1918:198:::0;:::o;188:1823:11:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;188:1823:11;;;-1:-1:-1;188:1823:11;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:290:12;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:12;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:12:o;1077:380::-;1156:1;1152:12;;;;1199;;;1220:61;;1274:4;1266:6;1262:17;1252:27;;1220:61;1327:2;1319:6;1316:14;1296:18;1293:38;1290:161;;;1373:10;1368:3;1364:20;1361:1;1354:31;1408:4;1405:1;1398:15;1436:4;1433:1;1426:15;1290:161;;1077:380;;;:::o;:::-;188:1823:11;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_969":{"entryPoint":null,"id":969,"parameterSlots":3,"returnSlots":0},"@_approve_853":{"entryPoint":2677,"id":853,"parameterSlots":2,"returnSlots":0},"@_beforeTokenTransfer_958":{"entryPoint":null,"id":958,"parameterSlots":3,"returnSlots":0},"@_checkOnERC721Received_947":{"entryPoint":4384,"id":947,"parameterSlots":4,"returnSlots":1},"@_exists_543":{"entryPoint":2648,"id":543,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_584":{"entryPoint":2787,"id":584,"parameterSlots":2,"returnSlots":1},"@_mint_694":{"entryPoint":3483,"id":694,"parameterSlots":2,"returnSlots":0},"@_msgSender_1485":{"entryPoint":null,"id":1485,"parameterSlots":0,"returnSlots":1},"@_safeTransfer_525":{"entryPoint":3993,"id":525,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_885":{"entryPoint":3790,"id":885,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_103":{"entryPoint":3401,"id":103,"parameterSlots":1,"returnSlots":0},"@_transfer_829":{"entryPoint":2989,"id":829,"parameterSlots":3,"returnSlots":0},"@approve_364":{"entryPoint":987,"id":364,"parameterSlots":2,"returnSlots":0},"@balanceOf_222":{"entryPoint":1626,"id":222,"parameterSlots":1,"returnSlots":1},"@encode_1472":{"entryPoint":4044,"id":1472,"parameterSlots":1,"returnSlots":1},"@getApproved_385":{"entryPoint":846,"id":385,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_420":{"entryPoint":2367,"id":420,"parameterSlots":2,"returnSlots":1},"@isContract_1149":{"entryPoint":null,"id":1149,"parameterSlots":1,"returnSlots":1},"@name_260":{"entryPoint":700,"id":260,"parameterSlots":0,"returnSlots":1},"@nextReportId_1749":{"entryPoint":null,"id":1749,"parameterSlots":0,"returnSlots":0},"@ownerOf_250":{"entryPoint":1507,"id":250,"parameterSlots":1,"returnSlots":1},"@owner_32":{"entryPoint":null,"id":32,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_60":{"entryPoint":1761,"id":60,"parameterSlots":0,"returnSlots":0},"@reportMetadata_1761":{"entryPoint":1336,"id":1761,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_466":{"entryPoint":1309,"id":466,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_496":{"entryPoint":2033,"id":496,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_402":{"entryPoint":2018,"id":402,"parameterSlots":2,"returnSlots":0},"@storePatientData_1823":{"entryPoint":1815,"id":1823,"parameterSlots":1,"returnSlots":0},"@supportsInterface_1721":{"entryPoint":null,"id":1721,"parameterSlots":1,"returnSlots":1},"@supportsInterface_1884":{"entryPoint":683,"id":1884,"parameterSlots":1,"returnSlots":1},"@supportsInterface_198":{"entryPoint":2568,"id":198,"parameterSlots":1,"returnSlots":1},"@symbol_270":{"entryPoint":2003,"id":270,"parameterSlots":0,"returnSlots":1},"@tokenURI_1869":{"entryPoint":2089,"id":1869,"parameterSlots":1,"returnSlots":1},"@transferFrom_447":{"entryPoint":1260,"id":447,"parameterSlots":3,"returnSlots":0},"@transferOwnership_83":{"entryPoint":2413,"id":83,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":4996,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":5256,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5166,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5710,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5066,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":5586,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":5526,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5024,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":4828,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":6454,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_AvailMetadata_$1756_memory_ptr":{"entryPoint":5374,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":4971,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":4908,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_t_stringliteral_dee71bd900939e5251fa52ed0e7fadcfe3990bd7a5ea546147c85d1b972c64b6_t_string_memory_ptr_t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb_t_stringliteral_92eb2af4325a1f29529688124f0869dc0de3154f09f2a84d73f5c6d33cc3af37_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6003,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6130,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6393,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_string_memory_ptr__to_t_bytes32_t_bytes32_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5126,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4952,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6246,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5901,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5820,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":5215,"id":null,"parameterSlots":0,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6222,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":6328,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":6362,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6199,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":4864,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":5761,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":5976,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5954,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5193,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":4806,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:16146:12","statements":[{"nodeType":"YulBlock","src":"6:3:12","statements":[]},{"body":{"nodeType":"YulBlock","src":"58:87:12","statements":[{"body":{"nodeType":"YulBlock","src":"123:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"132:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"125:6:12"},"nodeType":"YulFunctionCall","src":"125:12:12"},"nodeType":"YulExpressionStatement","src":"125:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"81:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"92:5:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"108:10:12","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"99:3:12"},"nodeType":"YulFunctionCall","src":"99:20:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"88:3:12"},"nodeType":"YulFunctionCall","src":"88:32:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"78:2:12"},"nodeType":"YulFunctionCall","src":"78:43:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"71:6:12"},"nodeType":"YulFunctionCall","src":"71:51:12"},"nodeType":"YulIf","src":"68:71:12"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47:5:12","type":""}],"src":"14:131:12"},{"body":{"nodeType":"YulBlock","src":"219:176:12","statements":[{"body":{"nodeType":"YulBlock","src":"265:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"274:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"277:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"267:6:12"},"nodeType":"YulFunctionCall","src":"267:12:12"},"nodeType":"YulExpressionStatement","src":"267:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"240:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"249:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"236:3:12"},"nodeType":"YulFunctionCall","src":"236:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"261:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"232:3:12"},"nodeType":"YulFunctionCall","src":"232:32:12"},"nodeType":"YulIf","src":"229:52:12"},{"nodeType":"YulVariableDeclaration","src":"290:36:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"316:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"303:12:12"},"nodeType":"YulFunctionCall","src":"303:23:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"294:5:12","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"359:5:12"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"335:23:12"},"nodeType":"YulFunctionCall","src":"335:30:12"},"nodeType":"YulExpressionStatement","src":"335:30:12"},{"nodeType":"YulAssignment","src":"374:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"384:5:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"374:6:12"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"185:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"196:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"208:6:12","type":""}],"src":"150:245:12"},{"body":{"nodeType":"YulBlock","src":"495:92:12","statements":[{"nodeType":"YulAssignment","src":"505:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"517:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"528:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"513:3:12"},"nodeType":"YulFunctionCall","src":"513:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"505:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"547:9:12"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"572:6:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"565:6:12"},"nodeType":"YulFunctionCall","src":"565:14:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"558:6:12"},"nodeType":"YulFunctionCall","src":"558:22:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"540:6:12"},"nodeType":"YulFunctionCall","src":"540:41:12"},"nodeType":"YulExpressionStatement","src":"540:41:12"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"464:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"475:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"486:4:12","type":""}],"src":"400:187:12"},{"body":{"nodeType":"YulBlock","src":"645:205:12","statements":[{"nodeType":"YulVariableDeclaration","src":"655:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"664:1:12","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"659:1:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"724:63:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"749:3:12"},{"name":"i","nodeType":"YulIdentifier","src":"754:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:12"},"nodeType":"YulFunctionCall","src":"745:11:12"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"768:3:12"},{"name":"i","nodeType":"YulIdentifier","src":"773:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"764:3:12"},"nodeType":"YulFunctionCall","src":"764:11:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"758:5:12"},"nodeType":"YulFunctionCall","src":"758:18:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"738:6:12"},"nodeType":"YulFunctionCall","src":"738:39:12"},"nodeType":"YulExpressionStatement","src":"738:39:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"685:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"688:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"682:2:12"},"nodeType":"YulFunctionCall","src":"682:13:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"696:19:12","statements":[{"nodeType":"YulAssignment","src":"698:15:12","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"707:1:12"},{"kind":"number","nodeType":"YulLiteral","src":"710:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"703:3:12"},"nodeType":"YulFunctionCall","src":"703:10:12"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"698:1:12"}]}]},"pre":{"nodeType":"YulBlock","src":"678:3:12","statements":[]},"src":"674:113:12"},{"body":{"nodeType":"YulBlock","src":"813:31:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"826:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"831:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"822:3:12"},"nodeType":"YulFunctionCall","src":"822:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"840:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"815:6:12"},"nodeType":"YulFunctionCall","src":"815:27:12"},"nodeType":"YulExpressionStatement","src":"815:27:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"802:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"805:6:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"799:2:12"},"nodeType":"YulFunctionCall","src":"799:13:12"},"nodeType":"YulIf","src":"796:48:12"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"623:3:12","type":""},{"name":"dst","nodeType":"YulTypedName","src":"628:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"633:6:12","type":""}],"src":"592:258:12"},{"body":{"nodeType":"YulBlock","src":"905:208:12","statements":[{"nodeType":"YulVariableDeclaration","src":"915:26:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"935:5:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"929:5:12"},"nodeType":"YulFunctionCall","src":"929:12:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"919:6:12","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"957:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"962:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"950:6:12"},"nodeType":"YulFunctionCall","src":"950:19:12"},"nodeType":"YulExpressionStatement","src":"950:19:12"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1004:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"1011:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1000:3:12"},"nodeType":"YulFunctionCall","src":"1000:16:12"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1022:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"1027:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1018:3:12"},"nodeType":"YulFunctionCall","src":"1018:14:12"},{"name":"length","nodeType":"YulIdentifier","src":"1034:6:12"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"978:21:12"},"nodeType":"YulFunctionCall","src":"978:63:12"},"nodeType":"YulExpressionStatement","src":"978:63:12"},{"nodeType":"YulAssignment","src":"1050:57:12","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1065:3:12"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1078:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"1086:2:12","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1074:3:12"},"nodeType":"YulFunctionCall","src":"1074:15:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1095:2:12","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1091:3:12"},"nodeType":"YulFunctionCall","src":"1091:7:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1070:3:12"},"nodeType":"YulFunctionCall","src":"1070:29:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1061:3:12"},"nodeType":"YulFunctionCall","src":"1061:39:12"},{"kind":"number","nodeType":"YulLiteral","src":"1102:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1057:3:12"},"nodeType":"YulFunctionCall","src":"1057:50:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1050:3:12"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"882:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"889:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"897:3:12","type":""}],"src":"855:258:12"},{"body":{"nodeType":"YulBlock","src":"1239:99:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1256:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1267:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1249:6:12"},"nodeType":"YulFunctionCall","src":"1249:21:12"},"nodeType":"YulExpressionStatement","src":"1249:21:12"},{"nodeType":"YulAssignment","src":"1279:53:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1305:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1317:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1328:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1313:3:12"},"nodeType":"YulFunctionCall","src":"1313:18:12"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1287:17:12"},"nodeType":"YulFunctionCall","src":"1287:45:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1279:4:12"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1208:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1219:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1230:4:12","type":""}],"src":"1118:220:12"},{"body":{"nodeType":"YulBlock","src":"1413:110:12","statements":[{"body":{"nodeType":"YulBlock","src":"1459:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1468:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1471:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1461:6:12"},"nodeType":"YulFunctionCall","src":"1461:12:12"},"nodeType":"YulExpressionStatement","src":"1461:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1434:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1443:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1430:3:12"},"nodeType":"YulFunctionCall","src":"1430:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1455:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1426:3:12"},"nodeType":"YulFunctionCall","src":"1426:32:12"},"nodeType":"YulIf","src":"1423:52:12"},{"nodeType":"YulAssignment","src":"1484:33:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1507:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1494:12:12"},"nodeType":"YulFunctionCall","src":"1494:23:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1484:6:12"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1379:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1390:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1402:6:12","type":""}],"src":"1343:180:12"},{"body":{"nodeType":"YulBlock","src":"1629:102:12","statements":[{"nodeType":"YulAssignment","src":"1639:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1651:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1662:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1647:3:12"},"nodeType":"YulFunctionCall","src":"1647:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1639:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1681:9:12"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1696:6:12"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1712:3:12","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1717:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1708:3:12"},"nodeType":"YulFunctionCall","src":"1708:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"1721:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1704:3:12"},"nodeType":"YulFunctionCall","src":"1704:19:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1692:3:12"},"nodeType":"YulFunctionCall","src":"1692:32:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1674:6:12"},"nodeType":"YulFunctionCall","src":"1674:51:12"},"nodeType":"YulExpressionStatement","src":"1674:51:12"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1598:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1609:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1620:4:12","type":""}],"src":"1528:203:12"},{"body":{"nodeType":"YulBlock","src":"1785:124:12","statements":[{"nodeType":"YulAssignment","src":"1795:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1817:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1804:12:12"},"nodeType":"YulFunctionCall","src":"1804:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1795:5:12"}]},{"body":{"nodeType":"YulBlock","src":"1887:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1896:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1899:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1889:6:12"},"nodeType":"YulFunctionCall","src":"1889:12:12"},"nodeType":"YulExpressionStatement","src":"1889:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1846:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1857:5:12"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1872:3:12","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1877:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1868:3:12"},"nodeType":"YulFunctionCall","src":"1868:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"1881:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1864:3:12"},"nodeType":"YulFunctionCall","src":"1864:19:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1853:3:12"},"nodeType":"YulFunctionCall","src":"1853:31:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1843:2:12"},"nodeType":"YulFunctionCall","src":"1843:42:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1836:6:12"},"nodeType":"YulFunctionCall","src":"1836:50:12"},"nodeType":"YulIf","src":"1833:70:12"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1764:6:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1775:5:12","type":""}],"src":"1736:173:12"},{"body":{"nodeType":"YulBlock","src":"2001:167:12","statements":[{"body":{"nodeType":"YulBlock","src":"2047:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2056:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2059:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2049:6:12"},"nodeType":"YulFunctionCall","src":"2049:12:12"},"nodeType":"YulExpressionStatement","src":"2049:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2022:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2031:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2018:3:12"},"nodeType":"YulFunctionCall","src":"2018:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2043:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2014:3:12"},"nodeType":"YulFunctionCall","src":"2014:32:12"},"nodeType":"YulIf","src":"2011:52:12"},{"nodeType":"YulAssignment","src":"2072:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2101:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2082:18:12"},"nodeType":"YulFunctionCall","src":"2082:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2072:6:12"}]},{"nodeType":"YulAssignment","src":"2120:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2147:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2158:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2143:3:12"},"nodeType":"YulFunctionCall","src":"2143:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2130:12:12"},"nodeType":"YulFunctionCall","src":"2130:32:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2120:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1959:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1970:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1982:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1990:6:12","type":""}],"src":"1914:254:12"},{"body":{"nodeType":"YulBlock","src":"2277:224:12","statements":[{"body":{"nodeType":"YulBlock","src":"2323:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2332:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2335:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2325:6:12"},"nodeType":"YulFunctionCall","src":"2325:12:12"},"nodeType":"YulExpressionStatement","src":"2325:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2298:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2307:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2294:3:12"},"nodeType":"YulFunctionCall","src":"2294:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2319:2:12","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2290:3:12"},"nodeType":"YulFunctionCall","src":"2290:32:12"},"nodeType":"YulIf","src":"2287:52:12"},{"nodeType":"YulAssignment","src":"2348:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2377:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2358:18:12"},"nodeType":"YulFunctionCall","src":"2358:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2348:6:12"}]},{"nodeType":"YulAssignment","src":"2396:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2429:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2440:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2425:3:12"},"nodeType":"YulFunctionCall","src":"2425:18:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2406:18:12"},"nodeType":"YulFunctionCall","src":"2406:38:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2396:6:12"}]},{"nodeType":"YulAssignment","src":"2453:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2480:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2491:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2476:3:12"},"nodeType":"YulFunctionCall","src":"2476:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2463:12:12"},"nodeType":"YulFunctionCall","src":"2463:32:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2453:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2227:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2238:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2250:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2258:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2266:6:12","type":""}],"src":"2173:328:12"},{"body":{"nodeType":"YulBlock","src":"2683:185:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2700:9:12"},{"name":"value0","nodeType":"YulIdentifier","src":"2711:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2693:6:12"},"nodeType":"YulFunctionCall","src":"2693:25:12"},"nodeType":"YulExpressionStatement","src":"2693:25:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2738:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2749:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2734:3:12"},"nodeType":"YulFunctionCall","src":"2734:18:12"},{"name":"value1","nodeType":"YulIdentifier","src":"2754:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2727:6:12"},"nodeType":"YulFunctionCall","src":"2727:34:12"},"nodeType":"YulExpressionStatement","src":"2727:34:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2781:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2792:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2777:3:12"},"nodeType":"YulFunctionCall","src":"2777:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"2797:2:12","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2770:6:12"},"nodeType":"YulFunctionCall","src":"2770:30:12"},"nodeType":"YulExpressionStatement","src":"2770:30:12"},{"nodeType":"YulAssignment","src":"2809:53:12","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2835:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2847:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2858:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2843:3:12"},"nodeType":"YulFunctionCall","src":"2843:18:12"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2817:17:12"},"nodeType":"YulFunctionCall","src":"2817:45:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2809:4:12"}]}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_string_memory_ptr__to_t_bytes32_t_bytes32_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2636:9:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2647:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2655:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2663:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2674:4:12","type":""}],"src":"2506:362:12"},{"body":{"nodeType":"YulBlock","src":"2974:76:12","statements":[{"nodeType":"YulAssignment","src":"2984:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2996:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3007:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2992:3:12"},"nodeType":"YulFunctionCall","src":"2992:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2984:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3026:9:12"},{"name":"value0","nodeType":"YulIdentifier","src":"3037:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3019:6:12"},"nodeType":"YulFunctionCall","src":"3019:25:12"},"nodeType":"YulExpressionStatement","src":"3019:25:12"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2943:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2954:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2965:4:12","type":""}],"src":"2873:177:12"},{"body":{"nodeType":"YulBlock","src":"3125:116:12","statements":[{"body":{"nodeType":"YulBlock","src":"3171:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3180:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3183:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3173:6:12"},"nodeType":"YulFunctionCall","src":"3173:12:12"},"nodeType":"YulExpressionStatement","src":"3173:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3146:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"3155:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3142:3:12"},"nodeType":"YulFunctionCall","src":"3142:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"3167:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3138:3:12"},"nodeType":"YulFunctionCall","src":"3138:32:12"},"nodeType":"YulIf","src":"3135:52:12"},{"nodeType":"YulAssignment","src":"3196:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3225:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3206:18:12"},"nodeType":"YulFunctionCall","src":"3206:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3196:6:12"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3091:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3102:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3114:6:12","type":""}],"src":"3055:186:12"},{"body":{"nodeType":"YulBlock","src":"3278:95:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3295:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3302:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3307:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3298:3:12"},"nodeType":"YulFunctionCall","src":"3298:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3288:6:12"},"nodeType":"YulFunctionCall","src":"3288:31:12"},"nodeType":"YulExpressionStatement","src":"3288:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3335:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3338:4:12","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3328:6:12"},"nodeType":"YulFunctionCall","src":"3328:15:12"},"nodeType":"YulExpressionStatement","src":"3328:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3359:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3362:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3352:6:12"},"nodeType":"YulFunctionCall","src":"3352:15:12"},"nodeType":"YulExpressionStatement","src":"3352:15:12"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3246:127:12"},{"body":{"nodeType":"YulBlock","src":"3419:207:12","statements":[{"nodeType":"YulAssignment","src":"3429:19:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3445:2:12","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3439:5:12"},"nodeType":"YulFunctionCall","src":"3439:9:12"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3429:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"3457:35:12","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3479:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"3487:4:12","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3475:3:12"},"nodeType":"YulFunctionCall","src":"3475:17:12"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3461:10:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"3567:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3569:16:12"},"nodeType":"YulFunctionCall","src":"3569:18:12"},"nodeType":"YulExpressionStatement","src":"3569:18:12"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3510:10:12"},{"kind":"number","nodeType":"YulLiteral","src":"3522:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3507:2:12"},"nodeType":"YulFunctionCall","src":"3507:34:12"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3546:10:12"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3558:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3543:2:12"},"nodeType":"YulFunctionCall","src":"3543:22:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3504:2:12"},"nodeType":"YulFunctionCall","src":"3504:62:12"},"nodeType":"YulIf","src":"3501:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3605:2:12","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3609:10:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3598:6:12"},"nodeType":"YulFunctionCall","src":"3598:22:12"},"nodeType":"YulExpressionStatement","src":"3598:22:12"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3408:6:12","type":""}],"src":"3378:248:12"},{"body":{"nodeType":"YulBlock","src":"3706:557:12","statements":[{"nodeType":"YulVariableDeclaration","src":"3716:28:12","value":{"kind":"number","nodeType":"YulLiteral","src":"3726:18:12","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3720:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"3771:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3773:16:12"},"nodeType":"YulFunctionCall","src":"3773:18:12"},"nodeType":"YulExpressionStatement","src":"3773:18:12"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3759:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"3767:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3756:2:12"},"nodeType":"YulFunctionCall","src":"3756:14:12"},"nodeType":"YulIf","src":"3753:40:12"},{"nodeType":"YulVariableDeclaration","src":"3802:17:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3816:2:12","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3812:3:12"},"nodeType":"YulFunctionCall","src":"3812:7:12"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3806:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3828:23:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3848:2:12","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3842:5:12"},"nodeType":"YulFunctionCall","src":"3842:9:12"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3832:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3860:73:12","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3882:6:12"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3906:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"3914:2:12","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3902:3:12"},"nodeType":"YulFunctionCall","src":"3902:15:12"},{"name":"_2","nodeType":"YulIdentifier","src":"3919:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3898:3:12"},"nodeType":"YulFunctionCall","src":"3898:24:12"},{"kind":"number","nodeType":"YulLiteral","src":"3924:2:12","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3894:3:12"},"nodeType":"YulFunctionCall","src":"3894:33:12"},{"name":"_2","nodeType":"YulIdentifier","src":"3929:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3890:3:12"},"nodeType":"YulFunctionCall","src":"3890:42:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3878:3:12"},"nodeType":"YulFunctionCall","src":"3878:55:12"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3864:10:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"3992:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3994:16:12"},"nodeType":"YulFunctionCall","src":"3994:18:12"},"nodeType":"YulExpressionStatement","src":"3994:18:12"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3951:10:12"},{"name":"_1","nodeType":"YulIdentifier","src":"3963:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3948:2:12"},"nodeType":"YulFunctionCall","src":"3948:18:12"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3971:10:12"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3983:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3968:2:12"},"nodeType":"YulFunctionCall","src":"3968:22:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3945:2:12"},"nodeType":"YulFunctionCall","src":"3945:46:12"},"nodeType":"YulIf","src":"3942:72:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4030:2:12","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4034:10:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4023:6:12"},"nodeType":"YulFunctionCall","src":"4023:22:12"},"nodeType":"YulExpressionStatement","src":"4023:22:12"},{"nodeType":"YulAssignment","src":"4054:15:12","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"4063:6:12"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4054:5:12"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4085:6:12"},{"name":"length","nodeType":"YulIdentifier","src":"4093:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4078:6:12"},"nodeType":"YulFunctionCall","src":"4078:22:12"},"nodeType":"YulExpressionStatement","src":"4078:22:12"},{"body":{"nodeType":"YulBlock","src":"4138:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4147:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4150:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4140:6:12"},"nodeType":"YulFunctionCall","src":"4140:12:12"},"nodeType":"YulExpressionStatement","src":"4140:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4119:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"4124:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4115:3:12"},"nodeType":"YulFunctionCall","src":"4115:16:12"},{"name":"end","nodeType":"YulIdentifier","src":"4133:3:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4112:2:12"},"nodeType":"YulFunctionCall","src":"4112:25:12"},"nodeType":"YulIf","src":"4109:45:12"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4180:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"4188:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4176:3:12"},"nodeType":"YulFunctionCall","src":"4176:17:12"},{"name":"src","nodeType":"YulIdentifier","src":"4195:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"4200:6:12"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4163:12:12"},"nodeType":"YulFunctionCall","src":"4163:44:12"},"nodeType":"YulExpressionStatement","src":"4163:44:12"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4231:6:12"},{"name":"length","nodeType":"YulIdentifier","src":"4239:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4227:3:12"},"nodeType":"YulFunctionCall","src":"4227:19:12"},{"kind":"number","nodeType":"YulLiteral","src":"4248:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4223:3:12"},"nodeType":"YulFunctionCall","src":"4223:30:12"},{"kind":"number","nodeType":"YulLiteral","src":"4255:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4216:6:12"},"nodeType":"YulFunctionCall","src":"4216:41:12"},"nodeType":"YulExpressionStatement","src":"4216:41:12"}]},"name":"abi_decode_available_length_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3675:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"3680:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"3688:3:12","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3696:5:12","type":""}],"src":"3631:632:12"},{"body":{"nodeType":"YulBlock","src":"4369:754:12","statements":[{"body":{"nodeType":"YulBlock","src":"4415:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4424:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4427:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4417:6:12"},"nodeType":"YulFunctionCall","src":"4417:12:12"},"nodeType":"YulExpressionStatement","src":"4417:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4390:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"4399:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4386:3:12"},"nodeType":"YulFunctionCall","src":"4386:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"4411:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4382:3:12"},"nodeType":"YulFunctionCall","src":"4382:32:12"},"nodeType":"YulIf","src":"4379:52:12"},{"nodeType":"YulVariableDeclaration","src":"4440:37:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4467:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4454:12:12"},"nodeType":"YulFunctionCall","src":"4454:23:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4444:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4486:28:12","value":{"kind":"number","nodeType":"YulLiteral","src":"4496:18:12","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4490:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"4541:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4550:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4553:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4543:6:12"},"nodeType":"YulFunctionCall","src":"4543:12:12"},"nodeType":"YulExpressionStatement","src":"4543:12:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4529:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"4537:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4526:2:12"},"nodeType":"YulFunctionCall","src":"4526:14:12"},"nodeType":"YulIf","src":"4523:34:12"},{"nodeType":"YulVariableDeclaration","src":"4566:32:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4580:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"4591:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4576:3:12"},"nodeType":"YulFunctionCall","src":"4576:22:12"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4570:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"4638:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4647:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4650:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4640:6:12"},"nodeType":"YulFunctionCall","src":"4640:12:12"},"nodeType":"YulExpressionStatement","src":"4640:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4618:7:12"},{"name":"_2","nodeType":"YulIdentifier","src":"4627:2:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4614:3:12"},"nodeType":"YulFunctionCall","src":"4614:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"4632:4:12","type":"","value":"0x60"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4610:3:12"},"nodeType":"YulFunctionCall","src":"4610:27:12"},"nodeType":"YulIf","src":"4607:47:12"},{"nodeType":"YulVariableDeclaration","src":"4663:30:12","value":{"arguments":[],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4676:15:12"},"nodeType":"YulFunctionCall","src":"4676:17:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4667:5:12","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4709:5:12"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4729:2:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4716:12:12"},"nodeType":"YulFunctionCall","src":"4716:16:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4702:6:12"},"nodeType":"YulFunctionCall","src":"4702:31:12"},"nodeType":"YulExpressionStatement","src":"4702:31:12"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4753:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4749:3:12"},"nodeType":"YulFunctionCall","src":"4749:14:12"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4782:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"4786:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4778:3:12"},"nodeType":"YulFunctionCall","src":"4778:11:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4765:12:12"},"nodeType":"YulFunctionCall","src":"4765:25:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4742:6:12"},"nodeType":"YulFunctionCall","src":"4742:49:12"},"nodeType":"YulExpressionStatement","src":"4742:49:12"},{"nodeType":"YulVariableDeclaration","src":"4800:41:12","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4833:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"4837:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4829:3:12"},"nodeType":"YulFunctionCall","src":"4829:11:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4816:12:12"},"nodeType":"YulFunctionCall","src":"4816:25:12"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4804:8:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"4870:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4879:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4882:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4872:6:12"},"nodeType":"YulFunctionCall","src":"4872:12:12"},"nodeType":"YulExpressionStatement","src":"4872:12:12"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4856:8:12"},{"name":"_1","nodeType":"YulIdentifier","src":"4866:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4853:2:12"},"nodeType":"YulFunctionCall","src":"4853:16:12"},"nodeType":"YulIf","src":"4850:36:12"},{"nodeType":"YulVariableDeclaration","src":"4895:27:12","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4909:2:12"},{"name":"offset_1","nodeType":"YulIdentifier","src":"4913:8:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4905:3:12"},"nodeType":"YulFunctionCall","src":"4905:17:12"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"4899:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"4970:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4979:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4982:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4972:6:12"},"nodeType":"YulFunctionCall","src":"4972:12:12"},"nodeType":"YulExpressionStatement","src":"4972:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4949:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"4953:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4945:3:12"},"nodeType":"YulFunctionCall","src":"4945:13:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4960:7:12"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4941:3:12"},"nodeType":"YulFunctionCall","src":"4941:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4934:6:12"},"nodeType":"YulFunctionCall","src":"4934:35:12"},"nodeType":"YulIf","src":"4931:55:12"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5006:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"5013:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5002:3:12"},"nodeType":"YulFunctionCall","src":"5002:14:12"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5057:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"5061:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5053:3:12"},"nodeType":"YulFunctionCall","src":"5053:11:12"},{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5079:2:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5066:12:12"},"nodeType":"YulFunctionCall","src":"5066:16:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5084:7:12"}],"functionName":{"name":"abi_decode_available_length_string","nodeType":"YulIdentifier","src":"5018:34:12"},"nodeType":"YulFunctionCall","src":"5018:74:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4995:6:12"},"nodeType":"YulFunctionCall","src":"4995:98:12"},"nodeType":"YulExpressionStatement","src":"4995:98:12"},{"nodeType":"YulAssignment","src":"5102:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"5112:5:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:12"}]}]},"name":"abi_decode_tuple_t_struct$_AvailMetadata_$1756_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4335:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4346:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4358:6:12","type":""}],"src":"4268:855:12"},{"body":{"nodeType":"YulBlock","src":"5212:263:12","statements":[{"body":{"nodeType":"YulBlock","src":"5258:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5267:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5270:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5260:6:12"},"nodeType":"YulFunctionCall","src":"5260:12:12"},"nodeType":"YulExpressionStatement","src":"5260:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5233:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"5242:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5229:3:12"},"nodeType":"YulFunctionCall","src":"5229:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"5254:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5225:3:12"},"nodeType":"YulFunctionCall","src":"5225:32:12"},"nodeType":"YulIf","src":"5222:52:12"},{"nodeType":"YulAssignment","src":"5283:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5312:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5293:18:12"},"nodeType":"YulFunctionCall","src":"5293:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5283:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"5331:45:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5361:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5372:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5357:3:12"},"nodeType":"YulFunctionCall","src":"5357:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5344:12:12"},"nodeType":"YulFunctionCall","src":"5344:32:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5335:5:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"5429:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5438:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5441:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5431:6:12"},"nodeType":"YulFunctionCall","src":"5431:12:12"},"nodeType":"YulExpressionStatement","src":"5431:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5398:5:12"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5419:5:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5412:6:12"},"nodeType":"YulFunctionCall","src":"5412:13:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5405:6:12"},"nodeType":"YulFunctionCall","src":"5405:21:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5395:2:12"},"nodeType":"YulFunctionCall","src":"5395:32:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5388:6:12"},"nodeType":"YulFunctionCall","src":"5388:40:12"},"nodeType":"YulIf","src":"5385:60:12"},{"nodeType":"YulAssignment","src":"5454:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"5464:5:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5454:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5170:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5181:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5193:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5201:6:12","type":""}],"src":"5128:347:12"},{"body":{"nodeType":"YulBlock","src":"5610:537:12","statements":[{"body":{"nodeType":"YulBlock","src":"5657:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5666:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5669:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5659:6:12"},"nodeType":"YulFunctionCall","src":"5659:12:12"},"nodeType":"YulExpressionStatement","src":"5659:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5631:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"5640:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5627:3:12"},"nodeType":"YulFunctionCall","src":"5627:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"5652:3:12","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5623:3:12"},"nodeType":"YulFunctionCall","src":"5623:33:12"},"nodeType":"YulIf","src":"5620:53:12"},{"nodeType":"YulAssignment","src":"5682:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5711:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5692:18:12"},"nodeType":"YulFunctionCall","src":"5692:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5682:6:12"}]},{"nodeType":"YulAssignment","src":"5730:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5763:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5774:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5759:3:12"},"nodeType":"YulFunctionCall","src":"5759:18:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5740:18:12"},"nodeType":"YulFunctionCall","src":"5740:38:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5730:6:12"}]},{"nodeType":"YulAssignment","src":"5787:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5814:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5825:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5810:3:12"},"nodeType":"YulFunctionCall","src":"5810:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5797:12:12"},"nodeType":"YulFunctionCall","src":"5797:32:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5787:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"5838:46:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5869:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5880:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5865:3:12"},"nodeType":"YulFunctionCall","src":"5865:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5852:12:12"},"nodeType":"YulFunctionCall","src":"5852:32:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5842:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"5927:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5936:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5939:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5929:6:12"},"nodeType":"YulFunctionCall","src":"5929:12:12"},"nodeType":"YulExpressionStatement","src":"5929:12:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5899:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"5907:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5896:2:12"},"nodeType":"YulFunctionCall","src":"5896:30:12"},"nodeType":"YulIf","src":"5893:50:12"},{"nodeType":"YulVariableDeclaration","src":"5952:32:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5966:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"5977:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5962:3:12"},"nodeType":"YulFunctionCall","src":"5962:22:12"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5956:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"6032:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6041:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6044:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6034:6:12"},"nodeType":"YulFunctionCall","src":"6034:12:12"},"nodeType":"YulExpressionStatement","src":"6034:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6011:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"6015:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6007:3:12"},"nodeType":"YulFunctionCall","src":"6007:13:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6022:7:12"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6003:3:12"},"nodeType":"YulFunctionCall","src":"6003:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5996:6:12"},"nodeType":"YulFunctionCall","src":"5996:35:12"},"nodeType":"YulIf","src":"5993:55:12"},{"nodeType":"YulAssignment","src":"6057:84:12","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6106:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"6110:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6102:3:12"},"nodeType":"YulFunctionCall","src":"6102:11:12"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6128:2:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6115:12:12"},"nodeType":"YulFunctionCall","src":"6115:16:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6133:7:12"}],"functionName":{"name":"abi_decode_available_length_string","nodeType":"YulIdentifier","src":"6067:34:12"},"nodeType":"YulFunctionCall","src":"6067:74:12"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6057:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5552:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5563:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5575:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5583:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5591:6:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5599:6:12","type":""}],"src":"5480:667:12"},{"body":{"nodeType":"YulBlock","src":"6239:173:12","statements":[{"body":{"nodeType":"YulBlock","src":"6285:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6294:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6297:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6287:6:12"},"nodeType":"YulFunctionCall","src":"6287:12:12"},"nodeType":"YulExpressionStatement","src":"6287:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6260:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"6269:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6256:3:12"},"nodeType":"YulFunctionCall","src":"6256:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"6281:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6252:3:12"},"nodeType":"YulFunctionCall","src":"6252:32:12"},"nodeType":"YulIf","src":"6249:52:12"},{"nodeType":"YulAssignment","src":"6310:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6339:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6320:18:12"},"nodeType":"YulFunctionCall","src":"6320:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6310:6:12"}]},{"nodeType":"YulAssignment","src":"6358:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6391:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6402:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6387:3:12"},"nodeType":"YulFunctionCall","src":"6387:18:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6368:18:12"},"nodeType":"YulFunctionCall","src":"6368:38:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6358:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6197:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6208:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6220:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6228:6:12","type":""}],"src":"6152:260:12"},{"body":{"nodeType":"YulBlock","src":"6472:325:12","statements":[{"nodeType":"YulAssignment","src":"6482:22:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6496:1:12","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"6499:4:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6492:3:12"},"nodeType":"YulFunctionCall","src":"6492:12:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6482:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"6513:38:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6543:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"6549:1:12","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6539:3:12"},"nodeType":"YulFunctionCall","src":"6539:12:12"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"6517:18:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"6590:31:12","statements":[{"nodeType":"YulAssignment","src":"6592:27:12","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6606:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"6614:4:12","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6602:3:12"},"nodeType":"YulFunctionCall","src":"6602:17:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6592:6:12"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6570:18:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6563:6:12"},"nodeType":"YulFunctionCall","src":"6563:26:12"},"nodeType":"YulIf","src":"6560:61:12"},{"body":{"nodeType":"YulBlock","src":"6680:111:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6701:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6708:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6713:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6704:3:12"},"nodeType":"YulFunctionCall","src":"6704:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6694:6:12"},"nodeType":"YulFunctionCall","src":"6694:31:12"},"nodeType":"YulExpressionStatement","src":"6694:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6745:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6748:4:12","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6738:6:12"},"nodeType":"YulFunctionCall","src":"6738:15:12"},"nodeType":"YulExpressionStatement","src":"6738:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6773:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6776:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6766:6:12"},"nodeType":"YulFunctionCall","src":"6766:15:12"},"nodeType":"YulExpressionStatement","src":"6766:15:12"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6636:18:12"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6659:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"6667:2:12","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6656:2:12"},"nodeType":"YulFunctionCall","src":"6656:14:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6633:2:12"},"nodeType":"YulFunctionCall","src":"6633:38:12"},"nodeType":"YulIf","src":"6630:161:12"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6452:4:12","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6461:6:12","type":""}],"src":"6417:380:12"},{"body":{"nodeType":"YulBlock","src":"6976:234:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6993:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7004:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6986:6:12"},"nodeType":"YulFunctionCall","src":"6986:21:12"},"nodeType":"YulExpressionStatement","src":"6986:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7027:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7038:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7023:3:12"},"nodeType":"YulFunctionCall","src":"7023:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"7043:2:12","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7016:6:12"},"nodeType":"YulFunctionCall","src":"7016:30:12"},"nodeType":"YulExpressionStatement","src":"7016:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7066:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7077:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7062:3:12"},"nodeType":"YulFunctionCall","src":"7062:18:12"},{"hexValue":"4552433732313a20617070726f76656420717565727920666f72206e6f6e6578","kind":"string","nodeType":"YulLiteral","src":"7082:34:12","type":"","value":"ERC721: approved query for nonex"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7055:6:12"},"nodeType":"YulFunctionCall","src":"7055:62:12"},"nodeType":"YulExpressionStatement","src":"7055:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7137:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7148:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7133:3:12"},"nodeType":"YulFunctionCall","src":"7133:18:12"},{"hexValue":"697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"7153:14:12","type":"","value":"istent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7126:6:12"},"nodeType":"YulFunctionCall","src":"7126:42:12"},"nodeType":"YulExpressionStatement","src":"7126:42:12"},{"nodeType":"YulAssignment","src":"7177:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7189:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7200:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7185:3:12"},"nodeType":"YulFunctionCall","src":"7185:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7177:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6953:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6967:4:12","type":""}],"src":"6802:408:12"},{"body":{"nodeType":"YulBlock","src":"7389:223:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7406:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7417:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7399:6:12"},"nodeType":"YulFunctionCall","src":"7399:21:12"},"nodeType":"YulExpressionStatement","src":"7399:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7440:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7451:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7436:3:12"},"nodeType":"YulFunctionCall","src":"7436:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"7456:2:12","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7429:6:12"},"nodeType":"YulFunctionCall","src":"7429:30:12"},"nodeType":"YulExpressionStatement","src":"7429:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7479:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7490:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7475:3:12"},"nodeType":"YulFunctionCall","src":"7475:18:12"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"7495:34:12","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7468:6:12"},"nodeType":"YulFunctionCall","src":"7468:62:12"},"nodeType":"YulExpressionStatement","src":"7468:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7550:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7561:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7546:3:12"},"nodeType":"YulFunctionCall","src":"7546:18:12"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"7566:3:12","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7539:6:12"},"nodeType":"YulFunctionCall","src":"7539:31:12"},"nodeType":"YulExpressionStatement","src":"7539:31:12"},{"nodeType":"YulAssignment","src":"7579:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7591:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7602:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7587:3:12"},"nodeType":"YulFunctionCall","src":"7587:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7579:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7366:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7380:4:12","type":""}],"src":"7215:397:12"},{"body":{"nodeType":"YulBlock","src":"7791:246:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7808:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7819:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7801:6:12"},"nodeType":"YulFunctionCall","src":"7801:21:12"},"nodeType":"YulExpressionStatement","src":"7801:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7842:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7853:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7838:3:12"},"nodeType":"YulFunctionCall","src":"7838:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"7858:2:12","type":"","value":"56"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7831:6:12"},"nodeType":"YulFunctionCall","src":"7831:30:12"},"nodeType":"YulExpressionStatement","src":"7831:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7881:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7892:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7877:3:12"},"nodeType":"YulFunctionCall","src":"7877:18:12"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77","kind":"string","nodeType":"YulLiteral","src":"7897:34:12","type":"","value":"ERC721: approve caller is not ow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7870:6:12"},"nodeType":"YulFunctionCall","src":"7870:62:12"},"nodeType":"YulExpressionStatement","src":"7870:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7952:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7963:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7948:3:12"},"nodeType":"YulFunctionCall","src":"7948:18:12"},{"hexValue":"6e6572206e6f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"7968:26:12","type":"","value":"ner nor approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7941:6:12"},"nodeType":"YulFunctionCall","src":"7941:54:12"},"nodeType":"YulExpressionStatement","src":"7941:54:12"},{"nodeType":"YulAssignment","src":"8004:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8016:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8027:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8012:3:12"},"nodeType":"YulFunctionCall","src":"8012:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8004:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7768:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7782:4:12","type":""}],"src":"7617:420:12"},{"body":{"nodeType":"YulBlock","src":"8216:239:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8233:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8244:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8226:6:12"},"nodeType":"YulFunctionCall","src":"8226:21:12"},"nodeType":"YulExpressionStatement","src":"8226:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8267:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8278:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8263:3:12"},"nodeType":"YulFunctionCall","src":"8263:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"8283:2:12","type":"","value":"49"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8256:6:12"},"nodeType":"YulFunctionCall","src":"8256:30:12"},"nodeType":"YulExpressionStatement","src":"8256:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8306:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8317:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8302:3:12"},"nodeType":"YulFunctionCall","src":"8302:18:12"},{"hexValue":"4552433732313a207472616e736665722063616c6c6572206973206e6f74206f","kind":"string","nodeType":"YulLiteral","src":"8322:34:12","type":"","value":"ERC721: transfer caller is not o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8295:6:12"},"nodeType":"YulFunctionCall","src":"8295:62:12"},"nodeType":"YulExpressionStatement","src":"8295:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8377:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8388:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8373:3:12"},"nodeType":"YulFunctionCall","src":"8373:18:12"},{"hexValue":"776e6572206e6f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"8393:19:12","type":"","value":"wner nor approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8366:6:12"},"nodeType":"YulFunctionCall","src":"8366:47:12"},"nodeType":"YulExpressionStatement","src":"8366:47:12"},{"nodeType":"YulAssignment","src":"8422:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8434:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8445:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8430:3:12"},"nodeType":"YulFunctionCall","src":"8430:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8422:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8193:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8207:4:12","type":""}],"src":"8042:413:12"},{"body":{"nodeType":"YulBlock","src":"8634:231:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8651:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8662:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8644:6:12"},"nodeType":"YulFunctionCall","src":"8644:21:12"},"nodeType":"YulExpressionStatement","src":"8644:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8685:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8696:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8681:3:12"},"nodeType":"YulFunctionCall","src":"8681:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"8701:2:12","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8674:6:12"},"nodeType":"YulFunctionCall","src":"8674:30:12"},"nodeType":"YulExpressionStatement","src":"8674:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8724:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8735:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8720:3:12"},"nodeType":"YulFunctionCall","src":"8720:18:12"},{"hexValue":"4552433732313a206f776e657220717565727920666f72206e6f6e6578697374","kind":"string","nodeType":"YulLiteral","src":"8740:34:12","type":"","value":"ERC721: owner query for nonexist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8713:6:12"},"nodeType":"YulFunctionCall","src":"8713:62:12"},"nodeType":"YulExpressionStatement","src":"8713:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8795:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8806:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8791:3:12"},"nodeType":"YulFunctionCall","src":"8791:18:12"},{"hexValue":"656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"8811:11:12","type":"","value":"ent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8784:6:12"},"nodeType":"YulFunctionCall","src":"8784:39:12"},"nodeType":"YulExpressionStatement","src":"8784:39:12"},{"nodeType":"YulAssignment","src":"8832:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8844:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8855:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8840:3:12"},"nodeType":"YulFunctionCall","src":"8840:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8832:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8611:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8625:4:12","type":""}],"src":"8460:405:12"},{"body":{"nodeType":"YulBlock","src":"9044:232:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9061:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9072:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9054:6:12"},"nodeType":"YulFunctionCall","src":"9054:21:12"},"nodeType":"YulExpressionStatement","src":"9054:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9095:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9106:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9091:3:12"},"nodeType":"YulFunctionCall","src":"9091:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"9111:2:12","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9084:6:12"},"nodeType":"YulFunctionCall","src":"9084:30:12"},"nodeType":"YulExpressionStatement","src":"9084:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9134:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9145:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9130:3:12"},"nodeType":"YulFunctionCall","src":"9130:18:12"},{"hexValue":"4552433732313a2062616c616e636520717565727920666f7220746865207a65","kind":"string","nodeType":"YulLiteral","src":"9150:34:12","type":"","value":"ERC721: balance query for the ze"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9123:6:12"},"nodeType":"YulFunctionCall","src":"9123:62:12"},"nodeType":"YulExpressionStatement","src":"9123:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9205:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9216:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9201:3:12"},"nodeType":"YulFunctionCall","src":"9201:18:12"},{"hexValue":"726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"9221:12:12","type":"","value":"ro address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9194:6:12"},"nodeType":"YulFunctionCall","src":"9194:40:12"},"nodeType":"YulExpressionStatement","src":"9194:40:12"},{"nodeType":"YulAssignment","src":"9243:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9255:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9266:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9251:3:12"},"nodeType":"YulFunctionCall","src":"9251:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9243:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9021:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9035:4:12","type":""}],"src":"8870:406:12"},{"body":{"nodeType":"YulBlock","src":"9455:182:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9472:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9483:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9465:6:12"},"nodeType":"YulFunctionCall","src":"9465:21:12"},"nodeType":"YulExpressionStatement","src":"9465:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9506:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9517:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9502:3:12"},"nodeType":"YulFunctionCall","src":"9502:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"9522:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9495:6:12"},"nodeType":"YulFunctionCall","src":"9495:30:12"},"nodeType":"YulExpressionStatement","src":"9495:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9545:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9556:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9541:3:12"},"nodeType":"YulFunctionCall","src":"9541:18:12"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"9561:34:12","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9534:6:12"},"nodeType":"YulFunctionCall","src":"9534:62:12"},"nodeType":"YulExpressionStatement","src":"9534:62:12"},{"nodeType":"YulAssignment","src":"9605:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9617:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9628:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9613:3:12"},"nodeType":"YulFunctionCall","src":"9613:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9605:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9432:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9446:4:12","type":""}],"src":"9281:356:12"},{"body":{"nodeType":"YulBlock","src":"9674:95:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9691:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9698:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9703:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9694:3:12"},"nodeType":"YulFunctionCall","src":"9694:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9684:6:12"},"nodeType":"YulFunctionCall","src":"9684:31:12"},"nodeType":"YulExpressionStatement","src":"9684:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9731:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9734:4:12","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9724:6:12"},"nodeType":"YulFunctionCall","src":"9724:15:12"},"nodeType":"YulExpressionStatement","src":"9724:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9755:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9758:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9748:6:12"},"nodeType":"YulFunctionCall","src":"9748:15:12"},"nodeType":"YulExpressionStatement","src":"9748:15:12"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9642:127:12"},{"body":{"nodeType":"YulBlock","src":"9821:88:12","statements":[{"body":{"nodeType":"YulBlock","src":"9852:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9854:16:12"},"nodeType":"YulFunctionCall","src":"9854:18:12"},"nodeType":"YulExpressionStatement","src":"9854:18:12"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9837:5:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9848:1:12","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9844:3:12"},"nodeType":"YulFunctionCall","src":"9844:6:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9834:2:12"},"nodeType":"YulFunctionCall","src":"9834:17:12"},"nodeType":"YulIf","src":"9831:43:12"},{"nodeType":"YulAssignment","src":"9883:20:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9894:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"9901:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9890:3:12"},"nodeType":"YulFunctionCall","src":"9890:13:12"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9883:3:12"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9803:5:12","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9813:3:12","type":""}],"src":"9774:135:12"},{"body":{"nodeType":"YulBlock","src":"10606:557:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10623:3:12"},{"hexValue":"7b","kind":"string","nodeType":"YulLiteral","src":"10628:3:12","type":"","value":"{"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10616:6:12"},"nodeType":"YulFunctionCall","src":"10616:16:12"},"nodeType":"YulExpressionStatement","src":"10616:16:12"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10652:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"10657:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10648:3:12"},"nodeType":"YulFunctionCall","src":"10648:11:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10665:3:12","type":"","value":"177"},{"kind":"number","nodeType":"YulLiteral","src":"10670:22:12","type":"","value":"0x1134b6b0b3b2911d1011"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10661:3:12"},"nodeType":"YulFunctionCall","src":"10661:32:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10641:6:12"},"nodeType":"YulFunctionCall","src":"10641:53:12"},"nodeType":"YulExpressionStatement","src":"10641:53:12"},{"nodeType":"YulVariableDeclaration","src":"10703:27:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10723:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10717:5:12"},"nodeType":"YulFunctionCall","src":"10717:13:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10707:6:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10765:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"10773:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10761:3:12"},"nodeType":"YulFunctionCall","src":"10761:17:12"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10784:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"10789:2:12","type":"","value":"11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10780:3:12"},"nodeType":"YulFunctionCall","src":"10780:12:12"},{"name":"length","nodeType":"YulIdentifier","src":"10794:6:12"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"10739:21:12"},"nodeType":"YulFunctionCall","src":"10739:62:12"},"nodeType":"YulExpressionStatement","src":"10739:62:12"},{"nodeType":"YulVariableDeclaration","src":"10810:26:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10824:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"10829:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10820:3:12"},"nodeType":"YulFunctionCall","src":"10820:16:12"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10814:2:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"10856:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"10860:2:12","type":"","value":"11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10852:3:12"},"nodeType":"YulFunctionCall","src":"10852:11:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10869:3:12","type":"","value":"242"},{"kind":"number","nodeType":"YulLiteral","src":"10874:4:12","type":"","value":"2187"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10865:3:12"},"nodeType":"YulFunctionCall","src":"10865:14:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10845:6:12"},"nodeType":"YulFunctionCall","src":"10845:35:12"},"nodeType":"YulExpressionStatement","src":"10845:35:12"},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"10900:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"10904:2:12","type":"","value":"13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10896:3:12"},"nodeType":"YulFunctionCall","src":"10896:11:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10913:3:12","type":"","value":"185"},{"kind":"number","nodeType":"YulLiteral","src":"10918:20:12","type":"","value":"0x113730b6b2911d1011"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10909:3:12"},"nodeType":"YulFunctionCall","src":"10909:30:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10889:6:12"},"nodeType":"YulFunctionCall","src":"10889:51:12"},"nodeType":"YulExpressionStatement","src":"10889:51:12"},{"nodeType":"YulVariableDeclaration","src":"10949:29:12","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10971:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10965:5:12"},"nodeType":"YulFunctionCall","src":"10965:13:12"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"10953:8:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11013:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"11021:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11009:3:12"},"nodeType":"YulFunctionCall","src":"11009:17:12"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"11032:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"11036:2:12","type":"","value":"22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11028:3:12"},"nodeType":"YulFunctionCall","src":"11028:11:12"},{"name":"length_1","nodeType":"YulIdentifier","src":"11041:8:12"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"10987:21:12"},"nodeType":"YulFunctionCall","src":"10987:63:12"},"nodeType":"YulExpressionStatement","src":"10987:63:12"},{"nodeType":"YulVariableDeclaration","src":"11059:27:12","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"11073:2:12"},{"name":"length_1","nodeType":"YulIdentifier","src":"11077:8:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11069:3:12"},"nodeType":"YulFunctionCall","src":"11069:17:12"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"11063:2:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"11106:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"11110:2:12","type":"","value":"22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11102:3:12"},"nodeType":"YulFunctionCall","src":"11102:11:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11119:3:12","type":"","value":"240"},{"kind":"number","nodeType":"YulLiteral","src":"11124:4:12","type":"","value":"8829"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11115:3:12"},"nodeType":"YulFunctionCall","src":"11115:14:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11095:6:12"},"nodeType":"YulFunctionCall","src":"11095:35:12"},"nodeType":"YulExpressionStatement","src":"11095:35:12"},{"nodeType":"YulAssignment","src":"11139:18:12","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"11150:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"11154:2:12","type":"","value":"24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11146:3:12"},"nodeType":"YulFunctionCall","src":"11146:11:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11139:3:12"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_t_stringliteral_dee71bd900939e5251fa52ed0e7fadcfe3990bd7a5ea546147c85d1b972c64b6_t_string_memory_ptr_t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb_t_stringliteral_92eb2af4325a1f29529688124f0869dc0de3154f09f2a84d73f5c6d33cc3af37_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10574:3:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10579:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10587:6:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10598:3:12","type":""}],"src":"9914:1249:12"},{"body":{"nodeType":"YulBlock","src":"11408:208:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11425:3:12"},{"hexValue":"646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c","kind":"string","nodeType":"YulLiteral","src":"11430:31:12","type":"","value":"data:application/json;base64,"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11418:6:12"},"nodeType":"YulFunctionCall","src":"11418:44:12"},"nodeType":"YulExpressionStatement","src":"11418:44:12"},{"nodeType":"YulVariableDeclaration","src":"11471:27:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11491:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11485:5:12"},"nodeType":"YulFunctionCall","src":"11485:13:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11475:6:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11533:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"11541:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11529:3:12"},"nodeType":"YulFunctionCall","src":"11529:17:12"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11552:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"11557:2:12","type":"","value":"29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11548:3:12"},"nodeType":"YulFunctionCall","src":"11548:12:12"},{"name":"length","nodeType":"YulIdentifier","src":"11562:6:12"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"11507:21:12"},"nodeType":"YulFunctionCall","src":"11507:62:12"},"nodeType":"YulExpressionStatement","src":"11507:62:12"},{"nodeType":"YulAssignment","src":"11578:32:12","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11593:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"11598:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11589:3:12"},"nodeType":"YulFunctionCall","src":"11589:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"11607:2:12","type":"","value":"29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11585:3:12"},"nodeType":"YulFunctionCall","src":"11585:25:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11578:3:12"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11384:3:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11389:6:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11400:3:12","type":""}],"src":"11168:448:12"},{"body":{"nodeType":"YulBlock","src":"11795:228:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11812:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11823:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11805:6:12"},"nodeType":"YulFunctionCall","src":"11805:21:12"},"nodeType":"YulExpressionStatement","src":"11805:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11846:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11857:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11842:3:12"},"nodeType":"YulFunctionCall","src":"11842:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"11862:2:12","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11835:6:12"},"nodeType":"YulFunctionCall","src":"11835:30:12"},"nodeType":"YulExpressionStatement","src":"11835:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11885:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11896:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11881:3:12"},"nodeType":"YulFunctionCall","src":"11881:18:12"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"11901:34:12","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11874:6:12"},"nodeType":"YulFunctionCall","src":"11874:62:12"},"nodeType":"YulExpressionStatement","src":"11874:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11956:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11967:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11952:3:12"},"nodeType":"YulFunctionCall","src":"11952:18:12"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"11972:8:12","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11945:6:12"},"nodeType":"YulFunctionCall","src":"11945:36:12"},"nodeType":"YulExpressionStatement","src":"11945:36:12"},{"nodeType":"YulAssignment","src":"11990:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12002:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12013:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11998:3:12"},"nodeType":"YulFunctionCall","src":"11998:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11990:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11772:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11786:4:12","type":""}],"src":"11621:402:12"},{"body":{"nodeType":"YulBlock","src":"12202:234:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12219:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12230:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12212:6:12"},"nodeType":"YulFunctionCall","src":"12212:21:12"},"nodeType":"YulExpressionStatement","src":"12212:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12253:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12264:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12249:3:12"},"nodeType":"YulFunctionCall","src":"12249:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"12269:2:12","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12242:6:12"},"nodeType":"YulFunctionCall","src":"12242:30:12"},"nodeType":"YulExpressionStatement","src":"12242:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12292:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12303:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12288:3:12"},"nodeType":"YulFunctionCall","src":"12288:18:12"},{"hexValue":"4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578","kind":"string","nodeType":"YulLiteral","src":"12308:34:12","type":"","value":"ERC721: operator query for nonex"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12281:6:12"},"nodeType":"YulFunctionCall","src":"12281:62:12"},"nodeType":"YulExpressionStatement","src":"12281:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12363:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12374:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12359:3:12"},"nodeType":"YulFunctionCall","src":"12359:18:12"},{"hexValue":"697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"12379:14:12","type":"","value":"istent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12352:6:12"},"nodeType":"YulFunctionCall","src":"12352:42:12"},"nodeType":"YulExpressionStatement","src":"12352:42:12"},{"nodeType":"YulAssignment","src":"12403:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12415:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12426:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12411:3:12"},"nodeType":"YulFunctionCall","src":"12411:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12403:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12179:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12193:4:12","type":""}],"src":"12028:408:12"},{"body":{"nodeType":"YulBlock","src":"12615:227:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12632:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12643:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12625:6:12"},"nodeType":"YulFunctionCall","src":"12625:21:12"},"nodeType":"YulExpressionStatement","src":"12625:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12666:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12677:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12662:3:12"},"nodeType":"YulFunctionCall","src":"12662:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"12682:2:12","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12655:6:12"},"nodeType":"YulFunctionCall","src":"12655:30:12"},"nodeType":"YulExpressionStatement","src":"12655:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12705:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12716:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12701:3:12"},"nodeType":"YulFunctionCall","src":"12701:18:12"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"12721:34:12","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12694:6:12"},"nodeType":"YulFunctionCall","src":"12694:62:12"},"nodeType":"YulExpressionStatement","src":"12694:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12776:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12787:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12772:3:12"},"nodeType":"YulFunctionCall","src":"12772:18:12"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"12792:7:12","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12765:6:12"},"nodeType":"YulFunctionCall","src":"12765:35:12"},"nodeType":"YulExpressionStatement","src":"12765:35:12"},{"nodeType":"YulAssignment","src":"12809:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12821:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12832:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12817:3:12"},"nodeType":"YulFunctionCall","src":"12817:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12809:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12592:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12606:4:12","type":""}],"src":"12441:401:12"},{"body":{"nodeType":"YulBlock","src":"13021:226:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13038:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13049:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13031:6:12"},"nodeType":"YulFunctionCall","src":"13031:21:12"},"nodeType":"YulExpressionStatement","src":"13031:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13072:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13083:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13068:3:12"},"nodeType":"YulFunctionCall","src":"13068:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"13088:2:12","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13061:6:12"},"nodeType":"YulFunctionCall","src":"13061:30:12"},"nodeType":"YulExpressionStatement","src":"13061:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13111:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13122:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13107:3:12"},"nodeType":"YulFunctionCall","src":"13107:18:12"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"13127:34:12","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13100:6:12"},"nodeType":"YulFunctionCall","src":"13100:62:12"},"nodeType":"YulExpressionStatement","src":"13100:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13182:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13193:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13178:3:12"},"nodeType":"YulFunctionCall","src":"13178:18:12"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"13198:6:12","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13171:6:12"},"nodeType":"YulFunctionCall","src":"13171:34:12"},"nodeType":"YulExpressionStatement","src":"13171:34:12"},{"nodeType":"YulAssignment","src":"13214:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13226:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13237:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13222:3:12"},"nodeType":"YulFunctionCall","src":"13222:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13214:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12998:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13012:4:12","type":""}],"src":"12847:400:12"},{"body":{"nodeType":"YulBlock","src":"13301:76:12","statements":[{"body":{"nodeType":"YulBlock","src":"13323:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13325:16:12"},"nodeType":"YulFunctionCall","src":"13325:18:12"},"nodeType":"YulExpressionStatement","src":"13325:18:12"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13317:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"13320:1:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13314:2:12"},"nodeType":"YulFunctionCall","src":"13314:8:12"},"nodeType":"YulIf","src":"13311:34:12"},{"nodeType":"YulAssignment","src":"13354:17:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13366:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"13369:1:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13362:3:12"},"nodeType":"YulFunctionCall","src":"13362:9:12"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"13354:4:12"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13283:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"13286:1:12","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"13292:4:12","type":""}],"src":"13252:125:12"},{"body":{"nodeType":"YulBlock","src":"13430:80:12","statements":[{"body":{"nodeType":"YulBlock","src":"13457:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13459:16:12"},"nodeType":"YulFunctionCall","src":"13459:18:12"},"nodeType":"YulExpressionStatement","src":"13459:18:12"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13446:1:12"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"13453:1:12"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13449:3:12"},"nodeType":"YulFunctionCall","src":"13449:6:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13443:2:12"},"nodeType":"YulFunctionCall","src":"13443:13:12"},"nodeType":"YulIf","src":"13440:39:12"},{"nodeType":"YulAssignment","src":"13488:16:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13499:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"13502:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13495:3:12"},"nodeType":"YulFunctionCall","src":"13495:9:12"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"13488:3:12"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13413:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"13416:1:12","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"13422:3:12","type":""}],"src":"13382:128:12"},{"body":{"nodeType":"YulBlock","src":"13689:182:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13706:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13717:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13699:6:12"},"nodeType":"YulFunctionCall","src":"13699:21:12"},"nodeType":"YulExpressionStatement","src":"13699:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13740:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13751:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13736:3:12"},"nodeType":"YulFunctionCall","src":"13736:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"13756:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13729:6:12"},"nodeType":"YulFunctionCall","src":"13729:30:12"},"nodeType":"YulExpressionStatement","src":"13729:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13779:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13790:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13775:3:12"},"nodeType":"YulFunctionCall","src":"13775:18:12"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"13795:34:12","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13768:6:12"},"nodeType":"YulFunctionCall","src":"13768:62:12"},"nodeType":"YulExpressionStatement","src":"13768:62:12"},{"nodeType":"YulAssignment","src":"13839:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13851:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13862:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13847:3:12"},"nodeType":"YulFunctionCall","src":"13847:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13839:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13666:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13680:4:12","type":""}],"src":"13515:356:12"},{"body":{"nodeType":"YulBlock","src":"14050:178:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14067:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14078:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14060:6:12"},"nodeType":"YulFunctionCall","src":"14060:21:12"},"nodeType":"YulExpressionStatement","src":"14060:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14101:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14112:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14097:3:12"},"nodeType":"YulFunctionCall","src":"14097:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"14117:2:12","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14090:6:12"},"nodeType":"YulFunctionCall","src":"14090:30:12"},"nodeType":"YulExpressionStatement","src":"14090:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14140:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14151:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14136:3:12"},"nodeType":"YulFunctionCall","src":"14136:18:12"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"14156:30:12","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14129:6:12"},"nodeType":"YulFunctionCall","src":"14129:58:12"},"nodeType":"YulExpressionStatement","src":"14129:58:12"},{"nodeType":"YulAssignment","src":"14196:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14208:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14219:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14204:3:12"},"nodeType":"YulFunctionCall","src":"14204:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14196:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14027:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14041:4:12","type":""}],"src":"13876:352:12"},{"body":{"nodeType":"YulBlock","src":"14407:175:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14424:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14435:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14417:6:12"},"nodeType":"YulFunctionCall","src":"14417:21:12"},"nodeType":"YulExpressionStatement","src":"14417:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14458:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14469:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14454:3:12"},"nodeType":"YulFunctionCall","src":"14454:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"14474:2:12","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14447:6:12"},"nodeType":"YulFunctionCall","src":"14447:30:12"},"nodeType":"YulExpressionStatement","src":"14447:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14497:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14508:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14493:3:12"},"nodeType":"YulFunctionCall","src":"14493:18:12"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"14513:27:12","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14486:6:12"},"nodeType":"YulFunctionCall","src":"14486:55:12"},"nodeType":"YulExpressionStatement","src":"14486:55:12"},{"nodeType":"YulAssignment","src":"14550:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14562:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14573:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14558:3:12"},"nodeType":"YulFunctionCall","src":"14558:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14550:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14384:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14398:4:12","type":""}],"src":"14233:349:12"},{"body":{"nodeType":"YulBlock","src":"14761:240:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14778:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14789:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14771:6:12"},"nodeType":"YulFunctionCall","src":"14771:21:12"},"nodeType":"YulExpressionStatement","src":"14771:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14812:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14823:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14808:3:12"},"nodeType":"YulFunctionCall","src":"14808:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"14828:2:12","type":"","value":"50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14801:6:12"},"nodeType":"YulFunctionCall","src":"14801:30:12"},"nodeType":"YulExpressionStatement","src":"14801:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14851:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14862:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14847:3:12"},"nodeType":"YulFunctionCall","src":"14847:18:12"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"14867:34:12","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14840:6:12"},"nodeType":"YulFunctionCall","src":"14840:62:12"},"nodeType":"YulExpressionStatement","src":"14840:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14922:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14933:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14918:3:12"},"nodeType":"YulFunctionCall","src":"14918:18:12"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"14938:20:12","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14911:6:12"},"nodeType":"YulFunctionCall","src":"14911:48:12"},"nodeType":"YulExpressionStatement","src":"14911:48:12"},{"nodeType":"YulAssignment","src":"14968:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14980:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14991:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14976:3:12"},"nodeType":"YulFunctionCall","src":"14976:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14968:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14738:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14752:4:12","type":""}],"src":"14587:414:12"},{"body":{"nodeType":"YulBlock","src":"15052:171:12","statements":[{"body":{"nodeType":"YulBlock","src":"15083:111:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15104:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15111:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"15116:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15107:3:12"},"nodeType":"YulFunctionCall","src":"15107:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15097:6:12"},"nodeType":"YulFunctionCall","src":"15097:31:12"},"nodeType":"YulExpressionStatement","src":"15097:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15148:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15151:4:12","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15141:6:12"},"nodeType":"YulFunctionCall","src":"15141:15:12"},"nodeType":"YulExpressionStatement","src":"15141:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15176:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15179:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15169:6:12"},"nodeType":"YulFunctionCall","src":"15169:15:12"},"nodeType":"YulExpressionStatement","src":"15169:15:12"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15072:1:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15065:6:12"},"nodeType":"YulFunctionCall","src":"15065:9:12"},"nodeType":"YulIf","src":"15062:132:12"},{"nodeType":"YulAssignment","src":"15203:14:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15212:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"15215:1:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15208:3:12"},"nodeType":"YulFunctionCall","src":"15208:9:12"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"15203:1:12"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15037:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"15040:1:12","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"15046:1:12","type":""}],"src":"15006:217:12"},{"body":{"nodeType":"YulBlock","src":"15280:116:12","statements":[{"body":{"nodeType":"YulBlock","src":"15339:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15341:16:12"},"nodeType":"YulFunctionCall","src":"15341:18:12"},"nodeType":"YulExpressionStatement","src":"15341:18:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15311:1:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15304:6:12"},"nodeType":"YulFunctionCall","src":"15304:9:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15297:6:12"},"nodeType":"YulFunctionCall","src":"15297:17:12"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15319:1:12"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15330:1:12","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15326:3:12"},"nodeType":"YulFunctionCall","src":"15326:6:12"},{"name":"x","nodeType":"YulIdentifier","src":"15334:1:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15322:3:12"},"nodeType":"YulFunctionCall","src":"15322:14:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15316:2:12"},"nodeType":"YulFunctionCall","src":"15316:21:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15293:3:12"},"nodeType":"YulFunctionCall","src":"15293:45:12"},"nodeType":"YulIf","src":"15290:71:12"},{"nodeType":"YulAssignment","src":"15370:20:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15385:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"15388:1:12"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15381:3:12"},"nodeType":"YulFunctionCall","src":"15381:9:12"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"15370:7:12"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15259:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"15262:1:12","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"15268:7:12","type":""}],"src":"15228:168:12"},{"body":{"nodeType":"YulBlock","src":"15604:286:12","statements":[{"nodeType":"YulVariableDeclaration","src":"15614:29:12","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15632:3:12","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"15637:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15628:3:12"},"nodeType":"YulFunctionCall","src":"15628:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"15641:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15624:3:12"},"nodeType":"YulFunctionCall","src":"15624:19:12"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15618:2:12","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15659:9:12"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15674:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"15682:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15670:3:12"},"nodeType":"YulFunctionCall","src":"15670:15:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15652:6:12"},"nodeType":"YulFunctionCall","src":"15652:34:12"},"nodeType":"YulExpressionStatement","src":"15652:34:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15706:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15717:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15702:3:12"},"nodeType":"YulFunctionCall","src":"15702:18:12"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15726:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"15734:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15722:3:12"},"nodeType":"YulFunctionCall","src":"15722:15:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15695:6:12"},"nodeType":"YulFunctionCall","src":"15695:43:12"},"nodeType":"YulExpressionStatement","src":"15695:43:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15758:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15769:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15754:3:12"},"nodeType":"YulFunctionCall","src":"15754:18:12"},{"name":"value2","nodeType":"YulIdentifier","src":"15774:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15747:6:12"},"nodeType":"YulFunctionCall","src":"15747:34:12"},"nodeType":"YulExpressionStatement","src":"15747:34:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15801:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15812:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15797:3:12"},"nodeType":"YulFunctionCall","src":"15797:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"15817:3:12","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15790:6:12"},"nodeType":"YulFunctionCall","src":"15790:31:12"},"nodeType":"YulExpressionStatement","src":"15790:31:12"},{"nodeType":"YulAssignment","src":"15830:54:12","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"15856:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15868:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15879:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15864:3:12"},"nodeType":"YulFunctionCall","src":"15864:19:12"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"15838:17:12"},"nodeType":"YulFunctionCall","src":"15838:46:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15830:4:12"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15549:9:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15560:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15568:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15576:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15584:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15595:4:12","type":""}],"src":"15401:489:12"},{"body":{"nodeType":"YulBlock","src":"15975:169:12","statements":[{"body":{"nodeType":"YulBlock","src":"16021:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16030:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16033:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16023:6:12"},"nodeType":"YulFunctionCall","src":"16023:12:12"},"nodeType":"YulExpressionStatement","src":"16023:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15996:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"16005:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15992:3:12"},"nodeType":"YulFunctionCall","src":"15992:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"16017:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15988:3:12"},"nodeType":"YulFunctionCall","src":"15988:32:12"},"nodeType":"YulIf","src":"15985:52:12"},{"nodeType":"YulVariableDeclaration","src":"16046:29:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16065:9:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16059:5:12"},"nodeType":"YulFunctionCall","src":"16059:16:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"16050:5:12","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16108:5:12"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"16084:23:12"},"nodeType":"YulFunctionCall","src":"16084:30:12"},"nodeType":"YulExpressionStatement","src":"16084:30:12"},{"nodeType":"YulAssignment","src":"16123:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"16133:5:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16123:6:12"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15941:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15952:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15964:6:12","type":""}],"src":"15895:249:12"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_string_memory_ptr__to_t_bytes32_t_bytes32_t_string_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 96)\n        tail := abi_encode_string(value2, add(headStart, 96))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x60)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_struct$_AvailMetadata_$1756_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if slt(sub(dataEnd, _2), 0x60) { revert(0, 0) }\n        let value := allocate_memory()\n        mstore(value, calldataload(_2))\n        mstore(add(value, 32), calldataload(add(_2, 32)))\n        let offset_1 := calldataload(add(_2, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let _3 := add(_2, offset_1)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        mstore(add(value, 64), abi_decode_available_length_string(add(_3, 32), calldataload(_3), dataEnd))\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: approved query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not ow\")\n        mstore(add(headStart, 96), \"ner nor approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC721: transfer caller is not o\")\n        mstore(add(headStart, 96), \"wner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: owner query for nonexist\")\n        mstore(add(headStart, 96), \"ent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC721: balance query for the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_t_stringliteral_dee71bd900939e5251fa52ed0e7fadcfe3990bd7a5ea546147c85d1b972c64b6_t_string_memory_ptr_t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb_t_stringliteral_92eb2af4325a1f29529688124f0869dc0de3154f09f2a84d73f5c6d33cc3af37_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"{\")\n        mstore(add(pos, 1), shl(177, 0x1134b6b0b3b2911d1011))\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 11), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 11), shl(242, 2187))\n        mstore(add(_1, 13), shl(185, 0x113730b6b2911d1011))\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 22), length_1)\n        let _2 := add(_1, length_1)\n        mstore(add(_2, 22), shl(240, 8829))\n        end := add(_2, 24)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"data:application/json;base64,\")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 29), length)\n        end := add(add(pos, length), 29)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: operator query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC721: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC721: token already minted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}","id":12,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101115760003560e01c806370a08231116100ad578063a22cb46511610071578063a22cb4651461024c578063b88d4fde1461025f578063c87b56dd14610272578063e985e9c514610285578063f2fde38b1461029857600080fd5b806370a0823114610205578063715018a6146102185780638b3f1736146102205780638da5cb5b1461023357806395d89b411461024457600080fd5b806301ffc9a71461011657806306fdde031461013e578063081812fc14610153578063095ea7b31461017e57806323b872dd1461019357806342842e0e146101a657806362a428d5146101b95780636352211e146101db5780636e79bbf6146101ee575b600080fd5b6101296101243660046112dc565b6102ab565b60405190151581526020015b60405180910390f35b6101466102bc565b6040516101359190611358565b61016661016136600461136b565b61034e565b6040516001600160a01b039091168152602001610135565b61019161018c3660046113a0565b6103db565b005b6101916101a13660046113ca565b6104ec565b6101916101b43660046113ca565b61051d565b6101cc6101c736600461136b565b610538565b60405161013593929190611406565b6101666101e936600461136b565b6105e3565b6101f760075481565b604051908152602001610135565b6101f761021336600461142e565b61065a565b6101916106e1565b61019161022e3660046114fe565b610717565b6006546001600160a01b0316610166565b6101466107d3565b61019161025a366004611596565b6107e2565b61019161026d3660046115d2565b6107f1565b61014661028036600461136b565b610829565b61012961029336600461164e565b61093f565b6101916102a636600461142e565b61096d565b60006102b682610a08565b92915050565b6060600080546102cb90611681565b80601f01602080910402602001604051908101604052809291908181526020018280546102f790611681565b80156103445780601f1061031957610100808354040283529160200191610344565b820191906000526020600020905b81548152906001019060200180831161032757829003601f168201915b5050505050905090565b600061035982610a58565b6103bf5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103e6826105e3565b9050806001600160a01b0316836001600160a01b031614156104545760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103b6565b336001600160a01b03821614806104705750610470813361093f565b6104dd5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b60648201526084016103b6565b6104e78383610a75565b505050565b6104f63382610ae3565b6105125760405162461bcd60e51b81526004016103b6906116bc565b6104e7838383610bad565b6104e7838383604051806020016040528060008152506107f1565b6008602052600090815260409020805460018201546002830180549293919261056090611681565b80601f016020809104026020016040519081016040528092919081815260200182805461058c90611681565b80156105d95780601f106105ae576101008083540402835291602001916105d9565b820191906000526020600020905b8154815290600101906020018083116105bc57829003601f168201915b5050505050905083565b6000818152600260205260408120546001600160a01b0316806102b65760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103b6565b60006001600160a01b0382166106c55760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103b6565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b0316331461070b5760405162461bcd60e51b81526004016103b69061170d565b6107156000610d49565b565b6006546001600160a01b031633146107415760405162461bcd60e51b81526004016103b69061170d565b600780546000918261075283611758565b9091555082516000828152600860209081526040918290209283558086015160018401559085015180519394506107919360029093019291019061122d565b5061079c3382610d9b565b6040518181527fa334d01adfad3b6825eb093754e05bf8024eff7dee52c43fd93195ebe877a6649060200160405180910390a15050565b6060600180546102cb90611681565b6107ed338383610ece565b5050565b6107fb3383610ae3565b6108175760405162461bcd60e51b81526004016103b6906116bc565b61082384848484610f99565b50505050565b606060006040518060800160405280604381526020016119946043913960008481526008602052604081206002018054929350909161086790611681565b80601f016020809104026020016040519081016040528092919081815260200182805461089390611681565b80156108e05780601f106108b5576101008083540402835291602001916108e0565b820191906000526020600020905b8154815290600101906020018083116108c357829003601f168201915b50505050509050600082826040516020016108fc929190611773565b604051602081830303815290604052905061091681610fcc565b60405160200161092691906117f2565b6040516020818303038152906040529350505050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6006546001600160a01b031633146109975760405162461bcd60e51b81526004016103b69061170d565b6001600160a01b0381166109fc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103b6565b610a0581610d49565b50565b60006001600160e01b031982166380ac58cd60e01b1480610a3957506001600160e01b03198216635b5e139f60e01b145b806102b657506301ffc9a760e01b6001600160e01b03198316146102b6565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610aaa826105e3565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610aee82610a58565b610b4f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103b6565b6000610b5a836105e3565b9050806001600160a01b0316846001600160a01b03161480610b955750836001600160a01b0316610b8a8461034e565b6001600160a01b0316145b80610ba55750610ba5818561093f565b949350505050565b826001600160a01b0316610bc0826105e3565b6001600160a01b031614610c245760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016103b6565b6001600160a01b038216610c865760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103b6565b610c91600082610a75565b6001600160a01b0383166000908152600360205260408120805460019290610cba908490611837565b90915550506001600160a01b0382166000908152600360205260408120805460019290610ce890849061184e565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610df15760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103b6565b610dfa81610a58565b15610e475760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103b6565b6001600160a01b0382166000908152600360205260408120805460019290610e7090849061184e565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b816001600160a01b0316836001600160a01b03161415610f2c5760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b60448201526064016103b6565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610fa4848484610bad565b610fb084848484611120565b6108235760405162461bcd60e51b81526004016103b690611866565b6060815160001415610fec57505060408051602081019091526000815290565b6000604051806060016040528060408152602001611954604091399050600060038451600261101b919061184e565b61102591906118b8565b6110309060046118da565b67ffffffffffffffff81111561104857611048611449565b6040519080825280601f01601f191660200182016040528015611072576020820181803683370190505b509050600182016020820185865187015b808210156110de576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250611083565b50506003865106600181146110fa576002811461110d57611115565b603d6001830353603d6002830353611115565b603d60018303535b509195945050505050565b60006001600160a01b0384163b1561122257604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906111649033908990889088906004016118f9565b602060405180830381600087803b15801561117e57600080fd5b505af19250505080156111ae575060408051601f3d908101601f191682019092526111ab91810190611936565b60015b611208573d8080156111dc576040519150601f19603f3d011682016040523d82523d6000602084013e6111e1565b606091505b5080516112005760405162461bcd60e51b81526004016103b690611866565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610ba5565b506001949350505050565b82805461123990611681565b90600052602060002090601f01602090048101928261125b57600085556112a1565b82601f1061127457805160ff19168380011785556112a1565b828001600101855582156112a1579182015b828111156112a1578251825591602001919060010190611286565b506112ad9291506112b1565b5090565b5b808211156112ad57600081556001016112b2565b6001600160e01b031981168114610a0557600080fd5b6000602082840312156112ee57600080fd5b81356112f9816112c6565b9392505050565b60005b8381101561131b578181015183820152602001611303565b838111156108235750506000910152565b60008151808452611344816020860160208601611300565b601f01601f19169290920160200192915050565b6020815260006112f9602083018461132c565b60006020828403121561137d57600080fd5b5035919050565b80356001600160a01b038116811461139b57600080fd5b919050565b600080604083850312156113b357600080fd5b6113bc83611384565b946020939093013593505050565b6000806000606084860312156113df57600080fd5b6113e884611384565b92506113f660208501611384565b9150604084013590509250925092565b838152826020820152606060408201526000611425606083018461132c565b95945050505050565b60006020828403121561144057600080fd5b6112f982611384565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561148257611482611449565b60405290565b600067ffffffffffffffff808411156114a3576114a3611449565b604051601f8501601f19908116603f011681019082821181831017156114cb576114cb611449565b816040528093508581528686860111156114e457600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561151057600080fd5b813567ffffffffffffffff8082111561152857600080fd5b908301906060828603121561153c57600080fd5b61154461145f565b823581526020830135602082015260408301358281111561156457600080fd5b80840193505085601f84011261157957600080fd5b61158886843560208601611488565b604082015295945050505050565b600080604083850312156115a957600080fd5b6115b283611384565b9150602083013580151581146115c757600080fd5b809150509250929050565b600080600080608085870312156115e857600080fd5b6115f185611384565b93506115ff60208601611384565b925060408501359150606085013567ffffffffffffffff81111561162257600080fd5b8501601f8101871361163357600080fd5b61164287823560208401611488565b91505092959194509250565b6000806040838503121561166157600080fd5b61166a83611384565b915061167860208401611384565b90509250929050565b600181811c9082168061169557607f821691505b602082108114156116b657634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600060001982141561176c5761176c611742565b5060010190565b607b60f81b8152691134b6b0b3b2911d101160b11b600182015282516000906117a381600b850160208801611300565b61088b60f21b600b9184019182015268113730b6b2911d101160b91b600d82015283516117d7816016840160208801611300565b61227d60f01b60169290910191820152601801949350505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081526000825161182a81601d850160208701611300565b91909101601d0192915050565b60008282101561184957611849611742565b500390565b6000821982111561186157611861611742565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000826118d557634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156118f4576118f4611742565b500290565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061192c9083018461132c565b9695505050505050565b60006020828403121561194857600080fd5b81516112f9816112c656fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f6f70656e7365612d70726f642e61707073706f742e636f6d2f70756666732f312e706e67a2646970667358221220c4132cfe79a26ddc64c4a1a53612d9ac12022ebc927d122d4cc695182321d7d064736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x111 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x8B3F1736 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x62A428D5 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x6E79BBF6 EQ PUSH2 0x1EE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x129 PUSH2 0x124 CALLDATASIZE PUSH1 0x4 PUSH2 0x12DC JUMP JUMPDEST PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x146 PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x1358 JUMP JUMPDEST PUSH2 0x166 PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0x136B JUMP JUMPDEST PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0x13A0 JUMP JUMPDEST PUSH2 0x3DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x191 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x13CA JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x191 PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x13CA JUMP JUMPDEST PUSH2 0x51D JUMP JUMPDEST PUSH2 0x1CC PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x136B JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1406 JUMP JUMPDEST PUSH2 0x166 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x136B JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST PUSH2 0x1F7 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x65A JUMP JUMPDEST PUSH2 0x191 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0x14FE JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x166 JUMP JUMPDEST PUSH2 0x146 PUSH2 0x7D3 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x1596 JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0x15D2 JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x146 PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x136B JUMP JUMPDEST PUSH2 0x829 JUMP JUMPDEST PUSH2 0x129 PUSH2 0x293 CALLDATASIZE PUSH1 0x4 PUSH2 0x164E JUMP JUMPDEST PUSH2 0x93F JUMP JUMPDEST PUSH2 0x191 PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x96D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B6 DUP3 PUSH2 0xA08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x2CB SWAP1 PUSH2 0x1681 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F7 SWAP1 PUSH2 0x1681 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x344 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x319 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x344 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x327 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x359 DUP3 PUSH2 0xA58 JUMP JUMPDEST PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E6 DUP3 PUSH2 0x5E3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x454 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B6 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x470 JUMPI POP PUSH2 0x470 DUP2 CALLER PUSH2 0x93F JUMP JUMPDEST PUSH2 0x4DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x1B995C881B9BDC88185C1C1C9BDD995908199BDC88185B1B PUSH1 0x42 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B6 JUMP JUMPDEST PUSH2 0x4E7 DUP4 DUP4 PUSH2 0xA75 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4F6 CALLER DUP3 PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x512 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B6 SWAP1 PUSH2 0x16BC JUMP JUMPDEST PUSH2 0x4E7 DUP4 DUP4 DUP4 PUSH2 0xBAD JUMP JUMPDEST PUSH2 0x4E7 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH2 0x560 SWAP1 PUSH2 0x1681 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x58C SWAP1 PUSH2 0x1681 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x2B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B6 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x70B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B6 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x715 PUSH1 0x0 PUSH2 0xD49 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x741 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B6 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 PUSH2 0x752 DUP4 PUSH2 0x1758 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP3 MLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 DUP4 SSTORE DUP1 DUP7 ADD MLOAD PUSH1 0x1 DUP5 ADD SSTORE SWAP1 DUP6 ADD MLOAD DUP1 MLOAD SWAP4 SWAP5 POP PUSH2 0x791 SWAP4 PUSH1 0x2 SWAP1 SWAP4 ADD SWAP3 SWAP2 ADD SWAP1 PUSH2 0x122D JUMP JUMPDEST POP PUSH2 0x79C CALLER DUP3 PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xA334D01ADFAD3B6825EB093754E05BF8024EFF7DEE52C43FD93195EBE877A664 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2CB SWAP1 PUSH2 0x1681 JUMP JUMPDEST PUSH2 0x7ED CALLER DUP4 DUP4 PUSH2 0xECE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7FB CALLER DUP4 PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x817 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B6 SWAP1 PUSH2 0x16BC JUMP JUMPDEST PUSH2 0x823 DUP5 DUP5 DUP5 DUP5 PUSH2 0xF99 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x43 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1994 PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH2 0x867 SWAP1 PUSH2 0x1681 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x893 SWAP1 PUSH2 0x1681 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8E0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8B5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8E0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8C3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8FC SWAP3 SWAP2 SWAP1 PUSH2 0x1773 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x916 DUP2 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x926 SWAP2 SWAP1 PUSH2 0x17F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x997 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B6 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B6 JUMP JUMPDEST PUSH2 0xA05 DUP2 PUSH2 0xD49 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xA39 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2B6 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x2B6 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0xAAA DUP3 PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEE DUP3 PUSH2 0xA58 JUMP JUMPDEST PUSH2 0xB4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5A DUP4 PUSH2 0x5E3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xB95 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB8A DUP5 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0xBA5 JUMPI POP PUSH2 0xBA5 DUP2 DUP6 PUSH2 0x93F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBC0 DUP3 PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B6 JUMP JUMPDEST PUSH2 0xC91 PUSH1 0x0 DUP3 PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xCBA SWAP1 DUP5 SWAP1 PUSH2 0x1837 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xCE8 SWAP1 DUP5 SWAP1 PUSH2 0x184E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B6 JUMP JUMPDEST PUSH2 0xDFA DUP2 PUSH2 0xA58 JUMP JUMPDEST ISZERO PUSH2 0xE47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xE70 SWAP1 DUP5 SWAP1 PUSH2 0x184E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xF2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x22A9219B99189D1030B8383937BB32903A379031B0B63632B9 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xFA4 DUP5 DUP5 DUP5 PUSH2 0xBAD JUMP JUMPDEST PUSH2 0xFB0 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1120 JUMP JUMPDEST PUSH2 0x823 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B6 SWAP1 PUSH2 0x1866 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xFEC JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1954 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP5 MLOAD PUSH1 0x2 PUSH2 0x101B SWAP2 SWAP1 PUSH2 0x184E JUMP JUMPDEST PUSH2 0x1025 SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH2 0x1030 SWAP1 PUSH1 0x4 PUSH2 0x18DA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1048 JUMPI PUSH2 0x1048 PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1072 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP3 ADD PUSH1 0x20 DUP3 ADD DUP6 DUP7 MLOAD DUP8 ADD JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x10DE JUMPI PUSH1 0x3 DUP3 ADD SWAP2 POP DUP2 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP5 MSTORE8 POP PUSH1 0x1 DUP4 ADD SWAP3 POP PUSH2 0x1083 JUMP JUMPDEST POP POP PUSH1 0x3 DUP7 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x10FA JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x110D JUMPI PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 PUSH1 0x3D PUSH1 0x2 DUP4 SUB MSTORE8 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1222 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1164 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x18F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x117E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11AE JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x11AB SWAP2 DUP2 ADD SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1208 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x11DC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11E1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x1200 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B6 SWAP1 PUSH2 0x1866 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xBA5 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1239 SWAP1 PUSH2 0x1681 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x125B JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x12A1 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1274 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x12A1 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x12A1 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x12A1 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1286 JUMP JUMPDEST POP PUSH2 0x12AD SWAP3 SWAP2 POP PUSH2 0x12B1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x12AD JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x12B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xA05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x12F9 DUP2 PUSH2 0x12C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x131B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1303 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x823 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1344 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x12F9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x132C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x137D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x139B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13BC DUP4 PUSH2 0x1384 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E8 DUP5 PUSH2 0x1384 JUMP JUMPDEST SWAP3 POP PUSH2 0x13F6 PUSH1 0x20 DUP6 ADD PUSH2 0x1384 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1425 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x132C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12F9 DUP3 PUSH2 0x1384 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1482 JUMPI PUSH2 0x1482 PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x14A3 JUMPI PUSH2 0x14A3 PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x14CB JUMPI PUSH2 0x14CB PUSH2 0x1449 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x14E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x60 DUP3 DUP7 SUB SLT ISZERO PUSH2 0x153C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1544 PUSH2 0x145F JUMP JUMPDEST DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x1564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 ADD SWAP4 POP POP DUP6 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1588 DUP7 DUP5 CALLDATALOAD PUSH1 0x20 DUP7 ADD PUSH2 0x1488 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15B2 DUP4 PUSH2 0x1384 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x15C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x15E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15F1 DUP6 PUSH2 0x1384 JUMP JUMPDEST SWAP4 POP PUSH2 0x15FF PUSH1 0x20 DUP7 ADD PUSH2 0x1384 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1622 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1642 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1488 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x166A DUP4 PUSH2 0x1384 JUMP JUMPDEST SWAP2 POP PUSH2 0x1678 PUSH1 0x20 DUP5 ADD PUSH2 0x1384 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1695 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x16B6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x176C JUMPI PUSH2 0x176C PUSH2 0x1742 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x7B PUSH1 0xF8 SHL DUP2 MSTORE PUSH10 0x1134B6B0B3B2911D1011 PUSH1 0xB1 SHL PUSH1 0x1 DUP3 ADD MSTORE DUP3 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x17A3 DUP2 PUSH1 0xB DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1300 JUMP JUMPDEST PUSH2 0x88B PUSH1 0xF2 SHL PUSH1 0xB SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE PUSH9 0x113730B6B2911D1011 PUSH1 0xB9 SHL PUSH1 0xD DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x17D7 DUP2 PUSH1 0x16 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1300 JUMP JUMPDEST PUSH2 0x227D PUSH1 0xF0 SHL PUSH1 0x16 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x18 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x182A DUP2 PUSH1 0x1D DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1300 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1D ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1849 JUMPI PUSH2 0x1849 PUSH2 0x1742 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1861 JUMPI PUSH2 0x1861 PUSH2 0x1742 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x18D5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x18F4 JUMPI PUSH2 0x18F4 PUSH2 0x1742 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x192C SWAP1 DUP4 ADD DUP5 PUSH2 0x132C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1948 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x12F9 DUP2 PUSH2 0x12C6 JUMP INVALID COINBASE TIMESTAMP NUMBER DIFFICULTY GASLIMIT CHAINID SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2F68747470733A2F 0x2F PUSH20 0x746F726167652E676F6F676C65617069732E636F PUSH14 0x2F6F70656E7365612D70726F642E PUSH2 0x7070 PUSH20 0x706F742E636F6D2F70756666732F312E706E67A2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 SGT 0x2C INVALID PUSH26 0xA26DDC64C4A1A53612D9AC12022EBC927D122D4CC695182321D7 0xD0 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"188:1823:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1822:187;;;;;;:::i;:::-;;:::i;:::-;;;565:14:12;;558:22;540:41;;528:2;513:18;1822:187:11;;;;;;;;2488:98:1;;;:::i;:::-;;;;;;;:::i;3999:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:12;;;1674:51;;1662:2;1647:18;3999:217:1;1528:203:12;3537:401:1;;;;;;:::i;:::-;;:::i;:::-;;4726:330;;;;;;:::i;:::-;;:::i;5122:179::-;;;;;;:::i;:::-;;:::i;427:55:11:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;2191:235:1:-;;;;;;:::i;:::-;;:::i;281:27:11:-;;;;;;;;;3019:25:12;;;3007:2;2992:18;281:27:11;2873:177:12;1929:205:1;;;;;;:::i;:::-;;:::i;1668:101:0:-;;;:::i;633:415:11:-;;;;;;:::i;:::-;;:::i;1036:85:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;1036:85;;2650:102:1;;;:::i;4283:153::-;;;;;;:::i;:::-;;:::i;5367:320::-;;;;;;:::i;:::-;;:::i;1054:694:11:-;;;;;;:::i;:::-;;:::i;4502:162:1:-;;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;:::i;:::-;;:::i;1822:187:11:-;1939:4;1966:36;1990:11;1966:23;:36::i;:::-;1959:43;1822:187;-1:-1:-1;;1822:187:11:o;2488:98:1:-;2542:13;2574:5;2567:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:98;:::o;3999:217::-;4075:7;4102:16;4110:7;4102;:16::i;:::-;4094:73;;;;-1:-1:-1;;;4094:73:1;;7004:2:12;4094:73:1;;;6986:21:12;7043:2;7023:18;;;7016:30;7082:34;7062:18;;;7055:62;-1:-1:-1;;;7133:18:12;;;7126:42;7185:19;;4094:73:1;;;;;;;;;-1:-1:-1;4185:24:1;;;;:15;:24;;;;;;-1:-1:-1;;;;;4185:24:1;;3999:217::o;3537:401::-;3617:13;3633:23;3648:7;3633:14;:23::i;:::-;3617:39;;3680:5;-1:-1:-1;;;;;3674:11:1;:2;-1:-1:-1;;;;;3674:11:1;;;3666:57;;;;-1:-1:-1;;;3666:57:1;;7417:2:12;3666:57:1;;;7399:21:12;7456:2;7436:18;;;7429:30;7495:34;7475:18;;;7468:62;-1:-1:-1;;;7546:18:12;;;7539:31;7587:19;;3666:57:1;7215:397:12;3666:57:1;719:10:7;-1:-1:-1;;;;;3755:21:1;;;;:62;;-1:-1:-1;3780:37:1;3797:5;719:10:7;4502:162:1;:::i;3780:37::-;3734:165;;;;-1:-1:-1;;;3734:165:1;;7819:2:12;3734:165:1;;;7801:21:12;7858:2;7838:18;;;7831:30;7897:34;7877:18;;;7870:62;-1:-1:-1;;;7948:18:12;;;7941:54;8012:19;;3734:165:1;7617:420:12;3734:165:1;3910:21;3919:2;3923:7;3910:8;:21::i;:::-;3607:331;3537:401;;:::o;4726:330::-;4915:41;719:10:7;4948:7:1;4915:18;:41::i;:::-;4907:103;;;;-1:-1:-1;;;4907:103:1;;;;;;;:::i;:::-;5021:28;5031:4;5037:2;5041:7;5021:9;:28::i;5122:179::-;5255:39;5272:4;5278:2;5282:7;5255:39;;;;;;;;;;;;:16;:39::i;427:55:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2191:235:1:-;2263:7;2298:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2298:16:1;2332:19;2324:73;;;;-1:-1:-1;;;2324:73:1;;8662:2:12;2324:73:1;;;8644:21:12;8701:2;8681:18;;;8674:30;8740:34;8720:18;;;8713:62;-1:-1:-1;;;8791:18:12;;;8784:39;8840:19;;2324:73:1;8460:405:12;1929:205:1;2001:7;-1:-1:-1;;;;;2028:19:1;;2020:74;;;;-1:-1:-1;;;2020:74:1;;9072:2:12;2020:74:1;;;9054:21:12;9111:2;9091:18;;;9084:30;9150:34;9130:18;;;9123:62;-1:-1:-1;;;9201:18:12;;;9194:40;9251:19;;2020:74:1;8870:406:12;2020:74:1;-1:-1:-1;;;;;;2111:16:1;;;;;:9;:16;;;;;;;1929:205::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:7;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;633:415:11:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:7;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;742:12:11::1;:14:::0;;724:15:::1;::::0;;742:14:::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;803:25:11;;::::1;767:23:::0;;;:14:::1;:23;::::0;;;;;;;;:61;;;871:22;;::::1;::::0;838:30:::1;::::0;::::1;:55:::0;940:26;;::::1;::::0;903:63;;724:32;;-1:-1:-1;903:63:11::1;::::0;:34:::1;::::0;;::::1;::::0;:63;::::1;::::0;::::1;:::i;:::-;;977:26;983:10;995:7;977:5;:26::i;:::-;1019:22;::::0;3019:25:12;;;1019:22:11::1;::::0;3007:2:12;2992:18;1019:22:11::1;;;;;;;714:334;633:415:::0;:::o;2650:102:1:-;2706:13;2738:7;2731:14;;;;;:::i;4283:153::-;4377:52;719:10:7;4410:8:1;4420;4377:18;:52::i;:::-;4283:153;;:::o;5367:320::-;5536:41;719:10:7;5569:7:1;5536:18;:41::i;:::-;5528:103;;;;-1:-1:-1;;;5528:103:1;;;;;;;:::i;:::-;5641:39;5655:4;5661:2;5665:7;5674:5;5641:13;:39::i;:::-;5367:320;;;;:::o;1054:694:11:-;1143:13;1172:17;:89;;;;;;;;;;;;;;;;;1272:18;1293:23;;;:14;:23;;;;;:34;;1272:55;;1172:89;;-1:-1:-1;1272:18:11;;:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1338:20;1434:3;1495:4;1361:181;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1338:204;;1687:22;1701:7;1687:13;:22::i;:::-;1596:131;;;;;;;;:::i;:::-;;;;;;;;;;;;;1553:188;;;;;1054:694;;;:::o;4502:162:1:-;-1:-1:-1;;;;;4622:25:1;;;4599:4;4622:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4502:162::o;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:7;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;11823:2:12;1998:73:0::1;::::0;::::1;11805:21:12::0;11862:2;11842:18;;;11835:30;11901:34;11881:18;;;11874:62;-1:-1:-1;;;11952:18:12;;;11945:36;11998:19;;1998:73:0::1;11621:402:12::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;1570:300:1:-;1672:4;-1:-1:-1;;;;;;1707:40:1;;-1:-1:-1;;;1707:40:1;;:104;;-1:-1:-1;;;;;;;1763:48:1;;-1:-1:-1;;;1763:48:1;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:9;;;1827:36:1;829:155:9;7159:125:1;7224:4;7247:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7247:16:1;:30;;;7159:125::o;11168:171::-;11242:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11242:29:1;-1:-1:-1;;;;;11242:29:1;;;;;;;;:24;;11295:23;11242:24;11295:14;:23::i;:::-;-1:-1:-1;;;;;11286:46:1;;;;;;;;;;;11168:171;;:::o;7442:344::-;7535:4;7559:16;7567:7;7559;:16::i;:::-;7551:73;;;;-1:-1:-1;;;7551:73:1;;12230:2:12;7551:73:1;;;12212:21:12;12269:2;12249:18;;;12242:30;12308:34;12288:18;;;12281:62;-1:-1:-1;;;12359:18:12;;;12352:42;12411:19;;7551:73:1;12028:408:12;7551:73:1;7634:13;7650:23;7665:7;7650:14;:23::i;:::-;7634:39;;7702:5;-1:-1:-1;;;;;7691:16:1;:7;-1:-1:-1;;;;;7691:16:1;;:51;;;;7735:7;-1:-1:-1;;;;;7711:31:1;:20;7723:7;7711:11;:20::i;:::-;-1:-1:-1;;;;;7711:31:1;;7691:51;:87;;;;7746:32;7763:5;7770:7;7746:16;:32::i;:::-;7683:96;7442:344;-1:-1:-1;;;;7442:344:1:o;10452:605::-;10606:4;-1:-1:-1;;;;;10579:31:1;:23;10594:7;10579:14;:23::i;:::-;-1:-1:-1;;;;;10579:31:1;;10571:81;;;;-1:-1:-1;;;10571:81:1;;12643:2:12;10571:81:1;;;12625:21:12;12682:2;12662:18;;;12655:30;12721:34;12701:18;;;12694:62;-1:-1:-1;;;12772:18:12;;;12765:35;12817:19;;10571:81:1;12441:401:12;10571:81:1;-1:-1:-1;;;;;10670:16:1;;10662:65;;;;-1:-1:-1;;;10662:65:1;;13049:2:12;10662:65:1;;;13031:21:12;13088:2;13068:18;;;13061:30;13127:34;13107:18;;;13100:62;-1:-1:-1;;;13178:18:12;;;13171:34;13222:19;;10662:65:1;12847:400:12;10662:65:1;10839:29;10856:1;10860:7;10839:8;:29::i;:::-;-1:-1:-1;;;;;10879:15:1;;;;;;:9;:15;;;;;:20;;10898:1;;10879:15;:20;;10898:1;;10879:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10909:13:1;;;;;;:9;:13;;;;;:18;;10926:1;;10909:13;:18;;10926:1;;10909:18;:::i;:::-;;;;-1:-1:-1;;10937:16:1;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10937:21:1;-1:-1:-1;;;;;10937:21:1;;;;;;;;;10974:27;;10937:16;;10974:27;;;;;;;3607:331;3537:401;;:::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;9078:427:1:-;-1:-1:-1;;;;;9157:16:1;;9149:61;;;;-1:-1:-1;;;9149:61:1;;13717:2:12;9149:61:1;;;13699:21:12;;;13736:18;;;13729:30;13795:34;13775:18;;;13768:62;13847:18;;9149:61:1;13515:356:12;9149:61:1;9229:16;9237:7;9229;:16::i;:::-;9228:17;9220:58;;;;-1:-1:-1;;;9220:58:1;;14078:2:12;9220:58:1;;;14060:21:12;14117:2;14097:18;;;14090:30;14156;14136:18;;;14129:58;14204:18;;9220:58:1;13876:352:12;9220:58:1;-1:-1:-1;;;;;9345:13:1;;;;;;:9;:13;;;;;:18;;9362:1;;9345:13;:18;;9362:1;;9345:18;:::i;:::-;;;;-1:-1:-1;;9373:16:1;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9373:21:1;-1:-1:-1;;;;;9373:21:1;;;;;;;;9410:33;;9373:16;;;9410:33;;9373:16;;9410:33;4283:153;;:::o;11474:307::-;11624:8;-1:-1:-1;;;;;11615:17:1;:5;-1:-1:-1;;;;;11615:17:1;;;11607:55;;;;-1:-1:-1;;;11607:55:1;;14435:2:12;11607:55:1;;;14417:21:12;14474:2;14454:18;;;14447:30;-1:-1:-1;;;14493:18:12;;;14486:55;14558:18;;11607:55:1;14233:349:12;11607:55:1;-1:-1:-1;;;;;11672:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11672:46:1;;;;;;;;;;11733:41;;540::12;;;11733::1;;513:18:12;11733:41:1;;;;;;;11474:307;;;:::o;6549:::-;6700:28;6710:4;6716:2;6720:7;6700:9;:28::i;:::-;6746:48;6769:4;6775:2;6779:7;6788:5;6746:22;:48::i;:::-;6738:111;;;;-1:-1:-1;;;6738:111:1;;;;;;;:::i;505:2983:6:-;563:13;795:4;:11;810:1;795:16;791:31;;;-1:-1:-1;;813:9:6;;;;;;;;;-1:-1:-1;813:9:6;;;505:2983::o;791:31::-;872:19;894:6;;;;;;;;;;;;;;;;;872:28;;1303:20;1362:1;1343:4;:11;1357:1;1343:15;;;;:::i;:::-;1342:21;;;;:::i;:::-;1337:27;;:1;:27;:::i;:::-;1326:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1326:39:6;;1303:62;;1497:1;1490:5;1486:13;1598:2;1590:6;1586:15;1705:4;1756;1750:11;1744:4;1740:22;1668:1403;1789:6;1780:7;1777:19;1668:1403;;;1891:1;1882:7;1878:15;1867:26;;1929:7;1923:14;2572:4;2564:5;2560:2;2556:14;2552:25;2542:8;2538:40;2532:47;2521:9;2513:67;2625:1;2614:9;2610:17;2597:30;;2715:4;2707:5;2703:2;2699:14;2695:25;2685:8;2681:40;2675:47;2664:9;2656:67;2768:1;2757:9;2753:17;2740:30;;2857:4;2849:5;2846:1;2842:13;2838:24;2828:8;2824:39;2818:46;2807:9;2799:66;2910:1;2899:9;2895:17;2882:30;;2991:4;2984:5;2980:16;2970:8;2966:31;2960:38;2949:9;2941:58;;3044:1;3033:9;3029:17;3016:30;;1668:1403;;;1672:104;;3229:1;3222:4;3216:11;3212:19;3249:1;3244:120;;;;3382:1;3377:71;;;;3205:243;;3244:120;3296:4;3292:1;3281:9;3277:17;3269:32;3345:4;3341:1;3330:9;3326:17;3318:32;3244:120;;3377:71;3429:4;3425:1;3414:9;3410:17;3402:32;3205:243;-1:-1:-1;3475:6:6;;505:2983;-1:-1:-1;;;;;505:2983:6:o;12334:778:1:-;12484:4;-1:-1:-1;;;;;12504:13:1;;1465:19:5;:23;12500:606:1;;12539:72;;-1:-1:-1;;;12539:72:1;;-1:-1:-1;;;;;12539:36:1;;;;;:72;;719:10:7;;12590:4:1;;12596:7;;12605:5;;12539:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12539:72:1;;;;;;;;-1:-1:-1;;12539:72:1;;;;;;;;;;;;:::i;:::-;;;12535:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12778:13:1;;12774:266;;12820:60;;-1:-1:-1;;;12820:60:1;;;;;;;:::i;12774:266::-;12992:6;12986:13;12977:6;12973:2;12969:15;12962:38;12535:519;-1:-1:-1;;;;;;12661:51:1;-1:-1:-1;;;12661:51:1;;-1:-1:-1;12654:58:1;;12500:606;-1:-1:-1;13091:4:1;12334:778;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:12;-1:-1:-1;;;;;;88:32:12;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:12:o;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:12;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:12;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:12:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:12;;1343:180;-1:-1:-1;1343:180:12:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:12;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:12:o;2173:328::-;2250:6;2258;2266;2319:2;2307:9;2298:7;2294:23;2290:32;2287:52;;;2335:1;2332;2325:12;2287:52;2358:29;2377:9;2358:29;:::i;:::-;2348:39;;2406:38;2440:2;2429:9;2425:18;2406:38;:::i;:::-;2396:48;;2491:2;2480:9;2476:18;2463:32;2453:42;;2173:328;;;;;:::o;2506:362::-;2711:6;2700:9;2693:25;2754:6;2749:2;2738:9;2734:18;2727:34;2797:2;2792;2781:9;2777:18;2770:30;2674:4;2817:45;2858:2;2847:9;2843:18;2835:6;2817:45;:::i;:::-;2809:53;2506:362;-1:-1:-1;;;;;2506:362:12:o;3055:186::-;3114:6;3167:2;3155:9;3146:7;3142:23;3138:32;3135:52;;;3183:1;3180;3173:12;3135:52;3206:29;3225:9;3206:29;:::i;3246:127::-;3307:10;3302:3;3298:20;3295:1;3288:31;3338:4;3335:1;3328:15;3362:4;3359:1;3352:15;3378:248;3445:2;3439:9;3487:4;3475:17;;3522:18;3507:34;;3543:22;;;3504:62;3501:88;;;3569:18;;:::i;:::-;3605:2;3598:22;3378:248;:::o;3631:632::-;3696:5;3726:18;3767:2;3759:6;3756:14;3753:40;;;3773:18;;:::i;:::-;3848:2;3842:9;3816:2;3902:15;;-1:-1:-1;;3898:24:12;;;3924:2;3894:33;3890:42;3878:55;;;3948:18;;;3968:22;;;3945:46;3942:72;;;3994:18;;:::i;:::-;4034:10;4030:2;4023:22;4063:6;4054:15;;4093:6;4085;4078:22;4133:3;4124:6;4119:3;4115:16;4112:25;4109:45;;;4150:1;4147;4140:12;4109:45;4200:6;4195:3;4188:4;4180:6;4176:17;4163:44;4255:1;4248:4;4239:6;4231;4227:19;4223:30;4216:41;;;;3631:632;;;;;:::o;4268:855::-;4358:6;4411:2;4399:9;4390:7;4386:23;4382:32;4379:52;;;4427:1;4424;4417:12;4379:52;4467:9;4454:23;4496:18;4537:2;4529:6;4526:14;4523:34;;;4553:1;4550;4543:12;4523:34;4576:22;;;;4632:4;4614:16;;;4610:27;4607:47;;;4650:1;4647;4640:12;4607:47;4676:17;;:::i;:::-;4729:2;4716:16;4709:5;4702:31;4786:2;4782;4778:11;4765:25;4760:2;4753:5;4749:14;4742:49;4837:2;4833;4829:11;4816:25;4866:2;4856:8;4853:16;4850:36;;;4882:1;4879;4872:12;4850:36;4913:8;4909:2;4905:17;4895:27;;;4960:7;4953:4;4949:2;4945:13;4941:27;4931:55;;4982:1;4979;4972:12;4931:55;5018:74;5084:7;5079:2;5066:16;5061:2;5057;5053:11;5018:74;:::i;:::-;5013:2;5002:14;;4995:98;5006:5;4268:855;-1:-1:-1;;;;;4268:855:12:o;5128:347::-;5193:6;5201;5254:2;5242:9;5233:7;5229:23;5225:32;5222:52;;;5270:1;5267;5260:12;5222:52;5293:29;5312:9;5293:29;:::i;:::-;5283:39;;5372:2;5361:9;5357:18;5344:32;5419:5;5412:13;5405:21;5398:5;5395:32;5385:60;;5441:1;5438;5431:12;5385:60;5464:5;5454:15;;;5128:347;;;;;:::o;5480:667::-;5575:6;5583;5591;5599;5652:3;5640:9;5631:7;5627:23;5623:33;5620:53;;;5669:1;5666;5659:12;5620:53;5692:29;5711:9;5692:29;:::i;:::-;5682:39;;5740:38;5774:2;5763:9;5759:18;5740:38;:::i;:::-;5730:48;;5825:2;5814:9;5810:18;5797:32;5787:42;;5880:2;5869:9;5865:18;5852:32;5907:18;5899:6;5896:30;5893:50;;;5939:1;5936;5929:12;5893:50;5962:22;;6015:4;6007:13;;6003:27;-1:-1:-1;5993:55:12;;6044:1;6041;6034:12;5993:55;6067:74;6133:7;6128:2;6115:16;6110:2;6106;6102:11;6067:74;:::i;:::-;6057:84;;;5480:667;;;;;;;:::o;6152:260::-;6220:6;6228;6281:2;6269:9;6260:7;6256:23;6252:32;6249:52;;;6297:1;6294;6287:12;6249:52;6320:29;6339:9;6320:29;:::i;:::-;6310:39;;6368:38;6402:2;6391:9;6387:18;6368:38;:::i;:::-;6358:48;;6152:260;;;;;:::o;6417:380::-;6496:1;6492:12;;;;6539;;;6560:61;;6614:4;6606:6;6602:17;6592:27;;6560:61;6667:2;6659:6;6656:14;6636:18;6633:38;6630:161;;;6713:10;6708:3;6704:20;6701:1;6694:31;6748:4;6745:1;6738:15;6776:4;6773:1;6766:15;6630:161;;6417:380;;;:::o;8042:413::-;8244:2;8226:21;;;8283:2;8263:18;;;8256:30;8322:34;8317:2;8302:18;;8295:62;-1:-1:-1;;;8388:2:12;8373:18;;8366:47;8445:3;8430:19;;8042:413::o;9281:356::-;9483:2;9465:21;;;9502:18;;;9495:30;9561:34;9556:2;9541:18;;9534:62;9628:2;9613:18;;9281:356::o;9642:127::-;9703:10;9698:3;9694:20;9691:1;9684:31;9734:4;9731:1;9724:15;9758:4;9755:1;9748:15;9774:135;9813:3;-1:-1:-1;;9834:17:12;;9831:43;;;9854:18;;:::i;:::-;-1:-1:-1;9901:1:12;9890:13;;9774:135::o;9914:1249::-;-1:-1:-1;;;10616:16:12;;-1:-1:-1;;;10657:1:12;10648:11;;10641:53;10717:13;;-1:-1:-1;;10739:62:12;10717:13;10789:2;10780:12;;10773:4;10761:17;;10739:62;:::i;:::-;-1:-1:-1;;;10860:2:12;10820:16;;;10852:11;;;10845:35;-1:-1:-1;;;10904:2:12;10896:11;;10889:51;10965:13;;10987:63;10965:13;11036:2;11028:11;;11021:4;11009:17;;10987:63;:::i;:::-;-1:-1:-1;;;11110:2:12;11069:17;;;;11102:11;;;11095:35;11154:2;11146:11;;9914:1249;-1:-1:-1;;;;9914:1249:12:o;11168:448::-;11430:31;11425:3;11418:44;11400:3;11491:6;11485:13;11507:62;11562:6;11557:2;11552:3;11548:12;11541:4;11533:6;11529:17;11507:62;:::i;:::-;11589:16;;;;11607:2;11585:25;;11168:448;-1:-1:-1;;11168:448:12:o;13252:125::-;13292:4;13320:1;13317;13314:8;13311:34;;;13325:18;;:::i;:::-;-1:-1:-1;13362:9:12;;13252:125::o;13382:128::-;13422:3;13453:1;13449:6;13446:1;13443:13;13440:39;;;13459:18;;:::i;:::-;-1:-1:-1;13495:9:12;;13382:128::o;14587:414::-;14789:2;14771:21;;;14828:2;14808:18;;;14801:30;14867:34;14862:2;14847:18;;14840:62;-1:-1:-1;;;14933:2:12;14918:18;;14911:48;14991:3;14976:19;;14587:414::o;15006:217::-;15046:1;15072;15062:132;;15116:10;15111:3;15107:20;15104:1;15097:31;15151:4;15148:1;15141:15;15179:4;15176:1;15169:15;15062:132;-1:-1:-1;15208:9:12;;15006:217::o;15228:168::-;15268:7;15334:1;15330;15326:6;15322:14;15319:1;15316:21;15311:1;15304:9;15297:17;15293:45;15290:71;;;15341:18;;:::i;:::-;-1:-1:-1;15381:9:12;;15228:168::o;15401:489::-;-1:-1:-1;;;;;15670:15:12;;;15652:34;;15722:15;;15717:2;15702:18;;15695:43;15769:2;15754:18;;15747:34;;;15817:3;15812:2;15797:18;;15790:31;;;15595:4;;15838:46;;15864:19;;15856:6;15838:46;:::i;:::-;15830:54;15401:489;-1:-1:-1;;;;;;15401:489:12:o;15895:249::-;15964:6;16017:2;16005:9;15996:7;15992:23;15988:32;15985:52;;;16033:1;16030;16023:12;15985:52;16065:9;16059:16;16084:30;16108:5;16084:30;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"1333600","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2612","getApproved(uint256)":"4776","isApprovedForAll(address,address)":"infinite","name()":"infinite","nextReportId()":"2472","owner()":"2420","ownerOf(uint256)":"2711","renounceOwnership()":"28162","reportMetadata(uint256)":"infinite","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"26708","storePatientData((bytes32,bytes32,string))":"infinite","supportsInterface(bytes4)":"infinite","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"28422"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","nextReportId()":"6e79bbf6","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","reportMetadata(uint256)":"62a428d5","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","storePatientData((bytes32,bytes32,string))":"8b3f1736","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reportId\",\"type\":\"uint256\"}],\"name\":\"ReportCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextReportId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reportMetadata\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"reportName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"reportName\",\"type\":\"string\"}],\"internalType\":\"struct MedicalRecords.AvailMetadata\",\"name\":\"_reportMetadata\",\"type\":\"tuple\"}],\"name\":\"storePatientData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MedicalRecords.sol\":\"MedicalRecords\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: balance query for the zero address\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: owner query for nonexistent token\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721Metadata: URI query for nonexistent token\\\");\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overriden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        require(_exists(tokenId), \\\"ERC721: approved query for nonexistent token\\\");\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, _data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        require(_exists(tokenId), \\\"ERC721: operator query for nonexistent token\\\");\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, _data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits a {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits a {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x11b84bb56dc112a6590bfe3e0efa118aa1b5891132342200d04c4ef544cb93de\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Base64.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides a set of functions to operate with Base64 strings.\\n *\\n * _Available since v4.5._\\n */\\nlibrary Base64 {\\n    /**\\n     * @dev Base64 Encoding/Decoding Table\\n     */\\n    string internal constant _TABLE = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\n\\n    /**\\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\\n     */\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        /**\\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\\n         */\\n        if (data.length == 0) return \\\"\\\";\\n\\n        // Loads the table into memory\\n        string memory table = _TABLE;\\n\\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\\n        // and split into 4 numbers of 6 bits.\\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\\n        // - `data.length + 2`  -> Round up\\n        // - `/ 3`              -> Number of 3-bytes chunks\\n        // - `4 *`              -> 4 characters for each chunk\\n        string memory result = new string(4 * ((data.length + 2) / 3));\\n\\n        assembly {\\n            // Prepare the lookup table (skip the first \\\"length\\\" byte)\\n            let tablePtr := add(table, 1)\\n\\n            // Prepare result pointer, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // Run over the input, 3 bytes at a time\\n            for {\\n                let dataPtr := data\\n                let endPtr := add(data, mload(data))\\n            } lt(dataPtr, endPtr) {\\n\\n            } {\\n                // Advance 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // To write each character, shift the 3 bytes (18 bits) chunk\\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\\n                // and apply logical AND with 0x3F which is the number of\\n                // the previous character in the ASCII table prior to the Base64 Table\\n                // The result is then added to the table to get the character to write,\\n                // and finally write it in the result pointer but with a left shift\\n                // of 256 (1 byte) - 8 (1 ASCII char) = 248 bits\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n            }\\n\\n            // When data `bytes` is not exactly 3 bytes long\\n            // it is padded with `=` characters at the end\\n            switch mod(mload(data), 3)\\n            case 1 {\\n                mstore8(sub(resultPtr, 1), 0x3d)\\n                mstore8(sub(resultPtr, 2), 0x3d)\\n            }\\n            case 2 {\\n                mstore8(sub(resultPtr, 1), 0x3d)\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x5efa2a2ed44af15fd5bec8c43b45cb26fe6cb68671fea151e6afcfed66ed2672\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"src/MedicalRecords.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Base64.sol\\\";\\n\\ncontract MedicalRecords is ERC721, Ownable {\\n    event ReportCreated(uint256 reportId);\\n\\n    uint256 public nextReportId;\\n\\n    struct AvailMetadata {\\n        bytes32 blockHash;\\n        bytes32 txHash;\\n        string reportName;\\n    }\\n\\n    mapping(uint256 => AvailMetadata) public reportMetadata;  \\n\\n    constructor(address initialOwner)\\n        ERC721(\\\"Medical Records\\\", \\\"MEDREC\\\")\\n    {\\n        transferOwnership(initialOwner);\\n    }\\n\\n    \\n\\n    function storePatientData(AvailMetadata memory _reportMetadata) public onlyOwner {\\n        uint256 tokenId = nextReportId++;\\n\\n        reportMetadata[tokenId].blockHash = _reportMetadata.blockHash;\\n        reportMetadata[tokenId].txHash = _reportMetadata.txHash;\\n        reportMetadata[tokenId].reportName = _reportMetadata.reportName;\\n\\n        _mint(msg.sender, tokenId);\\n\\n        emit ReportCreated(tokenId);\\n    }\\n\\n    function tokenURI(uint256 tokenId)\\n    public\\n    view\\n    override(ERC721)\\n    returns (string memory)\\n    {\\n        string memory url = \\\"https://storage.googleapis.com/opensea-prod.appspot.com/puffs/1.png\\\";\\n\\n        string memory name = reportMetadata[tokenId].reportName;\\n\\n        bytes memory dataURI = abi.encodePacked(\\n            \\\"{\\\",\\n            '\\\"image\\\": \\\"',\\n            url,\\n            '\\\",',\\n             '\\\"name\\\": \\\"',\\n            name,\\n            '\\\"'\\n            \\\"}\\\"\\n        );\\n\\n        return\\n            string(\\n                abi.encodePacked(\\n                    \\\"data:application/json;base64,\\\",\\n                    Base64.encode(dataURI)\\n                )\\n            );\\n    }\\n\\n\\n    // The following functions are overrides required by Solidity.\\n    function supportsInterface(bytes4 interfaceId)\\n        public\\n        view\\n        override(ERC721)\\n        returns (bool)\\n    {\\n        return super.supportsInterface(interfaceId);\\n    }\\n}\",\"keccak256\":\"0xe3733c36071477fc79933a1c646ff6dbc3a37fde73bb65cfa0af0162d890fe34\"}},\"version\":1}","storageLayout":{"storage":[{"astId":130,"contract":"src/MedicalRecords.sol:MedicalRecords","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":132,"contract":"src/MedicalRecords.sol:MedicalRecords","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":136,"contract":"src/MedicalRecords.sol:MedicalRecords","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":140,"contract":"src/MedicalRecords.sol:MedicalRecords","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":144,"contract":"src/MedicalRecords.sol:MedicalRecords","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":150,"contract":"src/MedicalRecords.sol:MedicalRecords","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":7,"contract":"src/MedicalRecords.sol:MedicalRecords","label":"_owner","offset":0,"slot":"6","type":"t_address"},{"astId":1749,"contract":"src/MedicalRecords.sol:MedicalRecords","label":"nextReportId","offset":0,"slot":"7","type":"t_uint256"},{"astId":1761,"contract":"src/MedicalRecords.sol:MedicalRecords","label":"reportMetadata","offset":0,"slot":"8","type":"t_mapping(t_uint256,t_struct(AvailMetadata)1756_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_struct(AvailMetadata)1756_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct MedicalRecords.AvailMetadata)","numberOfBytes":"32","value":"t_struct(AvailMetadata)1756_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(AvailMetadata)1756_storage":{"encoding":"inplace","label":"struct MedicalRecords.AvailMetadata","members":[{"astId":1751,"contract":"src/MedicalRecords.sol:MedicalRecords","label":"blockHash","offset":0,"slot":"0","type":"t_bytes32"},{"astId":1753,"contract":"src/MedicalRecords.sol:MedicalRecords","label":"txHash","offset":0,"slot":"1","type":"t_bytes32"},{"astId":1755,"contract":"src/MedicalRecords.sol:MedicalRecords","label":"reportName","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}