/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SequencerInboxStub,
  SequencerInboxStubInterface,
  ISequencerInbox,
} from "../../../src/mocks/SequencerInboxStub";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IBridge",
        name: "bridge_",
        type: "address",
      },
      {
        internalType: "address",
        name: "sequencer_",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "delayBlocks",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureBlocks",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "delaySeconds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureSeconds",
            type: "uint256",
          },
        ],
        internalType: "struct ISequencerInbox.MaxTimeVariation",
        name: "maxTimeVariation_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maxDataSize_",
        type: "uint256",
      },
      {
        internalType: "contract IReader4844",
        name: "reader4844_",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isUsingFeeToken_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyInit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "AlreadyValidDASKeyset",
    type: "error",
  },
  {
    inputs: [],
    name: "BadMaxTimeVariation",
    type: "error",
  },
  {
    inputs: [],
    name: "BadPostUpgradeInit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stored",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "received",
        type: "uint256",
      },
    ],
    name: "BadSequencerNumber",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "BatchDataValidationForAvailDAFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "DataBlobsNotSupported",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dataLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxDataLength",
        type: "uint256",
      },
    ],
    name: "DataTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "DelayedBackwards",
    type: "error",
  },
  {
    inputs: [],
    name: "DelayedTooFar",
    type: "error",
  },
  {
    inputs: [],
    name: "Deprecated",
    type: "error",
  },
  {
    inputs: [],
    name: "ForceIncludeBlockTooSoon",
    type: "error",
  },
  {
    inputs: [],
    name: "ForceIncludeTimeTooSoon",
    type: "error",
  },
  {
    inputs: [],
    name: "HadZeroInit",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectMessagePreimage",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "InitParamZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    name: "InvalidHeaderFlag",
    type: "error",
  },
  {
    inputs: [],
    name: "MissingDataHashes",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeTokenMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "NoSuchKeyset",
    type: "error",
  },
  {
    inputs: [],
    name: "NotBatchPoster",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "NotBatchPosterManager",
    type: "error",
  },
  {
    inputs: [],
    name: "NotForked",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOrigin",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "RollupNotChanged",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "messageNum",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "InboxMessageDelivered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "messageNum",
        type: "uint256",
      },
    ],
    name: "InboxMessageDeliveredFromOrigin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "keysetHash",
        type: "bytes32",
      },
    ],
    name: "InvalidateKeyset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "OwnerFunctionCalled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "batchSequenceNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "SequencerBatchData",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "batchSequenceNumber",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "beforeAcc",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "afterAcc",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "delayedAcc",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "afterDelayedMessagesRead",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "minTimestamp",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "maxTimestamp",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "minBlockNumber",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "maxBlockNumber",
            type: "uint64",
          },
        ],
        indexed: false,
        internalType: "struct IBridge.TimeBounds",
        name: "timeBounds",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "enum IBridge.BatchDataLocation",
        name: "dataLocation",
        type: "uint8",
      },
    ],
    name: "SequencerBatchDelivered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "keysetHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "keysetBytes",
        type: "bytes",
      },
    ],
    name: "SetValidKeyset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32[]",
            name: "dataRootProof",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[]",
            name: "leafProof",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32",
            name: "rangeHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "dataRootIndex",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "blobRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "bridgeRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "leaf",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "leafIndex",
            type: "uint256",
          },
        ],
        indexed: true,
        internalType: "struct MerkleProofInput",
        name: "merkleProofInput",
        type: "tuple",
      },
    ],
    name: "validateBatchDataOverAvailDA",
    type: "event",
  },
  {
    inputs: [],
    name: "AVAIL_MESSAGE_HEADER_FLAG",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BROTLI_MESSAGE_HEADER_FLAG",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DAS_MESSAGE_HEADER_FLAG",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DATA_AUTHENTICATED_FLAG",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DATA_BLOB_HEADER_FLAG",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "HEADER_LENGTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TREE_DAS_MESSAGE_HEADER_FLAG",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_HEAVY_MESSAGE_HEADER_FLAG",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "addInitMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sequenceNumber",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "afterDelayedMessagesRead",
        type: "uint256",
      },
      {
        internalType: "contract IGasRefunder",
        name: "gasRefunder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "prevMessageCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMessageCount",
        type: "uint256",
      },
    ],
    name: "addSequencerL2Batch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sequenceNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "afterDelayedMessagesRead",
        type: "uint256",
      },
      {
        internalType: "contract IGasRefunder",
        name: "gasRefunder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "prevMessageCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMessageCount",
        type: "uint256",
      },
    ],
    name: "addSequencerL2BatchFromBlobs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "contract IGasRefunder",
        name: "",
        type: "address",
      },
    ],
    name: "addSequencerL2BatchFromOrigin",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sequenceNumber",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "afterDelayedMessagesRead",
        type: "uint256",
      },
      {
        internalType: "contract IGasRefunder",
        name: "gasRefunder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "prevMessageCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMessageCount",
        type: "uint256",
      },
    ],
    name: "addSequencerL2BatchFromOrigin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "availBridge",
    outputs: [
      {
        internalType: "contract IAvailDABridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "batchCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "batchPosterManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "contract IBridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "dasKeySetInfo",
    outputs: [
      {
        internalType: "bool",
        name: "isValidKeyset",
        type: "bool",
      },
      {
        internalType: "uint64",
        name: "creationBlock",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalDelayedMessagesRead",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "kind",
        type: "uint8",
      },
      {
        internalType: "uint64[2]",
        name: "l1BlockAndTime",
        type: "uint64[2]",
      },
      {
        internalType: "uint256",
        name: "baseFeeL1",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "messageDataHash",
        type: "bytes32",
      },
    ],
    name: "forceInclusion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "ksHash",
        type: "bytes32",
      },
    ],
    name: "getKeysetCreationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "inboxAccs",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBridge",
        name: "bridge_",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "delayBlocks",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureBlocks",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "delaySeconds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureSeconds",
            type: "uint256",
          },
        ],
        internalType: "struct ISequencerInbox.MaxTimeVariation",
        name: "maxTimeVariation_",
        type: "tuple",
      },
      {
        internalType: "contract IAvailDABridge",
        name: "availBridge_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "ksHash",
        type: "bytes32",
      },
    ],
    name: "invalidateKeysetHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isBatchPoster",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isSequencer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isUsingFeeToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "ksHash",
        type: "bytes32",
      },
    ],
    name: "isValidKeysetHash",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxDataSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTimeVariation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "postUpgradeInit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reader4844",
    outputs: [
      {
        internalType: "contract IReader4844",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeDelayAfterFork",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rollup",
    outputs: [
      {
        internalType: "contract IOwnable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newBatchPosterManager",
        type: "address",
      },
    ],
    name: "setBatchPosterManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isBatchPoster_",
        type: "bool",
      },
    ],
    name: "setIsBatchPoster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isSequencer_",
        type: "bool",
      },
    ],
    name: "setIsSequencer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "delayBlocks",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureBlocks",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "delaySeconds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureSeconds",
            type: "uint256",
          },
        ],
        internalType: "struct ISequencerInbox.MaxTimeVariation",
        name: "maxTimeVariation_",
        type: "tuple",
      },
    ],
    name: "setMaxTimeVariation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "keysetBytes",
        type: "bytes",
      },
    ],
    name: "setValidKeyset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDelayedMessagesRead",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updateRollupAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x610160604052306080526202000060a05246610100526200002b620001bc602090811b6200253d17901c565b1515610120523480156200003e57600080fd5b506040516200435338038062004353833981016040819052620000619162000295565b8282828260e081815250506101205115620000a5576001600160a01b038216156200009f576040516386657a5360e01b815260040160405180910390fd5b620000ee565b6001600160a01b038216620000ee576040516380fc2c0360e01b815260206004820152600a60248201526914995859195c8d0e0d0d60b21b604482015260640160405180910390fd5b6001600160a01b0391821660c052151561014052600180549882166001600160a01b0319998a161781556002805490991633179098558551600a80546020808a01516040808c01516060909c01516001600160401b03908116600160c01b026001600160c01b039d8216600160801b029d909d166001600160801b0393821668010000000000000000026001600160801b031990961691909716179390931716939093179890981790559616600090815260039096525050509120805460ff191690921790915550620003b6565b60408051600481526024810182526020810180516001600160e01b03166302881c7960e11b179052905160009182918291606491620001fc919062000378565b600060405180830381855afa9150503d806000811462000239576040519150601f19603f3d011682016040523d82523d6000602084013e6200023e565b606091505b509150915081801562000252575080516020145b9250505090565b6001600160a01b03811681146200026f57600080fd5b50565b80516200027f8162000259565b919050565b805180151581146200027f57600080fd5b600080600080600080868803610120811215620002b157600080fd5b8751620002be8162000259565b6020890151909750620002d18162000259565b95506080603f1982011215620002e657600080fd5b50604051608081016001600160401b03811182821017156200031857634e487b7160e01b600052604160045260246000fd5b806040525060408801518152606088015160208201526080880151604082015260a088015160608201528094505060c087015192506200035b60e0880162000272565b91506200036c610100880162000284565b90509295509295509295565b6000825160005b818110156200039b57602081860181015185830152016200037f565b81811115620003ab576000828501525b509190910192915050565b60805160a05160c05160e051610100516101205161014051613ee76200046c6000396000818161047701528181610a8d01528181611a210152612952015260008181610a4401528181611dfd015261299401526000818161189b015261301e01526000818161056401528181612c0e0152612c4a0152600081816104300152818161094f015281816125e401526126b6015260008181610c4301526115df0152600081816116d501526119030152613ee76000f3fe608060405234801561001057600080fd5b50600436106102485760003560e01c8063844208601161013b578063cc2a1a0c116100b8578063e78cea921161007c578063e78cea921461054c578063e8eb1dc31461055f578063ebea461d14610586578063f1981578146105ae578063f60a5091146105c157600080fd5b8063cc2a1a0c146104f5578063d1ce8da814610508578063d9dd67ab1461051b578063e0bc97291461052e578063e5a358c81461054157600080fd5b806396cc5c78116100ff57806396cc5c78146104a1578063af19ad23146104a9578063b31761f8146104bc578063bd1c1246146104cf578063cb23bcb5146104e257600080fd5b806384420860146104185780638d910dde1461042b5780638f111f3c1461045f57806392d9f7821461047257806395fcea781461049957600080fd5b80635dbd16a6116101c95780636e7df3e71161018d5780636e7df3e7146103745780636f12b0c914610387578063715ea34b1461039a57806371c3e6fe146103ec5780637fa3a40e1461040f57600080fd5b80635dbd16a6146103205780636633ae851461032b5780636ae71f121461033e5780636c890450146103465780636d46e9871461035157600080fd5b80631ff64790116102105780631ff64790146102d4578063258f0495146102e757806327957a49146102fa5780632cbf74e5146103025780633e5aa0821461030d57600080fd5b806302c992751461024d57806306f130561461026e5780631637be481461028457806316af91a7146102b75780631f956632146102bf575b600080fd5b610258600160fd1b81565b60405161026591906131d3565b60405180910390f35b6102766105cc565b604051908152602001610265565b6102a76102923660046131e8565b60009081526008602052604090205460ff1690565b6040519015158152602001610265565b610258600081565b6102d26102cd366004613227565b61064c565b005b6102d26102e2366004613260565b610765565b6102766102f53660046131e8565b6108e3565b610276602881565b610258600560fc1b81565b6102d261031b366004613284565b61094c565b610258600560f91b81565b6102d26103393660046131e8565b610d2c565b6102d2610f17565b610258600160fb1b81565b6102a761035f366004613260565b60096020526000908152604090205460ff1681565b6102d2610382366004613227565b6110ca565b6102d2610395366004613315565b6111da565b6103cd6103a83660046131e8565b60086020526000908152604090205460ff81169061010090046001600160401b031682565b6040805192151583526001600160401b03909116602083015201610265565b6102a76103fa366004613260565b60036020526000908152604090205460ff1681565b61027660005481565b6102d26104263660046131e8565b6111f3565b6104527f000000000000000000000000000000000000000000000000000000000000000081565b604051610265919061337f565b6102d261046d366004613393565b611360565b6102a77f000000000000000000000000000000000000000000000000000000000000000081565b6102d26116ca565b6102d2611898565b6102d26104b736600461340f565b6118f8565b6102d26104ca3660046134d3565b611b48565b600c54610452906001600160a01b031681565b600254610452906001600160a01b031681565b600b54610452906001600160a01b031681565b6102d2610516366004613538565b611c4f565b6102766105293660046131e8565b611f4d565b6102d261053c366004613393565b611fd0565b610258600160fe1b81565b600154610452906001600160a01b031681565b6102767f000000000000000000000000000000000000000000000000000000000000000081565b61058e612126565b604080519485526020850193909352918301526060820152608001610265565b6102d26105bc366004613579565b61215e565b610258600160ff1b81565b600154604080516221048360e21b815290516000926001600160a01b0316916284120c916004808301926020929190829003018186803b15801561060f57600080fd5b505afa158015610623573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064791906135e9565b905090565b600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561069a57600080fd5b505afa1580156106ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d29190613602565b6001600160a01b0316336001600160a01b0316141580156106fe5750600b546001600160a01b03163314155b1561072757336040516333059da160e11b815260040161071e919061337f565b60405180910390fd5b6001600160a01b038216600090815260096020526040808220805460ff191684151517905551600491600080516020613e9283398151915291a25050565b600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156107b357600080fd5b505afa1580156107c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107eb9190613602565b6001600160a01b0316336001600160a01b0316146108ab5760025460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561084757600080fd5b505afa15801561085b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087f9190613602565b604051631194af8760e11b81526001600160a01b0392831660048201529116602482015260440161071e565b600b80546001600160a01b0319166001600160a01b038316179055604051600590600080516020613e9283398151915290600090a250565b600081815260086020908152604080832081518083019092525460ff81161515825261010090046001600160401b0316918101829052906109395760405162f20c5d60e01b81526004810184905260240161071e565b602001516001600160401b031692915050565b827f000000000000000000000000000000000000000000000000000000000000000060005a3360009081526003602052604090205490915060ff166109a457604051632dd9fc9760e01b815260040160405180910390fd5b60008060006109b28a6125d5565b9250925092506000806000806109cc878f60008f8f6127d5565b929650909450925090508e8085148015906109e957506000198114155b15610a115760405163ac7411c960e01b8152600481018690526024810182905260440161071e565b818482600080516020613e72833981519152866000548c6003604051610a3a949392919061361f565b60405180910390a47f000000000000000000000000000000000000000000000000000000000000000015610a81576040516386657a5360e01b815260040160405180910390fd5b3332148015610aae57507f0000000000000000000000000000000000000000000000000000000000000000155b15610abf57610abf88864889612991565b505050506001600160a01b038716159350610d2292505050573660006020610ae883601f6136a9565b610af291906136c1565b9050610200610b026002836137c7565b610b0c91906136c1565b610b178260066137d6565b610b2191906136a9565b610b2b90846136a9565b9250333214610b3d5760009150610c92565b6001600160a01b03841615610c9257836001600160a01b031663e83a2d826040518163ffffffff1660e01b815260040160006040518083038186803b158015610b8557600080fd5b505afa925050508015610bba57506040513d6000823e601f3d908101601f19168201604052610bb79190810190613818565b60015b610bc357610c92565b805115610c90576000856001600160a01b0316631f6d6ef76040518163ffffffff1660e01b815260040160206040518083038186803b158015610c0557600080fd5b505afa158015610c19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3d91906135e9565b905048817f00000000000000000000000000000000000000000000000000000000000000008451610c6e91906137d6565b610c7891906137d6565b610c8291906136c1565b610c8c90866136a9565b9450505b505b846001600160a01b031663e3db8a49335a610cad90876138ad565b856040518463ffffffff1660e01b8152600401610ccc939291906138c4565b602060405180830381600087803b158015610ce657600080fd5b505af1158015610cfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1e91906138e5565b5050505b5050505050505050565b600081604051602001610d4191815260200190565b60408051808303601f190181529082905260015481516020830120638db5993b60e01b8452600b6004850152600060248501819052604485019190915291935090916001600160a01b0390911690638db5993b90606401602060405180830381600087803b158015610db257600080fd5b505af1158015610dc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dea91906135e9565b90508015610e315760405162461bcd60e51b81526020600482015260146024820152731053149150511657d111531056515117d253925560621b604482015260640161071e565b807fff64905f73a67fb594e0f940a8075a860db489ad991e032f48c81123eb52d60b83604051610e619190613932565b60405180910390a2600080610e766001612bc7565b91509150600080600080610e9086600160008060016127d5565b935093509350935083600014610edb5760405162461bcd60e51b815260206004820152601060248201526f1053149150511657d4d15457d253925560821b604482015260640161071e565b808385600080516020613e72833981519152856000548a6002604051610f04949392919061361f565b60405180910390a4505050505050505050565b600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f6557600080fd5b505afa158015610f79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9d9190613602565b6001600160a01b0316336001600160a01b031614610ff95760025460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561084757600080fd5b6001546040805163cb23bcb560e01b815290516000926001600160a01b03169163cb23bcb5916004808301926020929190829003018186803b15801561103e57600080fd5b505afa158015611052573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110769190613602565b6002549091506001600160a01b03808316911614156110a85760405163d054909f60e01b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561111857600080fd5b505afa15801561112c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111509190613602565b6001600160a01b0316336001600160a01b03161415801561117c5750600b546001600160a01b03163314155b1561119c57336040516333059da160e11b815260040161071e919061337f565b6001600160a01b038216600090815260036020526040808220805460ff191684151517905551600191600080516020613e9283398151915291a25050565b6040516331cee75f60e21b815260040160405180910390fd5b600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561124157600080fd5b505afa158015611255573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112799190613602565b6001600160a01b0316336001600160a01b0316146112d55760025460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561084757600080fd5b60008181526008602052604090205460ff166113065760405162f20c5d60e01b81526004810182905260240161071e565b600081815260086020526040808220805460ff191690555182917f5cb4218b272fd214168ac43e90fb4d05d6c36f0b17ffb4c2dd07c234d744eb2a91a2604051600390600080516020613e9283398151915290600090a250565b826000805a90503332146113875760405163feb3d07160e01b815260040160405180910390fd5b3360009081526003602052604090205460ff166113b757604051632dd9fc9760e01b815260040160405180910390fd5b6000806113c58b8b8b612bf3565b90925090508b81838c8c8b8b60008080806113e389888a89896127d5565b93509350935093508a84141580156113fd57506000198b14155b156114255760405163ac7411c960e01b815260048101859052602481018c905260440161071e565b808385600080516020613e72833981519152856000548f600060405161144e949392919061361f565b60405180910390a4505050506001600160a01b038c161598506116be97505050505050505057366000602061148483601f6136a9565b61148e91906136c1565b905061020061149e6002836137c7565b6114a891906136c1565b6114b38260066137d6565b6114bd91906136a9565b6114c790846136a9565b92503332146114d9576000915061162e565b6001600160a01b0384161561162e57836001600160a01b031663e83a2d826040518163ffffffff1660e01b815260040160006040518083038186803b15801561152157600080fd5b505afa92505050801561155657506040513d6000823e601f3d908101601f191682016040526115539190810190613818565b60015b61155f5761162e565b80511561162c576000856001600160a01b0316631f6d6ef76040518163ffffffff1660e01b815260040160206040518083038186803b1580156115a157600080fd5b505afa1580156115b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d991906135e9565b905048817f0000000000000000000000000000000000000000000000000000000000000000845161160a91906137d6565b61161491906137d6565b61161e91906136c1565b61162890866136a9565b9450505b505b846001600160a01b031663e3db8a49335a61164990876138ad565b856040518463ffffffff1660e01b8152600401611668939291906138c4565b602060405180830381600087803b15801561168257600080fd5b505af1158015611696573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ba91906138e5565b5050505b50505050505050505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156117135760405162461bcd60e51b815260040161071e90613965565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61038054336001600160a01b0382161461177057604051631194af8760e11b81523360048201526001600160a01b038216602482015260440161071e565b6004541580156117805750600554155b801561178c5750600654155b80156117985750600754155b156117b657604051633bcd329760e21b815260040160405180910390fd5b6004546001600160401b0310806117d557506005546001600160401b03105b806117e857506006546001600160401b03105b806117fb57506007546001600160401b03105b156118195760405163d0afb66160e01b815260040160405180910390fd5b505060048054600a80546005805460068054600780546001600160401b03908116600160c01b026001600160c01b03938216600160801b02939093166001600160801b03958216600160401b026001600160801b0319909816919099161795909517929092169590951717909255600093849055908390559082905555565b467f000000000000000000000000000000000000000000000000000000000000000014156118d957604051635180dd8360e11b815260040160405180910390fd5b7801000000000000000100000000000000010000000000000001600a55565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156119415760405162461bcd60e51b815260040161071e90613965565b6001546001600160a01b03161561196b57604051633bcd329760e21b815260040160405180910390fd5b6001600160a01b03831661199257604051631ad0f74360e01b815260040160405180910390fd5b6000836001600160a01b031663e1758bd86040518163ffffffff1660e01b815260040160206040518083038186803b1580156119cd57600080fd5b505afa9250505080156119fd575060408051601f3d908101601f191682019092526119fa91810190613602565b60015b611a0657611a1c565b6001600160a01b03811615611a1a57600191505b505b8015157f0000000000000000000000000000000000000000000000000000000000000000151514611a605760405163c3e31f8d60e01b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0386169081179091556040805163cb23bcb560e01b8152905163cb23bcb591600480820192602092909190829003018186803b158015611ab457600080fd5b505afa158015611ac8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aec9190613602565b600280546001600160a01b0319166001600160a01b0392909216919091179055611b23611b1e368590038501856134d3565b612f3f565b50600c80546001600160a01b0319166001600160a01b03929092169190911790555050565b600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015611b9657600080fd5b505afa158015611baa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bce9190613602565b6001600160a01b0316336001600160a01b031614611c2a5760025460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561084757600080fd5b611c3381612f3f565b604051600090600080516020613e92833981519152908290a250565b600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015611c9d57600080fd5b505afa158015611cb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cd59190613602565b6001600160a01b0316336001600160a01b031614611d315760025460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561084757600080fd5b60008282604051611d439291906139b1565b604051908190038120607f60f91b6020830152602182015260410160408051601f1981840301815291905280516020909101209050600160ff1b8118620100008310611dc75760405162461bcd60e51b81526020600482015260136024820152726b657973657420697320746f6f206c6172676560681b604482015260640161071e565b60008181526008602052604090205460ff1615611dfa57604051637d17eeed60e11b81526004810182905260240161071e565b437f000000000000000000000000000000000000000000000000000000000000000015611e965760646001600160a01b031663a3b1b31d6040518163ffffffff1660e01b815260040160206040518083038186803b158015611e5b57600080fd5b505afa158015611e6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e9391906135e9565b90505b604080518082018252600181526001600160401b0383811660208084019182526000878152600890915284902092518354915168ffffffffffffffffff1990921690151568ffffffffffffffff0019161761010091909216021790555182907fabca9b7986bc22ad0160eb0cb88ae75411eacfba4052af0b457a9335ef65572290611f2490889088906139c1565b60405180910390a2604051600290600080516020613e9283398151915290600090a25050505050565b6001546040516316bf557960e01b8152600481018390526000916001600160a01b0316906316bf55799060240160206040518083038186803b158015611f9257600080fd5b505afa158015611fa6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fca91906135e9565b92915050565b826000805a3360009081526003602052604090205490915060ff1615801561200357506002546001600160a01b03163314155b1561202157604051632dd9fc9760e01b815260040160405180910390fd5b60008061202f8b8b8b612bf3565b909250905060008c82848c8b8b86808061204c87878388886127d5565b929c5090945092509050888a1480159061206857506000198914155b156120905760405163ac7411c960e01b8152600481018b9052602481018a905260440161071e565b80838b600080516020613e72833981519152856000548d60016040516120b9949392919061361f565b60405180910390a4505050505050505050807ffe325ca1efe4c5c1062c981c3ee74b781debe4ea9440306a96d2a55759c66c208d8d6040516120fc9291906139c1565b60405180910390a25050506001600160a01b038316156116be57366000602061148483601f6136a9565b60008060008060008060008061213a613016565b6001600160401b039384169b50918316995082169750169450505050505b90919293565b600054861161218057604051633eb9f37d60e11b815260040160405180910390fd5b600061223086846121946020890189613a06565b6121a460408a0160208b01613a06565b6121af60018d6138ad565b6040805160f89690961b6001600160f81b03191660208088019190915260609590951b6001600160601b031916602187015260c093841b6001600160c01b031990811660358801529290931b909116603d85015260458401526065830188905260858084018790528151808503909101815260a59093019052815191012090565b600a5490915043906001600160401b031661224e6020880188613a06565b6122589190613a2f565b6001600160401b03161061227f5760405163ad3515d960e01b815260040160405180910390fd5b600a544290600160801b90046001600160401b03166122a46040880160208901613a06565b6122ae9190613a2f565b6001600160401b0316106122d55760405163c76d17e560e01b815260040160405180910390fd5b6000600188111561236d576001546001600160a01b031663d5719dc26122fc60028b6138ad565b6040518263ffffffff1660e01b815260040161231a91815260200190565b60206040518083038186803b15801561233257600080fd5b505afa158015612346573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061236a91906135e9565b90505b60408051602080820184905281830185905282518083038401815260609092019092528051910120600180546001600160a01b03169063d5719dc2906123b3908c6138ad565b6040518263ffffffff1660e01b81526004016123d191815260200190565b60206040518083038186803b1580156123e957600080fd5b505afa1580156123fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061242191906135e9565b1461243f576040516313947fd760e01b815260040160405180910390fd5b60008061244b8a612bc7565b9150915060008a90506000600160009054906101000a90046001600160a01b03166001600160a01b0316635fca4a166040518163ffffffff1660e01b815260040160206040518083038186803b1580156124a457600080fd5b505afa1580156124b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124dc91906135e9565b90508060008080806124f189888388806127d5565b9350935093509350808385600080516020613e72833981519152856000548d6002604051612522949392919061361f565b60405180910390a45050505050505050505050505050505050565b60408051600481526024810182526020810180516001600160e01b03166302881c7960e11b17905290516000918291829160649161257b9190613a5a565b600060405180830381855afa9150503d80600081146125b6576040519150601f19603f3d011682016040523d82523d6000602084013e6125bb565b606091505b50915091508180156125ce575080516020145b9250505090565b60006125df6131ac565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e83a2d826040518163ffffffff1660e01b815260040160006040518083038186803b15801561263b57600080fd5b505afa15801561264f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526126779190810190613818565b905080516000141561269c57604051631e693f5b60e11b815260040160405180910390fd5b6000806126a887613087565b9150915060008351620200007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631f6d6ef76040518163ffffffff1660e01b815260040160206040518083038186803b15801561270d57600080fd5b505afa158015612721573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061274591906135e9565b61274f91906137d6565b61275991906137d6565b6040519091508390600560fc1b90612775908790602001613a76565b60408051601f1981840301815290829052612794939291602001613aac565b6040516020818303038152906040528051906020012082600048116127ba5760006127c4565b6127c448846136c1565b965096509650505050509193909250565b6000806000806000548810156127fe57604051633eb9f37d60e11b815260040160405180910390fd5b600160009054906101000a90046001600160a01b03166001600160a01b031663eca067ad6040518163ffffffff1660e01b815260040160206040518083038186803b15801561284c57600080fd5b505afa158015612860573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061288491906135e9565b8811156128a45760405163925f8bd360e01b815260040160405180910390fd5b60015460405163432cc52b60e11b8152600481018b9052602481018a905260448101889052606481018790526001600160a01b03909116906386598a5690608401608060405180830381600087803b1580156128ff57600080fd5b505af1158015612913573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129379190613aef565b60008c905592965090945092509050861580159061297357507f0000000000000000000000000000000000000000000000000000000000000000155b15612985576129858985486000612991565b95509550955095915050565b327f000000000000000000000000000000000000000000000000000000000000000015612a46576000606c6001600160a01b031663c6f7de0e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156129f457600080fd5b505afa158015612a08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a2c91906135e9565b9050612a3848826136c1565b612a4290846136a9565b9250505b6001600160401b03821115612a945760405162461bcd60e51b8152602060048201526014602482015273115615149057d1d054d7d393d517d55253950d8d60621b604482015260640161071e565b604080514260208201526001600160601b0319606084901b16918101919091526054810186905260748101859052609481018490526001600160c01b031960c084901b1660b482015260009060bc0160408051808303601f190181529082905260015481516020830120637a88b10760e01b84526001600160a01b0386811660048601526024850191909152919350600092911690637a88b10790604401602060405180830381600087803b158015612b4c57600080fd5b505af1158015612b60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b8491906135e9565b9050807fff64905f73a67fb594e0f940a8075a860db489ad991e032f48c81123eb52d60b83604051612bb69190613932565b60405180910390a250505050505050565b6000612bd16131ac565b600080612bdd85613087565b8151602090920191909120969095509350505050565b6000612bfd6131ac565b6000612c0a8560286136a9565b90507f0000000000000000000000000000000000000000000000000000000000000000811115612c7657604051634634691b60e01b8152600481018290527f0000000000000000000000000000000000000000000000000000000000000000602482015260440161071e565b600080612c8286613087565b90925090508615612f0557612cb288886000818110612ca357612ca36139f0565b9050013560f81c60f81b61312e565b612ced5787876000818110612cc957612cc96139f0565b9050013560f81c60f81b60405163359999ab60e11b815260040161071e91906131d3565b600160ff1b8888600081612d0357612d036139f0565b6001600160f81b031992013592909216161580159150612d24575060218710155b15612d78576000612d39602160018a8c613b25565b612d4291613b4f565b60008181526008602052604090205490915060ff16612d765760405162f20c5d60e01b81526004810182905260240161071e565b505b600560f91b8888600081612d8e57612d8e6139f0565b6001600160f81b031992013592909216161580159150612daf575060648710155b15612f05576040805160a080820183526000808352606060208085018290528486018390528185018390528551610100810187528281529081018290529485018290528401819052608080850182905291840181905260c0840181905260e0840152810191909152612e24886001818c613b25565b810190612e319190613c97565b60808601819052606086019190915263ffffffff9091166040808601919091526020850192909252918352600c5490516306fc600560e01b81526001600160a01b03909116916306fc600591612e8a9190600401613dae565b60206040518083038186803b158015612ea257600080fd5b505afa158015612eb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612eda91906138e5565b612f0357806080015160c001516040516334bff0f960e01b815260040161071e91815260200190565b505b818888604051602001612f1a93929190613e33565b60408051601f1981840301815291905280516020909101209890975095505050505050565b80516001600160401b031080612f5f575060208101516001600160401b03105b80612f74575060408101516001600160401b03105b80612f89575060608101516001600160401b03105b15612fa7576040516309cfba7560e01b815260040160405180910390fd5b8051600a8054602084015160408501516060909501516001600160401b03908116600160c01b026001600160c01b03968216600160801b02969096166001600160801b03928216600160401b026001600160801b03199094169190951617919091171691909117919091179055565b6000808080467f00000000000000000000000000000000000000000000000000000000000000001461305357506001925082915081905080612158565b5050600a546001600160401b038082169350600160401b820481169250600160801b8204811691600160c01b900416612158565b60606130916131ac565b600061309b6131a1565b9050600081600001518260200151836040015184606001518860405160200161310395949392919060c095861b6001600160c01b0319908116825294861b8516600882015292851b8416601084015290841b8316601883015290921b16602082015260280190565b6040516020818303038152906040529050602881511461312557613125613e5b565b94909350915050565b60006001600160f81b03198216158061315457506001600160f81b03198216600160ff1b145b8061316c57506001600160f81b03198216601160fb1b145b8061318457506001600160f81b03198216600160fd1b145b80611fca57506001600160f81b03198216600560f91b1492915050565b6131a96131ac565b90565b60408051608081018252600080825260208201819052918101829052606081019190915290565b6001600160f81b031991909116815260200190565b6000602082840312156131fa57600080fd5b5035919050565b6001600160a01b038116811461321657600080fd5b50565b801515811461321657600080fd5b6000806040838503121561323a57600080fd5b823561324581613201565b9150602083013561325581613219565b809150509250929050565b60006020828403121561327257600080fd5b813561327d81613201565b9392505050565b600080600080600060a0868803121561329c57600080fd5b853594506020860135935060408601356132b581613201565b94979396509394606081013594506080013592915050565b60008083601f8401126132df57600080fd5b5081356001600160401b038111156132f657600080fd5b60208301915083602082850101111561330e57600080fd5b9250929050565b60008060008060006080868803121561332d57600080fd5b8535945060208601356001600160401b0381111561334a57600080fd5b613356888289016132cd565b90955093505060408601359150606086013561337181613201565b809150509295509295909350565b6001600160a01b0391909116815260200190565b600080600080600080600060c0888a0312156133ae57600080fd5b8735965060208801356001600160401b038111156133cb57600080fd5b6133d78a828b016132cd565b9097509550506040880135935060608801356133f281613201565b969995985093969295946080840135945060a09093013592915050565b600080600083850360c081121561342557600080fd5b843561343081613201565b93506080601f198201121561344457600080fd5b5060208401915060a084013561345981613201565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b038111828210171561349d5761349d613464565b60405290565b604051601f8201601f191681016001600160401b03811182821017156134cb576134cb613464565b604052919050565b6000608082840312156134e557600080fd5b604051608081018181106001600160401b038211171561350757613507613464565b8060405250823581526020830135602082015260408301356040820152606083013560608201528091505092915050565b6000806020838503121561354b57600080fd5b82356001600160401b0381111561356157600080fd5b61356d858286016132cd565b90969095509350505050565b60008060008060008060e0878903121561359257600080fd5b86359550602087013560ff811681146135aa57600080fd5b945060808701888111156135bd57600080fd5b60408801945035925060a08701356135d481613201565b8092505060c087013590509295509295509295565b6000602082840312156135fb57600080fd5b5051919050565b60006020828403121561361457600080fd5b815161327d81613201565b600060e0820190508582528460208301526001600160401b038085511660408401528060208601511660608401528060408601511660808401528060608601511660a0840152506004831061368457634e487b7160e01b600052602160045260246000fd5b8260c083015295945050505050565b634e487b7160e01b600052601160045260246000fd5b600082198211156136bc576136bc613693565b500190565b6000826136de57634e487b7160e01b600052601260045260246000fd5b500490565b600181815b8085111561371e57816000190482111561370457613704613693565b8085161561371157918102915b93841c93908002906136e8565b509250929050565b60008261373557506001611fca565b8161374257506000611fca565b816001811461375857600281146137625761377e565b6001915050611fca565b60ff84111561377357613773613693565b50506001821b611fca565b5060208310610133831016604e8410600b84101617156137a1575081810a611fca565b6137ab83836136e3565b80600019048211156137bf576137bf613693565b029392505050565b600061327d60ff841683613726565b60008160001904831182151516156137f0576137f0613693565b500290565b60006001600160401b0382111561380e5761380e613464565b5060051b60200190565b6000602080838503121561382b57600080fd5b82516001600160401b0381111561384157600080fd5b8301601f8101851361385257600080fd5b8051613865613860826137f5565b6134a3565b81815260059190911b8201830190838101908783111561388457600080fd5b928401925b828410156138a257835182529284019290840190613889565b979650505050505050565b6000828210156138bf576138bf613693565b500390565b6001600160a01b039390931683526020830191909152604082015260600190565b6000602082840312156138f757600080fd5b815161327d81613219565b60005b8381101561391d578181015183820152602001613905565b8381111561392c576000848401525b50505050565b6020815260008251806020840152613951816040850160208701613902565b601f01601f19169190910160400192915050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b8183823760009101908152919050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215613a1857600080fd5b81356001600160401b038116811461327d57600080fd5b60006001600160401b03808316818516808303821115613a5157613a51613693565b01949350505050565b60008251613a6c818460208701613902565b9190910192915050565b815160009082906020808601845b83811015613aa057815185529382019390820190600101613a84565b50929695505050505050565b60008451613abe818460208901613902565b6001600160f81b031985169083019081528351613ae2816001840160208801613902565b0160010195945050505050565b60008060008060808587031215613b0557600080fd5b505082516020840151604085015160609095015191969095509092509050565b60008085851115613b3557600080fd5b83861115613b4257600080fd5b5050820193919092039150565b80356020831015611fca57600019602084900360031b1b1692915050565b803563ffffffff81168114613b8157600080fd5b919050565b600082601f830112613b9757600080fd5b81356020613ba7613860836137f5565b82815260059290921b84018101918181019086841115613bc657600080fd5b8286015b84811015613be15780358352918301918301613bca565b509695505050505050565b60006101008284031215613bff57600080fd5b613c0761347a565b905081356001600160401b0380821115613c2057600080fd5b613c2c85838601613b86565b83526020840135915080821115613c4257600080fd5b50613c4f84828501613b86565b60208301525060408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e082015292915050565b600080600080600060a08688031215613caf57600080fd5b853594506020808701356001600160401b0380821115613cce57600080fd5b818901915089601f830112613ce257600080fd5b813581811115613cf457613cf4613464565b613d06601f8201601f191685016134a3565b8181528b85838601011115613d1a57600080fd5b818585018683013760008583830101528098505050613d3b60408a01613b6d565b9550606089013594506080890135925080831115613d5857600080fd5b5050613d6688828901613bec565b9150509295509295909350565b600081518084526020808501945080840160005b83811015613da357815187529582019590820190600101613d87565b509495945050505050565b6020815260008251610100806020850152613dcd610120850183613d73565b91506020850151601f19858403016040860152613dea8382613d73565b9250506040850151606085015260608501516080850152608085015160a085015260a085015160c085015260c085015160e085015260e085015181850152508091505092915050565b60008451613e45818460208901613902565b8201838582376000930192835250909392505050565b634e487b7160e01b600052600160045260246000fdfe7394f4a19a13c7b92b5bb71033245305946ef78452f7b4986ac1390b5df4ebd7ea8787f128d10b2cc0317b0c3960f9ad447f7f6c1ed189db1083ccffd20f456ea26469706673582212208eb238988e93d646f2f55e373855b9261c331e62d59c1950099f36854f740aea64736f6c63430008090033";

type SequencerInboxStubConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SequencerInboxStubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SequencerInboxStub__factory extends ContractFactory {
  constructor(...args: SequencerInboxStubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    bridge_: string,
    sequencer_: string,
    maxTimeVariation_: ISequencerInbox.MaxTimeVariationStruct,
    maxDataSize_: BigNumberish,
    reader4844_: string,
    isUsingFeeToken_: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SequencerInboxStub> {
    return super.deploy(
      bridge_,
      sequencer_,
      maxTimeVariation_,
      maxDataSize_,
      reader4844_,
      isUsingFeeToken_,
      overrides || {}
    ) as Promise<SequencerInboxStub>;
  }
  override getDeployTransaction(
    bridge_: string,
    sequencer_: string,
    maxTimeVariation_: ISequencerInbox.MaxTimeVariationStruct,
    maxDataSize_: BigNumberish,
    reader4844_: string,
    isUsingFeeToken_: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      bridge_,
      sequencer_,
      maxTimeVariation_,
      maxDataSize_,
      reader4844_,
      isUsingFeeToken_,
      overrides || {}
    );
  }
  override attach(address: string): SequencerInboxStub {
    return super.attach(address) as SequencerInboxStub;
  }
  override connect(signer: Signer): SequencerInboxStub__factory {
    return super.connect(signer) as SequencerInboxStub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SequencerInboxStubInterface {
    return new utils.Interface(_abi) as SequencerInboxStubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SequencerInboxStub {
    return new Contract(address, _abi, signerOrProvider) as SequencerInboxStub;
  }
}
